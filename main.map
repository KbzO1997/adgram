{"version":3,"sources":["webpack:///script.js","webpack:///webpack/bootstrap 1d579b56ae93531992f9","webpack:///../node_modules/@firebase/database/dist/index.cjs.js","webpack:///../node_modules/@firebase/util/dist/index.cjs.js","webpack:///../node_modules/timers-browserify/main.js","webpack:///../node_modules/@firebase/messaging/node_modules/tslib/tslib.es6.js","webpack:///../node_modules/@firebase/database/node_modules/tslib/tslib.es6.js","webpack:///./components/footer.js","webpack:///./components/timeline.js","webpack:///../node_modules/Firebase/app/index.js","webpack:///./index.js","webpack:///./components/helpers/photos_db.js","webpack:///../node_modules/Firebase/database/index.js","webpack:///../node_modules/Firebase/messaging/index.js","webpack:///../node_modules/Firebase/auth/index.js","webpack:///../node_modules/firebase/auth/index.js","webpack:///../node_modules/@firebase/auth/dist/auth.js","webpack:///../node_modules/@firebase/messaging/dist/index.esm.js","webpack:///../node_modules/@firebase/logger/dist/index.esm.js","webpack:///./components/camera.js","webpack:///../node_modules/@firebase/app/dist/index.esm.js","webpack:///../node_modules/firebase/index.js","webpack:///./components/header.js","webpack:///./components/auth.js","webpack:///../node_modules/firebase/storage/index.js","webpack:///../node_modules/@firebase/polyfill/node_modules/whatwg-fetch/fetch.js","webpack:///../node_modules/firebase/database/index.js","webpack:///../node_modules/webpack/buildin/global.js","webpack:///./components/upload_progress.js","webpack:///../node_modules/Firebase/index.js","webpack:///./components/helpers/init.js","webpack:///../node_modules/Firebase/storage/index.js","webpack:///../node_modules/firebase/app/index.js","webpack:///./components/profile.js","webpack:///../node_modules/process/browser.js","webpack:///./components/app.js","webpack:///../node_modules/setimmediate/setImmediate.js","webpack:///../node_modules/@firebase/util/node_modules/tslib/tslib.es6.js","webpack:///./components/helpers/messages.js","webpack:///../node_modules/firebase/messaging/index.js","webpack:///./components/uploader.js","webpack:///../node_modules/@firebase/polyfill/dist/index.esm.js","webpack:///../node_modules/@firebase/storage/dist/index.esm.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","2vmM","process","decodePath","pathString","pathStringDecoded","pieces","split","length","piece","decodeURIComponent","replace","e","decodeQuery","queryString","results","startsWith","substring","_i","_a","segment","kv","warn","NAME_ONLY_COMPARATOR","left","right","nameCompare","NAME_COMPARATOR","nodeFromJSON$1","json","priority","ChildrenNode","EMPTY_NODE","util","assert","LeafNode","Array","USE_HINZE","node_1","jsonObj_1","forEach","key","childData","contains","childNode","isLeafNode","isEmpty","updateImmediateChild","updatePriority","children_1","childrenHavePriority_1","hinzeJsonObj_1","child","getPriority","push","NamedNode","childSet","buildChildSet","namedNode","sortedChildSet","PRIORITY_INDEX","getCompare","IndexMap",".priority","Default","registerDatabase","instance","namespace","INTERNAL","registerService","app","unused","url","RepoManager","getInstance","databaseFromApp","Reference","Query","Database","enableLogging","ServerValue","TEST_ACCESS","isNodeSdk","value","__EMPTY_NODE","MAX_NODE","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","_defaultIndexMap","logger","tslib_1","firebase","ex","DOMStorageWrapper","domStorage_","this","prefix_","set","removeItem","prefixedName_","setItem","stringify","storedVal","getItem","jsonEval","remove","toString","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","window","domStorage","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","id","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","var_args","arguments","message","isArray","apply","logger$1","firstLog_","logger_","persistent","logLevel","LogLevel","VERBOSE","log","bind","logWrapper","prefix","concat","error","fatal","Error","warnIfPageIsSecure","location","protocol","indexOf","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","document","readyState","called_1","wrappedFn_1","body","setTimeout","Math","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","sort","splitStringBySize","segsize","len","dataSegs","each","val","doubleToIEEE754String","v","f","ln","bits","Infinity","abs","pow","min","LN2","round","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","query","reason","path","toUpperCase","INTEGER_REGEXP_","RegExp","intVal","exceptionGuard","stack","beingCrawled","search","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","getFront","getLength","popFront","getBack","toUrlEncodedString","encodeURIComponent","String","slice","begin","parent","childPathObj","childPieces","relativePath","outerPath","innerPath","outer","inner","comparePaths","leftKeys","rightKeys","cmp","equals","other","j","ValidationPath","errorPrefix_","parts_","byteLength_","max","stringLength","checkValid_","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","LONG_POLLING","RepoInfo","host","secure","webSocketOnly","persistenceKey","domain","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","type","params","connURL","pairs","toURLString","parseRepoInfo","dataURL","parsedUrl","parseURL","subdomain","scheme","repoInfo","port","colonInd","slashInd","questionMarkInd","queryParams","parts","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","validateArgCount","validateCallback","deferred","Deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","nextPushId","PUSH_CHARS","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","charAt","random","node","Wrap","Index","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","_super","__extends","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","priorityHashText","validatePriorityNode","priorityNode","value_","priorityNode_","lazyHash_","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","newChildNode","updateChild","front","numChildren","forEachChild","index","action","exportFormat",".value","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","PriorityIndex","aPriority","bPriority","indexCmp","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","result","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","childList","keyFn","mapSortFn","buildBalancedTree","low","high","middle","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","fallbackObject","indexes_","indexSet_","indexKey","sortedMap","safeGet","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","iter","next","newIndex","indexName","newIndexSet","clone","newIndexes","addToIndexes","_this","map","indexedChildren","existingSnap","newChildren","removeFromIndexes","children_","indexMap_","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","__referenceConstructor","OperationType","ValueIndex","valueNode","VALUE_INDEX","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","ref","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherCount","getCount","otherKey","getAnyKey","thisKey","every","cb","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","on","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","off","validateContextObject","removeEventCallbackForQuery","once","userCallback","cancelOrContext","firstCall","catch","onceCallback","resolve","err","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","CountedSet","add","item","clear","SparseSnapshotTree","find","childKey","remember","forget","self_1","tree","forEachTree","prefixPath","func","generateWithValues","values","Date","getTime","resolveDeferredValue","serverValues","resolveDeferredValueTree","resolvedTree","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","source","operationForChild","children","subtree","Empty","EmptyChildren","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap_","oldChange","oldType","getChanges","getValues","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","calcCompleteEventCache","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","registrations","filteredChanges","filter","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","cache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","existing","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint","views_","optCompleteServerCache","view","events_1","serverCacheComplete","eventCacheComplete","removed","hadCompleteView","hasCompleteView","viewQueryId","getQueryViews","viewForQuery","getCompleteView","viewExistsForQuery","findValue","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite_","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","write","mergeAtPath","layerTree_","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","findKey","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap_","queryToTagMap_","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","op","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","maybeChildSyncPoint","childMap","views_1","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","status","error$$1","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","AuthTokenProvider","app_","getToken","forceRefresh","then","Promise","addTokenChangeListener","removeTokenChangeListener","notifyForInvalidToken","errorMessage","options","StatsCollection","counters_","incrementCounter","amount","deepCopy","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","delta","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","visible_","OnlineMonitor","online_","isMobileCordova","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","this_1","toProcess","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","BrowserPollConnection","connId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","theURL","nodeRestRequest","newRequest_","curDataString","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","serial","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","CONSTANTS","NODE_ADMIN","headers","User-Agent","SDK_VERSION","platform","env","NODE_ENV","proxy","origin","mySock","onopen","onclose","onmessage","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidRegex","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports_1","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeout_ms","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","version","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens_","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","listen","currentHashFn","listenSpec","sendListen_","req","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isAdmin","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","accessToken","interrupt","resume","serverTimeOffset","q","normalizedPathString","statusCode","explanation","console","clientName","NODE_CLIENT","isReactNative","ReadonlyRestClient","getListenId_","listenId","thisListen","queryStringParamaters","toRestQueryStringParameters","restRequest_","status_1","queryStringParameters","authTokenData","authToken","querystring","xhr","XMLHttpRequest","responseText","Repo","forceRestClient","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","authTokenProvider","authOverride","statsReporter_","transactions_init_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offsetNode","offset","generateServerValues","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","showDelta","longestName","reduce","previousValue","currentValue","statsIncrementCounter","metric","__database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","startName","endName","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","inRange","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","TransactionStatus","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","valueCallback","watchRef","unwatcher","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","txnsToRerun","abortTransaction","currentNode","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","from","abortTransactionsOnNode_","lastSent","_staticInstance","repos_","useRestClient_","appName","dbUrl","createRepo","deleteRepo","appRepos","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","TIMESTAMP",".sv","delete","__awaiter","__generator","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","freeze","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","opt_onComplete","opt_hash","ConnectionTarget","listens","firebaseRef","3mJm","58xA","deepExtend","target","constructor","dateValue","prop","patchProperty","patchCapture","captureFake","captureStackTrace","JSON","parse","createSubscribe","executor","onNoObservers","ObserverProxy","subscribe","onError","implementsAnyMethods","methods","methods_1","method","noop","argName","validateNamespace","assertion","out","charCodeAt","byteArrayToString","bytes","pos","c1","fromCharCode","c2","c3","c4","u","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","input","opt_webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","decodeStringToByteArray","charToByteMap","haveByte4","byte4","base64Decode","getUA","ERROR_NAME","FirebaseError","ErrorFactory","create","err_1","service","serviceName","errors","pattern","template","fullCode","decode","header","claims","signature","isValidTimestamp","validSince","validUntil","issuedAtTime","decoded","extend","objTo","objFrom","isNonNullObject","rv","opt_obj","opt_this","querystringParams","arrayVal","querystringDecode","Hash","blockSize","chain_","buf_","W_","pad_","inbuf_","total_","reset","compress_","buf","opt_offset","W","opt_length","lengthMinusBlock","inbuf","totalBits","observers","unsubscribes","observerCount","task","finalized","forEachObserver","observer","nextOrObserver","unsub","unsubscribeOne","finalError","sendOne","minCount","maxCount","argCount","argError","stringToByteArray$1","6orE","global","Timeout","clearFn","_id","_clearFn","scope","Function","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","setImmediate","clearImmediate","7tE5","__webpack_exports__","__","extendStatics","thisArg","_arguments","P","generator","fulfilled","step","rejected","done","verb","TypeError","_","y","label","ops","trys","g","sent","throw","return","Symbol","__assign","setPrototypeOf","__proto__","assign","7wws","__rest","getOwnPropertySymbols","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__exportStar","__values","__read","ar","__spread","__await","__asyncGenerator","settle","fulfill","asyncIterator","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","__importStar","mod","default","__importDefault","Ahgo","_firebase","_auth","_upload_progress","footer","footerScripts","nav","querySelector","sections","querySelectorAll","preventDefault","scroll","parentElement","btn","btnSection","className","section","classList","cleanProgress","signOut","FgbG","_firebase2","timeline","dbRef","photos","timelineScripts","photoTemplate","photoURL","avatar","displayName","timelinePhotos","photo","insertAdjacentHTML","IxUF","JkW7","_style","_init","init","isAuth","getElementById","ga","N5iS","savePhotoInDB","user","uid","_Firebase","_Firebase2","NohU","OJYo","PHi2","RFlV","RJVP","ba","ca","da","propertyIsEnumerable","ea","fa","ha","ka","la","unshift","ma","lb","ad","oa","$goog_Thenable","pa","qa","ra","sa","ta","ua","xa","ya","va","Aa","Da","Ea","Fa","za","Ga","w","Ha","Ia","Ja","La","Ma","Na","Oa","Pa","Qa","Ra","Sa","x","Ta","Ua","Xa","Ya","Za","ab","$a","bb","db","MessageChannel","postMessage","documentElement","port1","port2","rb","eb","fb","gb","hb","ib","Window","wa","z","jb","kb","mb","nb","ob","qb","pb","A","B","sb","tb","ub","Zb","xb","yb","zb","wb","Ab","vb","E","Kc","Lc","Bb","Cb","Ub","Db","Eb","Fb","Gb","Hb","ia","ja","Ib","Jb","Kb","Lb","Rb","documentMode","Wb","Ka","Sb","exec","D","cc","relatedTarget","button","screenY","screenX","clientY","clientX","metaKey","shiftKey","altKey","ctrlKey","pointerId","pointerType","changedTouches","srcElement","Pb","nodeName","fromElement","toElement","pageX","pageY","dc","defaultPrevented","gc","capture","fc","hc","jc","lc","kc","pc","qc","rc","ec","sc","tc","uc","mc","vc","bc","wc","addListener","removeListener","oc","xc","$b","yc","F","zc","removeEventListener","detachEvent","nc","Ac","Bc","keyCode","returnValue","Cc","handleEvent","G","Mb","Dc","Ec","Fc","Gc","S","Hc","U","Ic","Mc","Oc","Pc","Qc","Rc","Sc","Tc","Nc","Uc","$c","Vc","H","bd","cd","dd","decodeURI","encodeURI","ed","fd","gd","hd","jd","kd","md","nd","od","pd","qd","rd","sd","td","ud","vd","wd","xd","yd","zd","Bd","Ad","Cd","Dd","Ed","Fd","Gd","Hd","Id","cssText","htmlFor","Jd","setAttribute","lastIndexOf","Kd","ld","Ld","createTextNode","nodeType","Md","Nd","Od","Pd","Boolean","Qd","valueOf","isFinite","Sd","Rd","Td","I","C","Xb","Ud","Vd","Wd","Xd","Yd","Zd","$d","ae","be","screen","availHeight","availWidth","width","height","top","resizable","statusbar","toolbar","ce","scrollbars","standalone","noreferrer","initMouseEvent","dispatchEvent","Ob","opener","noopener","focus","de","closed","fe","ge","he","ie","je","ke","importScripts","le","me","oe","ne","J","pe","localStorage","qe","indexedDB","re","se","te","ue","ve","we","xe","ye","___jsl","L","CP","ze","Ae","visibilityState","Be","Ce","toUTCString","De","K","Fe","He","Ie","Je","Ke","Le","Me","Ne","Oe","Pe","Qe","Re","Se","Te","M","Ue","Ve","We","Xe","Ye","Ze","$e","af","bf","cf","df","ef","ff","continueUrl","canHandleCodeInApp","androidPackageName","androidMinimumVersion","androidInstallApp","iOSBundleId","gf","Ba","kf","lf","jf","mf","hf","nf","sub","na","provider_id","sign_in_provider","is_anonymous","of","pf","iss","aud","exp","tf","sf","uf","vf","wf","xf","yf","zf","Af","Bf","Cf","isNewUser","kind","rawUserInfo","providerId","profile","login","screenName","Df","Ef","Ff","Gf","Hf","idToken","oauthToken","oauthTokenSecret","Jf","id_token","access_token","secret","oauth_token_secret","postBody","requestUri","Mf","isOAuthProvider","N","rf","Nf","Of","Pf","Qf","Rf","Sf","Tf","qf","Uf","Vf","O","EMAIL_LINK_SIGN_IN_METHOD","EMAIL_PASSWORD_SIGN_IN_METHOD","$f","ag","bg","Z","cg","temporaryProof","phoneNumber","sessionInfo","fg","auth","hg","ig","oauthAccessToken","oauthIdToken","jg","kg","lg","eventId","urlResponse","mg","og","pg","qg","email","sg","tg","vg","wg","ActiveXObject","xg","yg","XDomainRequest","statusText","onprogress","ontimeout","zg","Ag","Cg","Dg","Ig","Lg","Kg","Jg","Gg","Q","Hg","Mg","Ng","Og","Headers","Pg","Qg","Rg","Ug","ug","Vg","Wg","FormData","Tg","setRequestHeader","responseType","withCredentials","Xg","Yg","abort","Zg","$g","ah","aa","bh","ch","Sg","Eg","dh","eh","hh","ih","gh","jh","kh","lh","mh","Ca","nh","oh","fh","ph","qh","rh","sh","th","uh","attributes","charset","vh","getElementsByTagName","tagName","wh","xh","secureTokenEndpoint","secureTokenTimeout","yh","secureTokenHeaders","zh","firebaseEndpoint","firebaseTimeout","Ah","firebaseHeaders","Bh","Dh","Eh","Fh","Ch","Gh","gapi","client","Ih","Hh","Jh","grant_type","refresh_token","Kh","Lh","Mh","rg","Nh","Oh","Ph","identifier","continueUri","allProviders","Qh","signinMethods","Rh","Sh","authorizedDomains","Th","Uh","gg","ai","ci","di","deleteProvider","ei","fi","needConfirmation","gi","If","returnIdpCredential","hi","Kf","ii","Lf","autoCreate","ji","ki","oobCode","T","R","returnSecureToken","endpoint","Tb","keyInvalid","ipRefererBlocked","INVALID_CUSTOM_TOKEN","CREDENTIAL_MISMATCH","MISSING_CUSTOM_TOKEN","INVALID_IDENTIFIER","MISSING_CONTINUE_URI","INVALID_EMAIL","INVALID_PASSWORD","USER_DISABLED","MISSING_PASSWORD","EMAIL_EXISTS","PASSWORD_LOGIN_DISABLED","INVALID_IDP_RESPONSE","FEDERATED_USER_ID_ALREADY_LINKED","INVALID_MESSAGE_PAYLOAD","INVALID_RECIPIENT_EMAIL","INVALID_SENDER","EMAIL_NOT_FOUND","EXPIRED_OOB_CODE","INVALID_OOB_CODE","MISSING_OOB_CODE","CREDENTIAL_TOO_OLD_LOGIN_AGAIN","INVALID_ID_TOKEN","TOKEN_EXPIRED","USER_NOT_FOUND","CORS_UNSUPPORTED","DYNAMIC_LINK_NOT_ACTIVATED","INVALID_APP_ID","TOO_MANY_ATTEMPTS_TRY_LATER","WEAK_PASSWORD","OPERATION_NOT_ALLOWED","USER_CANCELLED","CAPTCHA_CHECK_FAILED","INVALID_APP_CREDENTIAL","INVALID_CODE","INVALID_PHONE_NUMBER","INVALID_SESSION_INFO","INVALID_TEMPORARY_PROOF","MISSING_APP_CREDENTIAL","MISSING_CODE","MISSING_PHONE_NUMBER","MISSING_SESSION_INFO","QUOTA_EXCEEDED","SESSION_EXPIRED","INVALID_CONTINUE_URI","MISSING_ANDROID_PACKAGE_NAME","MISSING_IOS_BUNDLE_ID","UNAUTHORIZED_DOMAIN","INVALID_OAUTH_CLIENT_ID","INVALID_CERT_HASH","ui","ti","wi","xi","yi","where","messageHandlersFilter","position","dontclear","restyle","setHideOnLeave","zi","ping","Ai","Bi","register","Ei","Di","Ci","Fi","Gi","Hi","Ii","Ji","ee","Ki","Li","Ni","Oi","authEvent","Mi","webStorageSupport","Pi","reactNative","AsyncStorage","Qi","Ri","Ti","deleteDatabase","onsuccess","Ui","onupgradeneeded","createObjectStore","keyPath","objectStoreNames","Vi","Wi","objectStore","Xi","Yi","errorCode","Zi","Jc","$i","Si","Y","aj","bj","cj","dj","ej","fj","gj","hj","sessionStorage","ij","Browser","jj","Node","kj","ReactNative","lj","Worker","mj","pj","oj","qj","nj","sj","rj","tj","uj","vj","wj","xj","yj","oldValue","newValue","zj","Bj","Aj","Cj","Dj","Ej","Fj","Uint8Array","Int32Array","Gj","Hj","Mj","ic","El","Nj","Oj","Pj","Qj","Rj","Sj","Tj","Lj","Vj","ibi","apn","appDisplayName","Xj","Uj","Yj","Wj","handleOpenURL","ng","Zj","bk","ak","ck","dk","ek","fk","gk","unknown","signInViaRedirect","linkViaRedirect","reauthViaRedirect","signInViaPopup","linkViaPopup","reauthViaPopup","hk","vi","ik","jk","kk","lk","ok","qk","pk","rk","sk","tk","uk","vk","nk","wk","xk","yk","zk","auth_time","iat","expirationTime","authTime","signInProvider","Ak","Ck","Bk","stop","Dk","Ek","refreshToken","Fk","expiresIn","Gk","expires_in","Hk","lastSignInTime","creationTime","Ik","Jk","Kk","Lk","apiKey","authDomain","Mk","Nk","Ok","V","X","Pk","Qk","Rk","Sk","Tk","Uk","Vk","Wk","Xk","emailVerified","isAnonymous","createdAt","lastLoginAt","providerData","Yk","Zk","$k","al","bl","cl","dl","el","fl","gl","qi","hl","providerUserInfo","rawId","photoUrl","jl","il","additionalUserInfo","operationType","kl","reload","ll","ml","$","ol","pl","ql","rl","stsTokenManager","redirectEventId","sl","tl","ul","vl","wl","xl","zl","Al","Bl","yl","Cl","Dl","Fl","Gl","Hl","Il","Jl","Yb","Kl","logFramework","Ll","Ml","Nl","Ol","Nb","Pl","Ql","Rl","Sl","currentUser","Ul","_lat","getUid","Tl","Vl","theme","Wl","Xl","hasChildNodes","Yl","Zl","$l","am","bm","em","gm","grecaptcha","cm","hm","render","fm","dm","im","jm","km","lm","mm","nm","om","pm","Element","qm","rm","App","sm","tm","um","verify","vm","wm","some","trim","Va","Wa","Qb","Vb","compatMode","ac","2","3","4","Wc","Xc","Yc","Zc","cellpadding","cellspacing","colspan","frameborder","maxlength","nonce","role","rowspan","usemap","valign","\"","\\","/","\b","\f","\n","\r","\t","\u000b","onLine","connection","Ee","Ge","abcd","argument-error","app-not-authorized","app-not-installed","captcha-check-failed","code-expired","cordova-not-ready","cors-unsupported","credential-already-in-use","custom-token-mismatch","requires-recent-login","dynamic-link-not-activated","email-already-in-use","expired-action-code","cancelled-popup-request","internal-error","invalid-app-credential","invalid-app-id","invalid-user-token","invalid-auth-event","invalid-verification-code","invalid-continue-uri","invalid-cordova-configuration","invalid-custom-token","invalid-email","invalid-api-key","invalid-cert-hash","invalid-credential","invalid-persistence-type","invalid-message-payload","invalid-oauth-provider","invalid-oauth-client-id","unauthorized-domain","invalid-action-code","wrong-password","invalid-phone-number","invalid-recipient-email","invalid-sender","invalid-verification-id","missing-android-pkg-name","auth-domain-config-required","missing-app-credential","missing-verification-code","missing-continue-uri","missing-iframe-start","missing-ios-bundle-id","missing-phone-number","missing-verification-id","app-deleted","account-exists-with-different-credential","network-request-failed","no-auth-event","no-such-provider","operation-not-allowed","operation-not-supported-in-this-environment","popup-blocked","popup-closed-by-user","provider-already-linked","quota-exceeded","redirect-cancelled-by-user","redirect-operation-pending","user-token-expired","too-many-requests","unauthorized-continue-uri","unsupported-persistence-type","user-cancelled","user-not-found","user-disabled","user-mismatch","user-signed-out","weak-password","web-storage-unsupported","signInMethod","Wf","Xf","Yf","Zf","PROVIDER_ID","dg","eg","verificationId","verificationCode","recaptchaToken","PHONE_SIGN_IN_METHOD","unsubscribe","getResponseHeader","contentType","getAllResponseHeaders","Bg","Fg","credentials","fetch","Request","text","append","entries","getResponse","mozResponseArrayBuffer","Content-Type","setApiKey","setToken","authType","Vh","Wh","Xh","deleteAttribute","requestType","Yh","Zh","$h","bi","li","newPassword","mi","ni","oi","pi","ri","recaptchaSiteKey","si","fbase_key","getAll","openCursor","NONE","Ij","Jj","Kj","mk","confirm","users","localId","passwordHash","languages","language","userLanguage","addAuthTokenListener","removeAuthTokenListener","execute","firstChild","Persistence","LOCAL","SESSION","Auth","extendNamespace","SloY","isArrayBufferEqual","byteLength","viewA","DataView","viewB","getUint8","toBase64","arrayBuffer","uint8Version","arrayBufferToBase64","base64ToArrayBuffer","base64String","padding","repeat","rawData","outputArray","handleDb","OLD_OBJECT_STORE_NAME","iidModel","IIDModel","openCursorRequest","event","cursor","tokenDetails","deleteToken","fcmSenderId","fcmToken","fcmPushSet","continue","OLD_DB_NAME","cleanV1","promisify","validateInputs","errorFactory","ERROR_CODES","BAD_TOKEN","swScope","BAD_SCOPE","vapidKey","BAD_VAPID_KEY","BAD_SUBSCRIPTION","ArrayBuffer","p256dh","BAD_SENDER_ID","BAD_PUSH_SET","isTokenStillValid","pushSubscription","publicVapidKey","buffer","isEndpointEqual","isAuthEqual","isP256dhEqual","getClientList","clients","matchAll","includeUncontrolled","createNewMsg","msgType","msgData","MessageParameter","TYPE_OF_MSG","DATA","registerMessaging","factoryMethod","SWController","WindowController","namespaceExports","Messaging","__WEBPACK_IMPORTED_MODULE_0__firebase_util__","__WEBPACK_IMPORTED_MODULE_1_tslib__","__WEBPACK_IMPORTED_MODULE_2__firebase_app__","AVAILABLE_IN_WINDOW","AVAILABLE_IN_SW","SHOULD_BE_INHERITED","INCORRECT_GCM_SENDER_ID","PERMISSION_DEFAULT","PERMISSION_BLOCKED","UNSUPPORTED_BROWSER","NOTIFICATIONS_BLOCKED","FAILED_DEFAULT_REGISTRATION","SW_REGISTRATION_EXPECTED","GET_SUBSCRIPTION_FAILED","INVALID_SAVED_TOKEN","SW_REG_REDUNDANT","TOKEN_SUBSCRIBE_FAILED","TOKEN_SUBSCRIBE_NO_TOKEN","TOKEN_SUBSCRIBE_NO_PUSH_SET","TOKEN_UNSUBSCRIBE_FAILED","TOKEN_UPDATE_FAILED","TOKEN_UPDATE_NO_TOKEN","USE_SW_BEFORE_GET_TOKEN","INVALID_DELETE_TOKEN","DELETE_TOKEN_NOT_FOUND","DELETE_SCOPE_NOT_FOUND","BG_HANDLER_FUNCTION_EXPECTED","NO_WINDOW_CLIENT_TO_MSG","UNABLE_TO_RESUBSCRIBE","NO_FCM_TOKEN_FOR_RESUBSCRIBE","FAILED_TO_DELETE_TOKEN","NO_SW_IN_REG","FAILED_DELETE_VAPID_KEY","INVALID_PUBLIC_VAPID_KEY","USE_PUBLIC_KEY_BEFORE_GET_TOKEN","PUBLIC_KEY_DECRYPTION_FAILED","ERROR_MAP","DEFAULT_PUBLIC_VAPID_KEY","ENDPOINT","MessageType","senderId","subscription","fcmSubscribeBody","applicationPubKey","subscribeOptions","responseData","pushSet","updateToken","fcmUpdateBody","updateOptions","err_2","fcmUnsubscribeBody","unsubscribeOptions","err_3","DBInterface","dbPromise","createTransaction","runRequest","closeDatabase","mode","getDb","objectStoreName","oncomplete","dbName","dbVersion","onDbUpgrade","TokenDetailsModel","oldVersion","createIndex","unique","cursorRequest_1","createTime","getTokenDetailsFromToken","getTokenDetailsFromSWScope","saveTokenDetails","details","VapidDetailsModel","getVapidFromSWScope","saveVapidDetails","deleteVapidDetails","SENDER_ID_OPTION_NAME","ControllerInterface","messagingSenderId","tokenDetailsModel","vapidDetailsModel","currentPermission","swReg","getNotificationPermission_","getSWRegistration_","getPublicVapidKey_","getPushSubscription","manageExistingToken","getNewToken","isTokenValid","deleteTokenFromDB","updatedToken","allDetails","e_1","pushManager","getSubscription","swRegistration","userVisibleOnly","applicationServerKey","requestPermission","useServiceWorker","usePublicVapidKey","b64PublicKey","completed","onTokenRefresh","setBackgroundMessageHandler","all","Notification","permission","getTokenDetailsModel","getVapidDetailsModel","getIIDModel","bgMessageHandler","onPush","onSubChange","onNotificationClick","waitUntil","onPush_","onSubChange_","onNotificationClick_","msgPayload","hasVisibleClients","notificationDetails","notificationTitle","reg","hasVisibleClients_","notification","sendMessageToWindowClients_","getNotificationData_","title","showNotification","clickAction","windowClient","internalMsg","stopImmediatePropagation","click_action","getWindowClient_","openWindow","NOTIFICATION_CLICKED","attemptToMessageClient_","notificationInformation","clientList","suitableClient","parsedClientUrl","URL","PUSH_MSG_RECEIVED","vapidKeyFromDatabase","registrationToUse","publicVapidKeyToUse","manifestCheckPromise","messageObserver","tokenRefreshObserver","onMessageInternal","onTokenRefreshInternal","setupSWMessageListener_","isSupported_","manifestCheck_","manifestTag","manifestContent","managePermissionResult","permissionPromise","ServiceWorkerRegistration","publicKey","parsedKey","waitForRegistrationToActivate_","serviceWorker","installing","waiting","state","stateChangeListener","browserErrorMessage","workerPageMessage","pushMessage","PushSubscription","TUpU","setLogLevel","level","instances","inst","defaultLogLevel","INFO","defaultLogHandler","logType","toISOString","DEBUG","info","WARN","ERROR","_logLevel","_logHandler","debug","V7bb","_messages","_photos_db","camera","cameraScripts","takeSnapshot","video","videoWidth","videoHeight","canvas","drawImage","toDataURL","cameraRest","play","downloadPhotoBtn","deletePhotoBtn","uploadPhotoBtn","startCameraBtn","takePhotoBtn","getContext","getMedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","stream","srcObject","errorMsg","mesagge","pause","storageRef","storage","photoName","putString","showProgress","progressStatus","getDownloadURL","successMsg","hideProgress","progressBar","VxYX","createFirebaseNamespace","removeApp","callAppHooks","apps_","DEFAULT_ENTRY_NAME","initializeApp","rawConfig","config","FirebaseAppImpl","getApps","createService","serviceProperties","appHook","allowMultipleInstances","factories","appHooks","serviceNamespace","appArg","_getService","props","eventName","factoryName","useAsService","useService","apps","appErrors","tokenListeners","firebase_","isDeleted_","services_","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","options_","checkDestroyed_","services","serviceKey","instanceKey","instanceIdentifier","instanceSpecifier","extendApp","no-app","bad-app-name","duplicate-app","duplicate-service","sa-not-supported","invalid-app-argument","YiEk","ZRi6","aC8z","_interopRequireDefault","_app","_app2","githubSignIn","provider","GithubAuthProvider","signInWithPopup","githubSignOut","signIn","onAuthStateChanged","EDgram","pwa","isOnLine","bvzA","cpTA","normalizeName","normalizeValue","iteratorFor","items","support","iterable","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","chars","bufferClone","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","_bodyFormData","searchParams","URLSearchParams","isDataView","_bodyArrayBuffer","isArrayBufferView","normalizeMethod","upcased","referrer","form","parseHeaders","rawHeaders","line","Response","bodyInit","viewClasses","isView","has","redirectStatuses","redirect","RangeError","responseURL","polyfill","fsyv","h6ac","eval","h6rB","progress","advance","bytesTransferred","totalBytes","bar","jnwl","jx8D","databaseURL","projectId","storageBucket","icon","ready","sync","networkStatus","metaTagTheme","alert","_gaq","insertBefore","k+HB","niZR","o5Um","profilePhotos","profileScripts","pBGv","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","run","Item","nextTick","browser","argv","versions","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","qLaj","_header","_header2","_footer","_footer2","_profile","_profile2","_timeline","_timeline2","_uploader","_uploader2","_camera","_camera2","qrAv","tasksByHandle","nextHandle","registerImmediate","handle","runIfPresent","currentlyRunningATask","attachTo","getPrototypeOf","postMessageIsAsynchronous","oldOnMessage","messagePrefix","onGlobalMessage","channel","html","rjHE","tHnM","u48Y","uufy","uploader","uploaderScripts","files","file","wGjj","_state","_handled","_value","_deferreds","doResolve","_immediateFn","onFulfilled","onRejected","finale","_unhandledRejectionFn","Handler","createCommonjsModule","__WEBPACK_IMPORTED_MODULE_0_whatwg_fetch__","setTimeoutFunc","prom","arr","race","globalNS","_global","__g","_core","core","__e","_isObject","it","_anObject","_fails","_descriptors","is","_domCreate","_ie8DomDefine","_toPrimitive","dP","Attributes","_objectDp","_propertyDesc","bitmap","writable","_hide","_has","px","_uid","_redefine","SRC","$toString","TPL","inspectSource","safe","isFunction","_aFunction","_ctx","that","$export","own","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","expProto","_export","_cof","_iobject","_defined","_toObject","ceil","_toInteger","_toLength","_isArray","arg","store","_shared","_wks","USE_SYMBOL","SPECIES","_arraySpeciesConstructor","original","_arraySpeciesCreate","_arrayMethods","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","callbackfn","UNSCOPABLES","ArrayProto","_addToUnscopables","$find","forced","$find$1","forced$1","MATCH","_isRegexp","isRegExp","_stringContext","searchString","NAME","MATCH$1","$startsWith","KEY","wU43","prependCode","FirebaseStorageError","Code","UNKNOWN","objectNotFound","OBJECT_NOT_FOUND","quotaExceeded","bucket","unauthenticated","UNAUTHENTICATED","unauthorized","UNAUTHORIZED","retryLimitExceeded","RETRY_LIMIT_EXCEEDED","canceled","CANCELED","invalidUrl","INVALID_URL","invalidDefaultBucket","INVALID_DEFAULT_BUCKET","cannotSliceBlob","CANNOT_SLICE_BLOB","serverFileWrongSize","SERVER_FILE_WRONG_SIZE","noDownloadURL","NO_DOWNLOAD_URL","invalidArgument","INVALID_ARGUMENT","invalidArgumentCount","argMin","argMax","real","countPart","plural","INVALID_ARGUMENT_COUNT","appDeleted","APP_DELETED","invalidRootOperation","INVALID_ROOT_OPERATION","invalidFormat","format","INVALID_FORMAT","internalError","INTERNAL_ERROR","formatValidator","stringFormat","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","dataFromString","string","StringData","utf8Bytes_","base64Bytes_","dataURLBytes_","dataURLContentType_","valid","lo","percentEncodedBytes_","hasMinus","hasUnder","invalidChar","hasPlus","hasSlash","DataURLParts","rest","endsWith","end","taskStateFromInternalTaskState","InternalTaskState","RUNNING","PAUSING","CANCELING","TaskState","PAUSED","SUCCESS","make","resolver","isDef","isJustDef","isObject","isNonArrayObject","isString","isNumber","isNativeBlob","isNativeBlobDefined","jsonObjectOrNull","canonicalChildPath","component","lastComponent","makeNormalUrl","urlPart","domainBase","apiBaseUrl","makeDownloadUrl","downloadBase","makeUploadUrl","apiUploadBaseUrl","makeQueryString","encode","queryPart","nextPart","noXform_","xformPath","fullPath","getMappings","mappingsXformPath","xformSize","size","xformTokens","tokens","alt","mappings_","mappings","Mapping","nameMapping","xform","sizeMapping","addRef","authWrapper","generateRef","loc","Location","makeStorageReference","fromResource","resource","mapping","local","server","fromResourceString","resourceString","toResourceString","metadataValidator","validate","specs","passed","minArgs","maxArgs","validator","and_","v1","v2","stringSpec","opt_validator","opt_optional","stringValidator","ArgSpec","uploadDataSpec","metadataSpec","nonNegativeNumberSpec","looseObjectSpec","nullFunctionSpec","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob","sliceBlob","webkitSlice","mozSlice","contains$1","elem","clone$1","arraylike","handlerCheck","cndn","metadataHandler","handler","sharedErrorHandler","errorHandler","newErr","getStatus","setServerResponseProp","serverResponseProp","objectErrorHandler","shared","getMetadata","fullServerUrl","maxOperationRetryTime","requestInfo","RequestInfo","updateMetadata","deleteObject","successCodes","determineContentType_","metadataForUpload_","opt_metadata","multipartUpload","bucketOnlyServerUrl","X-Goog-Upload-Protocol","boundary","metadataString","preBlobPart","postBlobPart","FbsBlob","maxUploadRetryTime","uploadData","checkResumeHeader_","opt_allowed","createResumableUpload","X-Goog-Upload-Command","X-Goog-Upload-Header-Content-Length","X-Goog-Upload-Header-Content-Type","getResumableUploadStatus","sizeString","ResumableUploadStatus","continueResumableUpload","opt_status","opt_progressCallback","uploadStatus","newCurrent","current","bytesToUpload","total","bytesLeft","startByte","endByte","uploadCommand","X-Goog-Upload-Offset","progressCallback","argsToForward","cancelState","triggerCallback","triggeredCallback","callWithDelay","millis","timeoutId","hitTimeout","waitSeconds","waitMillis","wasTimeout","stopped","addAuthHeader_","addVersionHeader_","number","__WEBPACK_IMPORTED_MODULE_0__firebase_app__","makeRequest","pool","NetworkRequest","additionalRetryCodes","factory","opt_url","Service","XhrIoPool","registerStorage","TaskEvent","Storage","STORAGE_TYPE","ErrorCode","defaultMaxOperationRetryTime","defaultMaxUploadRetryTime","minSafeInteger","code_","message_","serverResponse_","codeProp","codeEquals","serverResponse","BUCKET_NOT_FOUND","PROJECT_NOT_FOUND","INVALID_CHECKSUM","INVALID_EVENT_NAME","NO_DEFAULT_BUCKET","opt_contentType","STATE_CHANGED","NetworkXhrIo","sent_","xhr_","errorCode_","NO_ERROR","sendPromise_","resolve$$1","reject$$1","ABORT","NETWORK_ERROR","opt_body","opt_headers","getErrorCode","getResponseText","addUploadProgressListener","upload","removeUploadProgressListener","createXhrIo","makeFromBucketSpec","bucketString","bucketLocation","makeFromUrl","gsModify","httpModify","gsRegex","gsIndices","httpRegex","httpIndices","groups","regex","indices","postModify","group","captures","bucketValue","pathValue","opt_local","opt_writable","opt_xform","opt_elideCopy","blobType","data_","size_","type_","realBlob","sliced","blobby","uint8Arrays","finalLength_1","merged_1","index_1","Observer","opt_error","opt_complete","UploadTaskSnapshot","urls","UploadTask","transferred_","needToFetchStatus_","needToFetchMetadata_","observers_","error_","uploadUrl_","request_","chunkMultiplier_","resolve_","reject_","authWrapper_","location_","blob_","metadata_","resumable_","shouldDoResumable_","errorHandler_","completeTransitions_","transition_","metadataErrorHandler_","promise_","makeProgressCallback_","sizeBefore","loaded","updateProgress_","createResumable_","fetchStatus_","fetchMetadata_","continueUpload_","oneShotUpload_","resolveToken_","getAuthToken","createRequest","getPromise","statusRequest","uploadRequest","newStatus","increaseMultiplier_","metadataRequest","multipartRequest","transferred","old","notifyObservers_","wasPaused","externalState","typeValidator","_p","nextOrObserverValidator","nextValidator","observerValidator","nextOrObserverMessage","makeBinder","binder","addObserver_","removeObserver_","binderNextOrObserverValidator","binderSpecs","notifyObserver_","finishPromise_","triggered","newRef","newPath","throwIfRoot_","FailRequest","appDelete","RequestMap","map_","id_","addRequest","unmap","AuthWrapper","maker","requestMaker","bucket_","deleted_","extractBucket_","storageRefMaker_","requestMaker_","pool_","service_","maxOperationRetryTime_","maxUploadRetryTime_","requestMap_","_error","deleteApp","setMaxUploadRetryTime","setMaxOperationRetryTime","errorCallback","pendingXhr_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","errorCallback_","progressCallback_","timeout_","doTheRequest","backoffCallback","canceled$$1","progressListener","progressEvent","lengthComputable","RequestEndStatus","hitServer","isRetryStatusCode_","wasCanceled","successCode","backoffDone","requestWentThrough","wasSuccessCode","isFiveHundredCode","extraRetryCodes","isExtraRetryCode","isRequestSpecificRetryCode","opt_canceled","authWrapperBucket","internals_","ServiceInternals"],"mappings":"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","file":"script.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"./\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"JkW7\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"2vmM\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar util = __webpack_require__(\"58xA\");\nvar logger = __webpack_require__(\"TUpU\");\nvar tslib_1 = __webpack_require__(\"7wws\");\nvar firebase = _interopDefault(__webpack_require__(\"VxYX\"));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < var_args.length; i++) {\r\n        if (Array.isArray(var_args[i]) ||\r\n            (var_args[i] &&\r\n                typeof var_args[i] === 'object' &&\r\n                typeof var_args[i].length === 'number')) {\r\n            message += buildLogMessage_.apply(null, var_args[i]);\r\n        }\r\n        else if (typeof var_args[i] === 'object') {\r\n            message += util.stringify(var_args[i]);\r\n        }\r\n        else {\r\n            message += var_args[i];\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger$1 = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger.LogLevel.VERBOSE;\r\n        logger$1 = logClient.log.bind(logClient);\r\n        if (persistent)\r\n            SessionStorage.set('logging_enabled', true);\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger$1 = logger_;\r\n    }\r\n    else {\r\n        logger$1 = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */\r\nvar log = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger$1 === null && SessionStorage.get('logging_enabled') === true)\r\n            enableLogging(true);\r\n    }\r\n    if (logger$1) {\r\n        var message = buildLogMessage_.apply(null, var_args);\r\n        logger$1(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar error = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar fatal = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n */\r\nvar warn = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data != data || // NaN\r\n            data == Number.POSITIVE_INFINITY ||\r\n            data == Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete')\r\n                    wrappedFn_1();\r\n            });\r\n            // fallback to onload.\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null)\r\n        return util.stringify(obj);\r\n    var keys = [];\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0)\r\n            key += ',';\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param {!(Object|Array)} obj The object or array to iterate over\r\n * @param {function(?, ?)} fn The function to apply\r\n */\r\nvar each = function (obj, fn) {\r\n    if (Array.isArray(obj)) {\r\n        for (var i = 0; i < obj.length; ++i) {\r\n            fn(i, obj[i]);\r\n        }\r\n    }\r\n    else {\r\n        /**\r\n         * in the conversion of code we removed the goog.object.forEach\r\n         * function which did a value,key callback. We standardized on\r\n         * a single impl that does a key, value callback. So we invert\r\n         * to not have to touch the `each` code points\r\n         */\r\n        util.forEach(obj, function (key, val) { return fn(val, key); });\r\n    }\r\n};\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1)\r\n            hexByte = '0' + hexByte;\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code == 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code == 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length)\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + this.pieces_[i];\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0)\r\n                    pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0)\r\n                return cmp;\r\n        }\r\n        if (leftKeys.length === rightKeys.length)\r\n            return 0;\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length == 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost = PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return this.host !== this.internalHost || this.isCustomHost();\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        util.forEach(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var results = {};\r\n    if (queryString.startsWith('?')) {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\r\n        var segment = _a[_i];\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        var kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n        }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseURL(dataURL), namespace = parsedUrl.subdomain;\r\n    if (parsedUrl.domain === 'firebase') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace == 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\r\n */\r\nvar parseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = dataURL.length;\r\n        }\r\n        var parts = host.split('.');\r\n        if (parts.length === 3) {\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            domain = parts[1];\r\n            subdomain = parts[0].toLowerCase();\r\n        }\r\n        else if (parts.length === 2) {\r\n            domain = parts[0];\r\n        }\r\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        // Support `ns` query param if subdomain not already set\r\n        if (subdomain === '' && 'ns' in queryParams) {\r\n            subdomain = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString\r\n    };\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority && typeof priority === 'object' && util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false, hasActualChild_1 = false;\r\n        util.forEach(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) {\r\n                // .priority is OK\r\n            }\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    util.forEach(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined)\r\n        return;\r\n    if (isInvalidJSONNumber(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined)\r\n        return;\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined)\r\n        return;\r\n    if (!isValidKey(key))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined)\r\n        return;\r\n    if (!isValidPathString(pathString))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined)\r\n        return;\r\n    if (typeof bool !== 'boolean')\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number')\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    else\r\n        return 'string:' + priority;\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty())\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        else\r\n            return this.getValue();\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty())\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_)\r\n                cmp *= -1;\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_)\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        else\r\n            result = { key: node.key, value: node.value };\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var cmp, n;\r\n        n = this;\r\n        cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_())\r\n            n = n.moveRedLeft_();\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_())\r\n                n = n.rotateRight_();\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_())\r\n            n = n.rotateLeft_();\r\n        if (n.left.isRed_() && n.left.left.isRed_())\r\n            n = n.rotateRight_();\r\n        if (n.left.isRed_() && n.right.isRed_())\r\n            n = n.colorFlip_();\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        var blackDepth;\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty())\r\n                        node = node.right;\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length == 0) {\r\n            return null;\r\n        }\r\n        else if (length == 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\n/**\r\n *\r\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\r\n * @param {Object.<string, Index>} indexSet\r\n * @constructor\r\n */\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         * @type {!IndexMap}\r\n         * @const\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param {!string} indexKey\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap)\r\n            throw new Error('No index defined for ' + indexKey);\r\n        if (sortedMap === fallbackObject) {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n        else {\r\n            return sortedMap;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {boolean}\r\n     */\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = util.clone(this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = util.clone(this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name != namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null)\r\n            return this;\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty())\r\n            return null;\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            for (var key in obj)\r\n                array[key] = obj[key];\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty())\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '')\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj_1 = json;\r\n        util.forEach(hinzeJsonObj_1, function (key, child) {\r\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(hinzeJsonObj_1[key]);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length == 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        var jsonObj_1 = json;\r\n        util.forEach(jsonObj_1, function (key, childData) {\r\n            if (util.contains(jsonObj_1, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty())\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        else\r\n            return !this.node_.isEmpty();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ (change.childName));\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherCount = util.getCount(other.callbacks_);\r\n                var thisCount = util.getCount(this.callbacks_);\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    //  If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey /** @type {!string} */ = util.getAnyKey(other.callbacks_);\r\n                        var thisKey /** @type {!string} */ = util.getAnyKey(this.callbacks_);\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return util.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName != MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName != MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param cancelOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel)\r\n                ret.cancel.bind(ret.context)(err);\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error$$1 = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error$$1);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements a set with a count of elements.\r\n *\r\n * @template K, V\r\n */\r\nvar CountedSet = /** @class */ (function () {\r\n    function CountedSet() {\r\n        this.set = {};\r\n    }\r\n    /**\r\n     * @param {!K} item\r\n     * @param {V} val\r\n     */\r\n    CountedSet.prototype.add = function (item, val) {\r\n        this.set[item] = val !== null ? val : true;\r\n    };\r\n    /**\r\n     * @param {!K} key\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.contains = function (key) {\r\n        return util.contains(this.set, key);\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     * @return {V}\r\n     */\r\n    CountedSet.prototype.get = function (item) {\r\n        return this.contains(item) ? this.set[item] : undefined;\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     */\r\n    CountedSet.prototype.remove = function (item) {\r\n        delete this.set[item];\r\n    };\r\n    /**\r\n     * Deletes everything in the set\r\n     */\r\n    CountedSet.prototype.clear = function () {\r\n        this.set = {};\r\n    };\r\n    /**\r\n     * True if there's nothing in the set\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.set);\r\n    };\r\n    /**\r\n     * @return {number} The number of items in the set\r\n     */\r\n    CountedSet.prototype.count = function () {\r\n        return util.getCount(this.set);\r\n    };\r\n    /**\r\n     * Run a function on each k,v pair in the set\r\n     * @param {function(K, V)} fn\r\n     */\r\n    CountedSet.prototype.each = function (fn) {\r\n        util.forEach(this.set, function (k, v) { return fn(k, v); });\r\n    };\r\n    /**\r\n     * Mostly for debugging\r\n     * @return {Array.<K>} The keys present in this CountedSet\r\n     */\r\n    CountedSet.prototype.keys = function () {\r\n        var keys = [];\r\n        util.forEach(this.set, function (k) {\r\n            keys.push(k);\r\n        });\r\n        return keys;\r\n    };\r\n    return CountedSet;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n *\r\n * @constructor\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        /**\r\n         * @private\r\n         * @type {Node}\r\n         */\r\n        this.value_ = null;\r\n        /**\r\n         * @private\r\n         * @type {CountedSet}\r\n         */\r\n        this.children_ = null;\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {?Node} The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value_ != null) {\r\n            return this.value_.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children_ != null) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children_.contains(childKey)) {\r\n                var childTree = this.children_.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @param {!Node} data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = data;\r\n            this.children_ = null;\r\n        }\r\n        else if (this.value_ !== null) {\r\n            this.value_ = this.value_.updateChild(path, data);\r\n        }\r\n        else {\r\n            if (this.children_ == null) {\r\n                this.children_ = new CountedSet();\r\n            }\r\n            var childKey = path.getFront();\r\n            if (!this.children_.contains(childKey)) {\r\n                this.children_.add(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children_.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {boolean} True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = null;\r\n            this.children_ = null;\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value_ !== null) {\r\n                if (this.value_.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value_;\r\n                    this.value_ = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children_ !== null) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children_.contains(childKey)) {\r\n                    var safeToRemove = this.children_.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children_.remove(childKey);\r\n                    }\r\n                }\r\n                if (this.children_.isEmpty()) {\r\n                    this.children_ = null;\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param {!Path} prefixPath Path to look up node for.\r\n     * @param {!Function} func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value_ !== null) {\r\n            func(prefixPath, this.value_);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param {!Function} func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        if (this.children_ !== null) {\r\n            this.children_.each(function (key, tree) {\r\n                func(key, tree);\r\n            });\r\n        }\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredValue = function (value, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    else {\r\n        util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n        return serverValues[value['.sv']];\r\n    }\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (tree, serverValues) {\r\n    var resolvedTree = new SparseSnapshotTree();\r\n    tree.forEachTree(new Path(''), function (path, node) {\r\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\r\n    });\r\n    return resolvedTree;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredValue(rawPri, serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ affectedTree, \r\n    /**@inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        util.forEach(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /**@inheritDoc */ source, \r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap_ = {};\r\n    }\r\n    /**\r\n     * @param {!Change} change\r\n     */\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey /** @type {!string} */ = change.childName;\r\n        util.assert(type == Change.CHILD_ADDED ||\r\n            type == Change.CHILD_CHANGED ||\r\n            type == Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = util.safeGet(this.changeMap_, childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                delete this.changeMap_[childKey];\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childRemovedChange(childKey, oldChange.oldSnap);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                this.changeMap_[childKey] = Change.childAddedChange(childKey, change.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap_[childKey] = change;\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Array.<!Change>}\r\n     */\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return util.getValues(this.changeMap_);\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache\r\n            .getEventCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap\r\n                        .getNode()\r\n                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||\r\n                !eventSnap\r\n                    .getNode()\r\n                    .getPriority()\r\n                    .equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey == '.priority') {\r\n                    util.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey == '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache\r\n                    .getEventCache()\r\n                    .getNode()\r\n                    .hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         *\r\n         * @type {!Object.<!string, !View>}\r\n         * @private\r\n         */\r\n        this.views_ = {};\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.views_);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} optCompleteServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = util.safeGet(this.views_, queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events_1 = [];\r\n            util.forEach(this.views_, function (key, view) {\r\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n            });\r\n            return events_1;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = util.safeGet(this.views_, queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views_[queryId] = view;\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            var self_1 = this;\r\n            util.forEach(this.views_, function (viewQueryId, view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete self_1.views_[viewQueryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = util.safeGet(this.views_, queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete this.views_[queryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    /**\r\n     * @return {!Array.<!View>}\r\n     */\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var _this = this;\r\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\r\n        return values.filter(function (view) {\r\n            return !view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path The path to the desired complete snapshot\r\n     * @return {?Node} A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var serverCache = null;\r\n        util.forEach(this.views_, function (key, view) {\r\n            serverCache = serverCache || view.getCompleteServerCache(path);\r\n        });\r\n        return serverCache;\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return util.safeGet(this.views_, queryId);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    /**\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var completeView = util.findValue(this.views_, function (view) {\r\n            return view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n        return completeView || null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n *\r\n * @constructor\r\n * @param {!ImmutableTree.<!Node>} writeTree\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Node} node\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} updates\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        util.forEach(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param {!Path} path The path to check for\r\n     * @return {boolean} Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param {!Path} path The path to get a complete write\r\n     * @return {?Node} The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return {!Array.<NamedNode>} A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return {boolean} Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param {!Node} node The node to apply this CompoundWrite to\r\n     * @return {!Node} The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return CompoundWrite.applySubtreeWrite_(Path.Empty, this.writeTree_, node);\r\n    };\r\n    /**\r\n     * @type {!CompoundWrite}\r\n     */\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @param {!ImmutableTree.<!Node>} writeTree\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\r\n        if (writeTree.value != null) {\r\n            // Since there a write is always a leaf, we're done here\r\n            return node.updateChild(relativePath, writeTree.value);\r\n        }\r\n        else {\r\n            var priorityWrite_1 = null;\r\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n                if (childKey === '.priority') {\r\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                    // to apply priorities to empty nodes that are later filled\r\n                    util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                    priorityWrite_1 = childTree.value;\r\n                }\r\n                else {\r\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\r\n                }\r\n            });\r\n            // If there was a priority write, we only apply it if the node is not empty\r\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n            }\r\n            return node;\r\n        }\r\n    };\r\n    return CompoundWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                util.forEach(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * @param {!WriteRecord} writeRecord\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            // findKey can return undefined, so use !! to coerce to boolean\r\n            return !!util.findKey(writeRecord.children, function (childSnap, childName) {\r\n                return writeRecord.path.child(childName).contains(path);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     * @private\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     *\r\n     * @param {!WriteRecord} write\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     *\r\n     * @param {!Array.<!WriteRecord>} writes\r\n     * @param {!function(!WriteRecord):boolean} filter\r\n     * @param {!Path} treeRoot\r\n     * @return {!CompoundWrite}\r\n     * @private\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         * @type {!ImmutableTree.<!SyncPoint>}\r\n         * @private\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         * @type {!WriteTree}\r\n         * @private\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap_ = {};\r\n        this.queryToTagMap_ = {};\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @param {number} writeId\r\n     * @param {boolean=} visible\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param {!number} writeId\r\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                util.forEach(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap_[queryKey] = tag;\r\n            // Coerce to string to avoid sparse arrays.\r\n            this.tagToQueryMap_['_' + tag] = queryKey;\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n                else {\r\n                    // There's nothing below us, so nothing we need to start listening on\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        else {\r\n            // No-op, this listener must've been already removed\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     * @param {!Path} path The path to the data we want\r\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\r\n     * @return {?Node}\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     *\r\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\r\n     * @return {!Array.<!View>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                util.forEach(childMap, function (key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Array.<!Query>} queries\r\n     * @private\r\n     */\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\r\n                delete this.queryToTagMap_[removedQueryKey];\r\n                delete this.tagToQueryMap_['_' + removedQueryTag];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     * @param {!Query} query\r\n     * @return {!Query} The normalized query\r\n     * @private\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return /** @type {!Query} */ query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!View} view\r\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\r\n     * @private\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    util.forEach(childMap, function (key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!View} view\r\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error$$1 = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error$$1);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     * @private\r\n     * @param {!Query} query\r\n     * @return {string}\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     * @private\r\n     * @param {!string} queryKey\r\n     * @return {{queryId: !string, path: !Path}}\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     * @param {!number} tag\r\n     * @return {?string}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap_['_' + tag];\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     * @param {!Query} query\r\n     * @return {?number}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return util.safeGet(this.queryToTagMap_, queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     *\r\n     * @param {!Path} queryPath\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar AuthTokenProvider = /** @class */ (function () {\r\n    /**\r\n     * @param {!FirebaseApp} app_\r\n     */\r\n    function AuthTokenProvider(app_) {\r\n        this.app_ = app_;\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \r\n        // .catch\r\n        function (error$$1) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error$$1 && error$$1.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error$$1);\r\n            }\r\n        });\r\n    };\r\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return AuthTokenProvider;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name))\r\n            this.counters_[name] = 0;\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = util.clone(newStats);\r\n        if (this.last_) {\r\n            util.forEach(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        util.forEach(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger$1) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} var_args\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = this.listeners_[eventType].slice();\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, var_args);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_)\r\n                return;\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var command = args[0], arg1 = args[1], arg2 = args[2];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder)\r\n                    return; // we closed the connection.\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command == FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var pN = args[0], data = args[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier)\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (!util.isNodeSdk() &&\r\n                typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n        return (BrowserPollConnection.forceAllow_ ||\r\n            (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp() &&\r\n                !util.isNodeSdk()));\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk())\r\n            return;\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        /**\r\n         * @type {CountedSet.<number, number>}\r\n         */\r\n        this.outstandingRequests = new CountedSet();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n        }\r\n        else if (iframe.document) {\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        if (util.isNodeSdk() && this.myID) {\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            var theURL = this.urlFn(urlParams);\r\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial, 1);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.remove(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls)\r\n                        return;\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + firebase.SDK_VERSION + \"/\" + process.platform + \"/\" + device\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = Object({\"NODE_ENV\":\"production\"});\r\n                var proxy = this.connURL.indexOf('wss://') == 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                this.mySock = new WebSocketImpl(this.connURL);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                this.log_(error$$1);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                _this.log_(error$$1);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length == this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null)\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable)\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports_1 = (this.transports_ = []);\r\n            each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports_1.push(transport);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeout_ms > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n            }, Math.floor(healthyTimeout_ms));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ != 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ == 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param onConnectStatus_\r\n     * @param onServerInfoUpdate_\r\n     * @param authTokenProvider_\r\n     * @param authOverride_\r\n     */\r\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        /** @private {Object} */\r\n        _this.interruptReasons_ = {};\r\n        _this.listens_ = {};\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        /** @private {number|null} */\r\n        _this.establishConnectionTimer_ = null;\r\n        /** @private {boolean} */\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        /** @private {?{\r\n         *   sendRequest(Object),\r\n         *   close()\r\n         * }} */\r\n        _this.realtime_ = null;\r\n        /** @private {string|null} */\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!string} action\r\n     * @param {*} body\r\n     * @param {function(*)=} onResponse\r\n     * @protected\r\n     */\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        this.listens_[pathString] = this.listens_[pathString] || {};\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens_[pathString][queryId] = listenSpec;\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!{onComplete(),\r\n     *           hashFn():!string,\r\n     *           query: !Query,\r\n     *           tag: ?number}} listenSpec\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {*} payload\r\n     * @param {!Query} query\r\n     * @private\r\n     */\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' +\r\n                    query\r\n                        .getQueryParams()\r\n                        .getIndex()\r\n                        .toString() +\r\n                    '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    /**\r\n     * @param {!string} credential\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined)\r\n            request[ /*hash*/'h'] = hash;\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete)\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {*} message\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        else if (action === 'm')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        else if (action === 'c')\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        else if (action === 'ac')\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        else if (action === 'sd')\r\n            this.onSecurityDebugPacket_(body);\r\n        else\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n        }, Math.floor(timeout));\r\n    };\r\n    /**\r\n     * @param {boolean} visible\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error$$1) {\r\n                self_1.log_('Failed to get token: ' + error$$1);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error$$1);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete)\r\n                    put.onComplete('disconnect');\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0)\r\n            this.outstandingPuts_ = [];\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {Array.<*>=} query\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete)\r\n            listen.onComplete('permission_denied');\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {!string} queryId\r\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens_[normalizedPathString] !== undefined) {\r\n            listen = this.listens_[normalizedPathString][queryId];\r\n            delete this.listens_[normalizedPathString][queryId];\r\n            if (util.getCount(this.listens_[normalizedPathString]) === 0) {\r\n                delete this.listens_[normalizedPathString];\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var _this = this;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        util.forEach(this.listens_, function (pathString, queries) {\r\n            util.forEach(queries, function (key, listenSpec) {\r\n                _this.sendListen_(listenSpec);\r\n            });\r\n        });\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i])\r\n                this.sendPut_(i);\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + firebase.SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParamaters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParamaters, function (error$$1, result) {\r\n            var data = result;\r\n            if (error$$1 === 404) {\r\n                data = null;\r\n                error$$1 = null;\r\n            }\r\n            if (error$$1 === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error$$1) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error$$1 == 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error$$1;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_\r\n     * @param {boolean} forceRestClient\r\n     * @param {!FirebaseApp} app\r\n     */\r\n    function Repo(repoInfo_, forceRestClient, app) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        // A list of data pieces and paths to be set when this client disconnects.\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        /**\r\n         * TODO: This should be @private but it's used by test_access.js and internal.js\r\n         * @type {?PersistentConnection}\r\n         */\r\n        this.persistentConnection_ = null;\r\n        /** @type {!AuthTokenProvider} */\r\n        var authTokenProvider = new AuthTokenProvider(app);\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactions_init_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return {string}  The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return {!string} The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     * @return {!Object}\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     *\r\n     * @private\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {boolean} isMerge\r\n     * @param {?number} tag\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) {\r\n                    return nodeFromJSON$1(raw);\r\n                });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) {\r\n                return nodeFromJSON$1(raw);\r\n            });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    /**\r\n     * TODO: This should be @private but it's used by test_access.js and internal.js\r\n     * @param {?function(!string, *):*} callback\r\n     * @private\r\n     */\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    /**\r\n     * @param {!boolean} connectStatus\r\n     * @private\r\n     */\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Object} updates\r\n     * @private\r\n     */\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (value, key) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {*} value\r\n     * @private\r\n     */\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    /**\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} newVal\r\n     * @param {number|string|null} newPriority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        util.forEach(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            var newNodeUnresolved = nodeFromJSON$1(changedValue);\r\n            changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            util.forEach(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     * @private\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, serverValues);\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {*} priority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                util.forEach(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined')\r\n            return;\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_)\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        util.forEach(stats, function (stat, value) {\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++)\r\n                stat += ' ';\r\n            console.log(stat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    /**\r\n     * @param {...*} var_args\r\n     * @private\r\n     */\r\n    Repo.prototype.log_ = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n    /**\r\n     * @param {?function(?Error, *=)} callback\r\n     * @param {!string} status\r\n     * @param {?string=} errorReason\r\n     */\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status == 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason)\r\n                        message += ': ' + errorReason;\r\n                    var error$$1 = new Error(message);\r\n                    error$$1.code = code;\r\n                    callback(error$$1);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() == this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ == PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty())\r\n            return null;\r\n        else\r\n            return this.path.getBack();\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null)\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            else\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        if (applyLocally === undefined)\r\n            applyLocally = true;\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error$$1, committed, snapshot) {\r\n            if (error$$1) {\r\n                deferred.reject(error$$1);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error$$1, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next;\r\n        while ((next = path.getFront()) !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        util.forEach(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst)\r\n            action(this);\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst)\r\n            action(this);\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null)\r\n                action(child);\r\n            else\r\n                child.forEachImmediateDescendantWithValue(action);\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null)\r\n            this.parent_.updateChild_(this.name_, this);\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\nRepo.prototype.transactions_init_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    else\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    while ((front = path.getFront()) !== null &&\r\n        transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                // Already marked.  No action needed.\r\n            }\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].interrupt();\r\n            }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].resume();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.database.checkDeleted_('delete');\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                this.database.repo_ = null;\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\r\n        if (opt_hash !== undefined) {\r\n            opt_hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */\r\nvar listens = function (firebaseRef) {\r\n    return firebaseRef.repo.persistentConnection_.listens_;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  listens: listens,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager.getInstance().databaseFromApp(app, url); }, \r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    }, null, true);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.registerDatabase = registerDatabase;\nexports.Database = Database;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.enableLogging = enableLogging;\nexports.ServerValue = ServerValue;\nexports.DataSnapshot = DataSnapshot;\nexports.OnDisconnect = OnDisconnect;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"pBGv\")))\n\n/***/ }),\n\n/***/ \"3mJm\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"58xA\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib_1 = __webpack_require__(\"rjHE\");\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n * @param {*} assertion The assertion to be tested for falsiness\r\n * @param {!string} message The message to display if the check fails\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n * @param {string} message\r\n * @return {!Error}\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) == 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param {Array<number>} bytes Array of numbers representing characters.\r\n * @return {string} Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     * @type {string}\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, opt_webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = opt_webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param {string} input A string to encode.\r\n     * @param {boolean=} opt_webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param {string} input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} string representing the decoded value.\r\n     */\r\n    decodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param {string} input Input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\r\n     * @return {!Array<number>} bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, opt_webSafe) {\r\n        this.init_();\r\n        var charToByteMap = opt_webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 != 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 != 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n * @param {!string} str\r\n * @return {!string}\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param {string} str To be decoded\r\n * @return {?string} Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\n// TODO: Really needed (for JSCompiler type checking)?\r\nfunction patchProperty(obj, prop, value) {\r\n    obj[prop] = value;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\r\n     * @return {!function(?(Error), ?=)}\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return {string} user agent string\r\n */\r\nvar getUA = function () {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\r\n * Cordova `onDeviceReady`, which would normally wait for a callback.\r\n *\r\n * @return {boolean} isMobileCordova\r\n */\r\nvar isMobileCordova = function () {\r\n    return (typeof window !== 'undefined' &&\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n};\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return {boolean} True if ReactNative environment is detected.\r\n */\r\nvar isReactNative = function () {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n};\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return {boolean} True if Node.js environment is detected.\r\n */\r\nvar isNodeSdk = function () {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n};\n\nvar ERROR_NAME = 'FirebaseError';\r\nvar captureStackTrace = Error\r\n    .captureStackTrace;\r\n// Export for faking in tests\r\nfunction patchCapture(captureFake) {\r\n    var result = captureStackTrace;\r\n    captureStackTrace = captureFake;\r\n    return result;\r\n}\r\nvar FirebaseError = /** @class */ (function () {\r\n    function FirebaseError(code, message) {\r\n        this.code = code;\r\n        this.message = message;\r\n        // We want the stack value, if implemented by Error\r\n        if (captureStackTrace) {\r\n            // Patches this.stack, omitted calls above ErrorFactory#create\r\n            captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n        else {\r\n            var err_1 = Error.apply(this, arguments);\r\n            this.name = ERROR_NAME;\r\n            // Make non-enumerable getter for the property.\r\n            Object.defineProperty(this, 'stack', {\r\n                get: function () {\r\n                    return err_1.stack;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    return FirebaseError;\r\n}());\r\n// Back-door inheritance\r\nFirebaseError.prototype = Object.create(Error.prototype);\r\nFirebaseError.prototype.constructor = FirebaseError;\r\nFirebaseError.prototype.name = ERROR_NAME;\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n        // Matches {$name}, by default.\r\n        this.pattern = /\\{\\$([^}]+)}/g;\r\n        // empty\r\n    }\r\n    ErrorFactory.prototype.create = function (code, data) {\r\n        if (data === undefined) {\r\n            data = {};\r\n        }\r\n        var template = this.errors[code];\r\n        var fullCode = this.service + '/' + code;\r\n        var message;\r\n        if (template === undefined) {\r\n            message = 'Error';\r\n        }\r\n        else {\r\n            message = template.replace(this.pattern, function (match, key) {\r\n                var value = data[key];\r\n                return value !== undefined ? value.toString() : '<' + key + '?>';\r\n            });\r\n        }\r\n        // Service: Error message (service/code).\r\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\r\n        var err = new FirebaseError(fullCode, message);\r\n        // Populate the Error object with message parts for programmatic\r\n        // accesses (e.g., e.file).\r\n        for (var prop in data) {\r\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\r\n                continue;\r\n            }\r\n            err[prop] = data[prop];\r\n        }\r\n        return err;\r\n    };\r\n    return ErrorFactory;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {{header: *, claims: *, data: *, signature: string}}\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {?number}\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time and non-empty\r\n * signature.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return (!!decoded.signature &&\r\n        !!claims &&\r\n        typeof claims === 'object' &&\r\n        claims.hasOwnProperty('iat'));\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar safeGet = function (obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key))\r\n        return obj[key];\r\n    // else return undefined.\r\n};\r\n/**\r\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\r\n *\r\n * @param {?Object.<K,V>} obj Object to enumerate.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar forEach = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n};\r\n/**\r\n * Copies all the (own) properties from one object to another.\r\n * @param {!Object} objTo\r\n * @param {!Object} objFrom\r\n * @return {!Object} objTo\r\n */\r\nvar extend = function (objTo, objFrom) {\r\n    forEach(objFrom, function (key, value) {\r\n        objTo[key] = value;\r\n    });\r\n    return objTo;\r\n};\r\n/**\r\n * Returns a clone of the specified object.\r\n * @param {!Object} obj\r\n * @return {!Object} cloned obj.\r\n */\r\nvar clone = function (obj) {\r\n    return extend({}, obj);\r\n};\r\n/**\r\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\r\n * for functions.\r\n *\r\n * @param obj {*} A potential object.\r\n * @returns {boolean} True if it's an object.\r\n */\r\nvar isNonNullObject = function (obj) {\r\n    return typeof obj === 'object' && obj !== null;\r\n};\r\nvar isEmpty = function (obj) {\r\n    for (var key in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nvar getCount = function (obj) {\r\n    var rv = 0;\r\n    for (var key in obj) {\r\n        rv++;\r\n    }\r\n    return rv;\r\n};\r\nvar map = function (obj, f, opt_obj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        res[key] = f.call(opt_obj, obj[key], key, obj);\r\n    }\r\n    return res;\r\n};\r\nvar findKey = function (obj, fn, opt_this) {\r\n    for (var key in obj) {\r\n        if (fn.call(opt_this, obj[key], key, obj)) {\r\n            return key;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nvar findValue = function (obj, fn, opt_this) {\r\n    var key = findKey(obj, fn, opt_this);\r\n    return key && obj[key];\r\n};\r\nvar getAnyKey = function (obj) {\r\n    for (var key in obj) {\r\n        return key;\r\n    }\r\n};\r\nvar getValues = function (obj) {\r\n    var res = [];\r\n    var i = 0;\r\n    for (var key in obj) {\r\n        res[i++] = obj[key];\r\n    }\r\n    return res;\r\n};\r\n/**\r\n * Tests whether every key/value pair in an object pass the test implemented\r\n * by the provided function\r\n *\r\n * @param {?Object.<K,V>} obj Object to test.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar every = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            if (!fn(key, obj[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\r\n * object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n *\r\n * @param {!Object} querystringParams\r\n * @return {string}\r\n */\r\nvar querystring = function (querystringParams) {\r\n    var params = [];\r\n    forEach(querystringParams, function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    });\r\n    return params.length ? '&' + params.join('&') : '';\r\n};\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\r\n *\r\n * @param {string} querystring\r\n * @return {!Object}\r\n */\r\nvar querystringDecode = function (querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n/**\r\n * @fileoverview Abstract cryptographic hash interface.\r\n *\r\n * See Sha1 and Md5 for sample implementations.\r\n *\r\n */\r\n/**\r\n * Create a cryptographic hash instance.\r\n *\r\n * @constructor\r\n * @struct\r\n */\r\nvar Hash = /** @class */ (function () {\r\n    function Hash() {\r\n        /**\r\n         * The block size for the hasher.\r\n         * @type {number}\r\n         */\r\n        this.blockSize = -1;\r\n    }\r\n    return Hash;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @extends {Hash}\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sha1, _super);\r\n    function Sha1() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.total_ = 0;\r\n        _this.blockSize = 512 / 8;\r\n        _this.pad_[0] = 128;\r\n        for (var i = 1; i < _this.blockSize; ++i) {\r\n            _this.pad_[i] = 0;\r\n        }\r\n        _this.reset();\r\n        return _this;\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\r\n     * @param {number=} opt_offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\r\n        if (!opt_offset) {\r\n            opt_offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(opt_offset) << 24) |\r\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\r\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\r\n                        buf.charCodeAt(opt_offset + 3);\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[opt_offset] << 24) |\r\n                        (buf[opt_offset + 1] << 16) |\r\n                        (buf[opt_offset + 2] << 8) |\r\n                        buf[opt_offset + 3];\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, opt_length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (opt_length === undefined) {\r\n            opt_length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = opt_length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < opt_length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf == 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += opt_length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}(Hash));\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} minCount The minimum number of arguments to allow for the function call\r\n * @param {!number} maxCount The maximum number of argument to allow for the function call\r\n * @param {!number} argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} argumentNumber The index of the argument\r\n * @param {boolean} optional Whether or not the argument is optional\r\n * @return {!string} The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param {!string} fnName\r\n * @param {!number} argumentNumber\r\n * @param {!string} namespace\r\n * @param {boolean} optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace)\r\n        return;\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback)\r\n        return;\r\n    if (typeof callback !== 'function')\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context)\r\n        return;\r\n    if (typeof context !== 'object' || context === null)\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.CONSTANTS = CONSTANTS;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.patchProperty = patchProperty;\nexports.Deferred = Deferred;\nexports.getUA = getUA;\nexports.isMobileCordova = isMobileCordova;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.patchCapture = patchCapture;\nexports.jsonEval = jsonEval;\nexports.stringify = stringify;\nexports.decode = decode;\nexports.isAdmin = isAdmin;\nexports.issuedAtTime = issuedAtTime;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.clone = clone;\nexports.contains = contains;\nexports.every = every;\nexports.extend = extend;\nexports.findKey = findKey;\nexports.findValue = findValue;\nexports.forEach = forEach;\nexports.getAnyKey = getAnyKey;\nexports.getCount = getCount;\nexports.getValues = getValues;\nexports.isEmpty = isEmpty;\nexports.isNonNullObject = isNonNullObject;\nexports.map = map;\nexports.safeGet = safeGet;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.Sha1 = Sha1;\nexports.async = async;\nexports.createSubscribe = createSubscribe;\nexports.errorPrefix = errorPrefix;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\n\n\n/***/ }),\n\n/***/ \"6orE\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(\"qrAv\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"h6ac\")))\n\n/***/ }),\n\n/***/ \"7tE5\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = __extends;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __assign; });\n/* unused harmony export __rest */\n/* unused harmony export __decorate */\n/* unused harmony export __param */\n/* unused harmony export __metadata */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = __awaiter;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = __generator;\n/* unused harmony export __exportStar */\n/* unused harmony export __values */\n/* unused harmony export __read */\n/* unused harmony export __spread */\n/* unused harmony export __await */\n/* unused harmony export __asyncGenerator */\n/* unused harmony export __asyncDelegator */\n/* unused harmony export __asyncValues */\n/* unused harmony export __makeTemplateObject */\n/* unused harmony export __importStar */\n/* unused harmony export __importDefault */\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n/***/ }),\n\n/***/ \"7wws\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"__extends\"] = __extends;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (immutable) */ __webpack_exports__[\"__rest\"] = __rest;\n/* harmony export (immutable) */ __webpack_exports__[\"__decorate\"] = __decorate;\n/* harmony export (immutable) */ __webpack_exports__[\"__param\"] = __param;\n/* harmony export (immutable) */ __webpack_exports__[\"__metadata\"] = __metadata;\n/* harmony export (immutable) */ __webpack_exports__[\"__awaiter\"] = __awaiter;\n/* harmony export (immutable) */ __webpack_exports__[\"__generator\"] = __generator;\n/* harmony export (immutable) */ __webpack_exports__[\"__exportStar\"] = __exportStar;\n/* harmony export (immutable) */ __webpack_exports__[\"__values\"] = __values;\n/* harmony export (immutable) */ __webpack_exports__[\"__read\"] = __read;\n/* harmony export (immutable) */ __webpack_exports__[\"__spread\"] = __spread;\n/* harmony export (immutable) */ __webpack_exports__[\"__await\"] = __await;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncGenerator\"] = __asyncGenerator;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncDelegator\"] = __asyncDelegator;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncValues\"] = __asyncValues;\n/* harmony export (immutable) */ __webpack_exports__[\"__makeTemplateObject\"] = __makeTemplateObject;\n/* harmony export (immutable) */ __webpack_exports__[\"__importStar\"] = __importStar;\n/* harmony export (immutable) */ __webpack_exports__[\"__importDefault\"] = __importDefault;\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n/***/ }),\n\n/***/ \"Ahgo\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _firebase = __webpack_require__(\"YiEk\");\n\nvar _firebase2 = _interopRequireDefault(_firebase);\n\nvar _auth = __webpack_require__(\"aC8z\");\n\nvar _upload_progress = __webpack_require__(\"h6rB\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar footer = function footer() {\n  var d = document,\n      c = console.log;\n  /*Todo el codigo de programacion asincrono y que interactue con\n  codigo html dinamico cono el retur , va a cargar\n  10 milisegundos despues de que carge el DOM*/\n  var footerScripts = setInterval(function () {\n    if (d.readyState === 'complete') {\n      //Para limpiar\n      clearInterval(footerScripts);\n      /*Selecciona los elementos del menu de navegacion\n            Guarda las secciones*/\n      var nav = d.querySelector('.Footer-menu'),\n          sections = d.querySelectorAll('.Content-section');\n\n      nav.addEventListener('click', function (e) {\n        e.preventDefault();\n        //T llea al top de la pagina\n        window.scroll(0, 0);\n        /*SI el evento padre que origino el evento en este caso Footer coincide con que\n        sea un button*/\n\n        if (e.target.parentElement.matches('button')) {\n          //Para saber cual es el boton que estamos presionando\n          //className devuelve el atributo que esta solicitando ,el string completo\n          var btn = e.target.parentElement,\n              btnSection = btn.className.split('-')[0];\n\n          c(btn, btnSection);\n          /*Por cada seccion*/\n          sections.forEach(function (section) {\n            if (section.classList.contains(btnSection)) {\n              //XK kiero k se muestre\n              section.classList.add('u-show', 'u-fadein');\n              section.classList.remove('u-hide');\n            } else {\n              section.classList.add('u-hide');\n              section.classList.remove('u-show', 'u-fadein');\n            }\n          });\n          (0, _upload_progress.cleanProgress)();\n        }\n      });\n    }\n  }, 100);\n\n  return '\\n    <footer class=\"Footer  u-fixed\">\\n      <nav class=\"Footer-menu\">\\n        <button class=\"Profile-button\" title=\"Perfil\">\\n          <i class=\"fa fa-user\"></i>\\n        </button>\\n        <button class=\"Uploader-button\" title=\"Subir Foto\">\\n          <i class=\"fa fa-picture-o\"></i>\\n        </button>\\n        <button class=\"Timeline-button\" title=\"Home\">\\n          <i class=\"fa fa-home\"></i>\\n        </button>\\n        <button class=\"Camera-button\" title=\"C\\xE1mara\">\\n          <i class=\"fa fa-camera\"></i>\\n        </button>\\n        ' + (0, _auth.signOut)() + '\\n      </nav>\\n    </footer>\\n  ';\n};\n\nexports.default = footer;\n\n/***/ }),\n\n/***/ \"FgbG\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _firebase = __webpack_require__(\"YiEk\");\n\nvar _firebase2 = _interopRequireDefault(_firebase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar timeline = function timeline() {\n  var d = document,\n      c = console.log,\n      dbRef = _firebase2.default.database().ref().child('photos');\n  var photos = void 0;\n  /*Todo el codigo de programacion asincrono y que interactue con\n  codigo html dinamico cono el retur , va a cargar\n  10 milisegundos despues de que carge el DOM*/\n\n  var timelineScripts = setInterval(function () {\n    if (d.readyState === 'complete') {\n      //va a recibir un objeto qque se esta guardando en la BD de firebase\n      //cada foto k se sube tiene el avatar displayName PhotoURL uid\n      //figcaption colocar el avatar del usuario\n      var photoTemplate = function photoTemplate(obj) {\n        return '\\n        <figure class=\"Photo\">\\n          <img class=\"Photo-image\" src=\"' + obj.photoURL + '\">\\n          <figcaption class=\"Photo-author\">\\n            <img src=\"' + obj.avatar + '\" class=\"Photo-authorAvatar\">\\n            <p class=\"Photo-authorName\">' + obj.displayName + '</p>\\n          </figcaption>\\n        </figure>\\n      ';\n      };\n\n      //Para limpiar\n      clearInterval(timelineScripts);\n\n      var timelinePhotos = d.querySelector('.Timeline-photos');\n\n      dbRef.once('value', function (data) {\n        //c( data, data.key, data.val() )\n        data.forEach(function (photo) {\n          photos = photoTemplate(photo.val()) + photos;\n        });\n        timelinePhotos.innerHTML = photos;\n      });\n\n      dbRef.on('child_added', function (data) {\n        timelinePhotos.insertAdjacentHTML('afterbegin', photoTemplate(data.val()));\n      });\n    }\n  }, 100);\n\n  return '\\n  <article class=\"Timeline  Content-section  u-show\">\\n    <aside class=\"Timeline-photos\"></aside>\\n  </article>\\n';\n};\n\nexports.default = timeline;\n\n/***/ }),\n\n/***/ \"IxUF\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n__webpack_require__(\"wGjj\");\nmodule.exports = __webpack_require__(\"VxYX\").default;\n\n\n/***/ }),\n\n/***/ \"JkW7\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _style = __webpack_require__(\"3mJm\");\n\nvar _style2 = _interopRequireDefault(_style);\n\nvar _init = __webpack_require__(\"jx8D\");\n\nvar _auth = __webpack_require__(\"aC8z\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _init.init)();\n\nvar app = '\\n  <main class=\"EDgram\">\\n    ' + (0, _auth.isAuth)() + '\\n  </main>\\n';\n\ndocument.getElementById('root').innerHTML = app;\n//Aqui este root es el id de la pagina template\n//Aqui se ejecuta\n/*console.log(\n  'Código del bundle index.js con Vanilla JS',\n  suma(5, 6),\n  resta(4, 8)\n)\n*/\n\n(0, _init.ga)();\n\n/***/ }),\n\n/***/ \"N5iS\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.savePhotoInDB = savePhotoInDB;\n\nvar _Firebase = __webpack_require__(\"jnwl\");\n\nvar _Firebase2 = _interopRequireDefault(_Firebase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction savePhotoInDB(url, user) {\n  _Firebase2.default.database().ref().child('photos').push({\n    photoURL: url,\n    uid: user.uid,\n    displayName: user.displayName,\n    avatar: user.photoURL\n  });\n}\n\n/***/ }),\n\n/***/ \"NohU\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = __webpack_require__(\"2vmM\");\n\n\n/***/ }),\n\n/***/ \"OJYo\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n__webpack_require__(\"SloY\");\n\n\n/***/ }),\n\n/***/ \"PHi2\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n__webpack_require__(\"RJVP\");\n\n\n/***/ }),\n\n/***/ \"RFlV\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n__webpack_require__(\"RJVP\");\n\n\n/***/ }),\n\n/***/ \"RJVP\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {(function() {\n  var firebase = __webpack_require__(\"VxYX\").default;\n  var g,aa=aa||{},k=this;function l(a){return\"string\"==typeof a}function ba(a){return\"boolean\"==typeof a}function ca(){}\nfunction da(a){var b=typeof a;if(\"object\"==b)if(a){if(a instanceof Array)return\"array\";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if(\"[object Window]\"==c)return\"object\";if(\"[object Array]\"==c||\"number\"==typeof a.length&&\"undefined\"!=typeof a.splice&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"splice\"))return\"array\";if(\"[object Function]\"==c||\"undefined\"!=typeof a.call&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"call\"))return\"function\"}else return\"null\";\nelse if(\"function\"==b&&\"undefined\"==typeof a.call)return\"object\";return b}function ea(a){return null===a}function fa(a){return\"array\"==da(a)}function ha(a){var b=da(a);return\"array\"==b||\"object\"==b&&\"number\"==typeof a.length}function n(a){return\"function\"==da(a)}function q(a){var b=typeof a;return\"object\"==b&&null!=a||\"function\"==b}var ia=\"closure_uid_\"+(1E9*Math.random()>>>0),ja=0;function ka(a,b,c){return a.call.apply(a.bind,arguments)}\nfunction la(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}function r(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?r=ka:r=la;return r.apply(null,arguments)}\nfunction ma(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}}var na=Date.now||function(){return+new Date};function t(a,b){function c(){}c.prototype=b.prototype;a.lb=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.ad=function(a,c,f){for(var d=Array(arguments.length-2),e=2;e<arguments.length;e++)d[e-2]=arguments[e];return b.prototype[c].apply(a,d)}};function oa(a){a.prototype.then=a.prototype.then;a.prototype.$goog_Thenable=!0}function pa(a){if(!a)return!1;try{return!!a.$goog_Thenable}catch(b){return!1}};function u(a){if(Error.captureStackTrace)Error.captureStackTrace(this,u);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a))}t(u,Error);u.prototype.name=\"CustomError\";function qa(a,b){a=a.split(\"%s\");for(var c=\"\",d=a.length-1,e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:\"%s\");u.call(this,c+a[d])}t(qa,u);qa.prototype.name=\"AssertionError\";function ra(a,b){throw new qa(\"Failure\"+(a?\": \"+a:\"\"),Array.prototype.slice.call(arguments,1));};function sa(a,b){this.c=a;this.f=b;this.b=0;this.a=null}sa.prototype.get=function(){if(0<this.b){this.b--;var a=this.a;this.a=a.next;a.next=null}else a=this.c();return a};function ta(a,b){a.f(b);100>a.b&&(a.b++,b.next=a.a,a.a=b)};function ua(){this.b=this.a=null}var wa=new sa(function(){return new va},function(a){a.reset()});ua.prototype.add=function(a,b){var c=wa.get();c.set(a,b);this.b?this.b.next=c:this.a=c;this.b=c};function xa(){var a=ya,b=null;a.a&&(b=a.a,a.a=a.a.next,a.a||(a.b=null),b.next=null);return b}function va(){this.next=this.b=this.a=null}va.prototype.set=function(a,b){this.a=a;this.b=b;this.next=null};va.prototype.reset=function(){this.next=this.b=this.a=null};var za=Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b,void 0)}:function(a,b){if(l(a))return l(b)&&1==b.length?a.indexOf(b,0):-1;for(var c=0;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1},v=Array.prototype.forEach?function(a,b,c){Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=l(a)?a.split(\"\"):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};\nfunction Aa(a,b){var c=a.length,d=l(a)?a.split(\"\"):a;for(--c;0<=c;--c)c in d&&b.call(void 0,d[c],c,a)}\nvar Ba=Array.prototype.map?function(a,b){return Array.prototype.map.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=Array(c),e=l(a)?a.split(\"\"):a,f=0;f<c;f++)f in e&&(d[f]=b.call(void 0,e[f],f,a));return d},Ca=Array.prototype.some?function(a,b){return Array.prototype.some.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=l(a)?a.split(\"\"):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a))return!0;return!1};\nfunction Da(a){a:{var b=Ea;for(var c=a.length,d=l(a)?a.split(\"\"):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a)){b=e;break a}b=-1}return 0>b?null:l(a)?a.charAt(b):a[b]}function Fa(a,b){return 0<=za(a,b)}function Ga(a,b){b=za(a,b);var c;(c=0<=b)&&Array.prototype.splice.call(a,b,1);return c}function w(a,b){var c=0;Aa(a,function(d,e){b.call(void 0,d,e,a)&&1==Array.prototype.splice.call(a,e,1).length&&c++})}function Ha(a){return Array.prototype.concat.apply([],arguments)}\nfunction Ia(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]};function Ja(a,b){for(var c=a.split(\"%s\"),d=\"\",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join(\"%s\")}var Ka=String.prototype.trim?function(a){return a.trim()}:function(a){return/^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(a)[1]};\nfunction La(a){if(!Ma.test(a))return a;-1!=a.indexOf(\"&\")&&(a=a.replace(Na,\"&amp;\"));-1!=a.indexOf(\"<\")&&(a=a.replace(Oa,\"&lt;\"));-1!=a.indexOf(\">\")&&(a=a.replace(Pa,\"&gt;\"));-1!=a.indexOf('\"')&&(a=a.replace(Qa,\"&quot;\"));-1!=a.indexOf(\"'\")&&(a=a.replace(Ra,\"&#39;\"));-1!=a.indexOf(\"\\x00\")&&(a=a.replace(Sa,\"&#0;\"));return a}var Na=/&/g,Oa=/</g,Pa=/>/g,Qa=/\"/g,Ra=/'/g,Sa=/\\x00/g,Ma=/[\\x00&<>\"']/;function x(a,b){return-1!=a.indexOf(b)}function Ta(a,b){return a<b?-1:a>b?1:0};var Ua;a:{var Va=k.navigator;if(Va){var Wa=Va.userAgent;if(Wa){Ua=Wa;break a}}Ua=\"\"}function y(a){return x(Ua,a)};function Xa(a,b){for(var c in a)b.call(void 0,a[c],c,a)}function Ya(a){for(var b in a)return!1;return!0}function Za(a){var b={},c;for(c in a)b[c]=a[c];return b}var $a=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");function ab(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<$a.length;f++)c=$a[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};function bb(a){k.setTimeout(function(){throw a;},0)}var cb;\nfunction db(){var a=k.MessageChannel;\"undefined\"===typeof a&&\"undefined\"!==typeof window&&window.postMessage&&window.addEventListener&&!y(\"Presto\")&&(a=function(){var a=document.createElement(\"IFRAME\");a.style.display=\"none\";a.src=\"\";document.documentElement.appendChild(a);var b=a.contentWindow;a=b.document;a.open();a.write(\"\");a.close();var c=\"callImmediate\"+Math.random(),d=\"file:\"==b.location.protocol?\"*\":b.location.protocol+\"//\"+b.location.host;a=r(function(a){if((\"*\"==d||a.origin==d)&&a.data==\nc)this.port1.onmessage()},this);b.addEventListener(\"message\",a,!1);this.port1={};this.port2={postMessage:function(){b.postMessage(c,d)}}});if(\"undefined\"!==typeof a&&!y(\"Trident\")&&!y(\"MSIE\")){var b=new a,c={},d=c;b.port1.onmessage=function(){if(void 0!==c.next){c=c.next;var a=c.rb;c.rb=null;a()}};return function(a){d.next={rb:a};d=d.next;b.port2.postMessage(0)}}return\"undefined\"!==typeof document&&\"onreadystatechange\"in document.createElement(\"SCRIPT\")?function(a){var b=document.createElement(\"SCRIPT\");\nb.onreadystatechange=function(){b.onreadystatechange=null;b.parentNode.removeChild(b);b=null;a();a=null};document.documentElement.appendChild(b)}:function(a){k.setTimeout(a,0)}};function eb(a,b){fb||gb();hb||(fb(),hb=!0);ya.add(a,b)}var fb;function gb(){if(k.Promise&&k.Promise.resolve){var a=k.Promise.resolve(void 0);fb=function(){a.then(ib)}}else fb=function(){var a=ib;!n(k.setImmediate)||k.Window&&k.Window.prototype&&!y(\"Edge\")&&k.Window.prototype.setImmediate==k.setImmediate?(cb||(cb=db()),cb(a)):k.setImmediate(a)}}var hb=!1,ya=new ua;function ib(){for(var a;a=xa();){try{a.a.call(a.b)}catch(b){bb(b)}ta(wa,a)}hb=!1};function z(a,b){this.a=jb;this.j=void 0;this.f=this.b=this.c=null;this.g=this.h=!1;if(a!=ca)try{var c=this;a.call(b,function(a){kb(c,lb,a)},function(a){if(!(a instanceof mb))try{if(a instanceof Error)throw a;throw Error(\"Promise rejected.\");}catch(e){}kb(c,nb,a)})}catch(d){kb(this,nb,d)}}var jb=0,lb=2,nb=3;function ob(){this.next=this.f=this.b=this.g=this.a=null;this.c=!1}ob.prototype.reset=function(){this.f=this.b=this.g=this.a=null;this.c=!1};var pb=new sa(function(){return new ob},function(a){a.reset()});\nfunction qb(a,b,c){var d=pb.get();d.g=a;d.b=b;d.f=c;return d}function A(a){if(a instanceof z)return a;var b=new z(ca);kb(b,lb,a);return b}function B(a){return new z(function(b,c){c(a)})}function rb(a,b,c){sb(a,b,c,null)||eb(ma(b,a))}function tb(a){return new z(function(b,c){var d=a.length,e=[];if(d)for(var f=function(a,c){d--;e[a]=c;0==d&&b(e)},h=function(a){c(a)},m=0,p;m<a.length;m++)p=a[m],rb(p,ma(f,m),h);else b(e)})}\nfunction ub(a){return new z(function(b){var c=a.length,d=[];if(c)for(var e=function(a,e,f){c--;d[a]=e?{Zb:!0,value:f}:{Zb:!1,reason:f};0==c&&b(d)},f=0,h;f<a.length;f++)h=a[f],rb(h,ma(e,f,!0),ma(e,f,!1));else b(d)})}z.prototype.then=function(a,b,c){return vb(this,n(a)?a:null,n(b)?b:null,c)};oa(z);g=z.prototype;g.ha=function(a,b){a=qb(a,a,b);a.c=!0;wb(this,a);return this};g.m=function(a,b){return vb(this,null,a,b)};g.cancel=function(a){this.a==jb&&eb(function(){var b=new mb(a);xb(this,b)},this)};\nfunction xb(a,b){if(a.a==jb)if(a.c){var c=a.c;if(c.b){for(var d=0,e=null,f=null,h=c.b;h&&(h.c||(d++,h.a==a&&(e=h),!(e&&1<d)));h=h.next)e||(f=h);e&&(c.a==jb&&1==d?xb(c,b):(f?(d=f,d.next==c.f&&(c.f=d),d.next=d.next.next):yb(c),zb(c,e,nb,b)))}a.c=null}else kb(a,nb,b)}function wb(a,b){a.b||a.a!=lb&&a.a!=nb||Ab(a);a.f?a.f.next=b:a.b=b;a.f=b}\nfunction vb(a,b,c,d){var e=qb(null,null,null);e.a=new z(function(a,h){e.g=b?function(c){try{var e=b.call(d,c);a(e)}catch(E){h(E)}}:a;e.b=c?function(b){try{var e=c.call(d,b);void 0===e&&b instanceof mb?h(b):a(e)}catch(E){h(E)}}:h});e.a.c=a;wb(a,e);return e.a}g.Kc=function(a){this.a=jb;kb(this,lb,a)};g.Lc=function(a){this.a=jb;kb(this,nb,a)};\nfunction kb(a,b,c){a.a==jb&&(a===c&&(b=nb,c=new TypeError(\"Promise cannot resolve to itself\")),a.a=1,sb(c,a.Kc,a.Lc,a)||(a.j=c,a.a=b,a.c=null,Ab(a),b!=nb||c instanceof mb||Bb(a,c)))}function sb(a,b,c,d){if(a instanceof z)return wb(a,qb(b||ca,c||null,d)),!0;if(pa(a))return a.then(b,c,d),!0;if(q(a))try{var e=a.then;if(n(e))return Cb(a,e,b,c,d),!0}catch(f){return c.call(d,f),!0}return!1}\nfunction Cb(a,b,c,d,e){function f(a){m||(m=!0,d.call(e,a))}function h(a){m||(m=!0,c.call(e,a))}var m=!1;try{b.call(a,h,f)}catch(p){f(p)}}function Ab(a){a.h||(a.h=!0,eb(a.Ub,a))}function yb(a){var b=null;a.b&&(b=a.b,a.b=b.next,b.next=null);a.b||(a.f=null);return b}g.Ub=function(){for(var a;a=yb(this);)zb(this,a,this.a,this.j);this.h=!1};\nfunction zb(a,b,c,d){if(c==nb&&b.b&&!b.c)for(;a&&a.g;a=a.c)a.g=!1;if(b.a)b.a.c=null,Db(b,c,d);else try{b.c?b.g.call(b.f):Db(b,c,d)}catch(e){Eb.call(null,e)}ta(pb,b)}function Db(a,b,c){b==lb?a.g.call(a.f,c):a.b&&a.b.call(a.f,c)}function Bb(a,b){a.g=!0;eb(function(){a.g&&Eb.call(null,b)})}var Eb=bb;function mb(a){u.call(this,a)}t(mb,u);mb.prototype.name=\"cancel\";function Fb(){0!=Gb&&(Hb[this[ia]||(this[ia]=++ja)]=this);this.pa=this.pa;this.oa=this.oa}var Gb=0,Hb={};Fb.prototype.pa=!1;function Ib(a){if(!a.pa&&(a.pa=!0,a.ua(),0!=Gb)){var b=a[ia]||(a[ia]=++ja);if(0!=Gb&&a.oa&&0<a.oa.length)throw Error(a+\" did not empty its onDisposeCallbacks queue. This probably means it overrode dispose() or disposeInternal() without calling the superclass' method.\");delete Hb[b]}}Fb.prototype.ua=function(){if(this.oa)for(;this.oa.length;)this.oa.shift()()};function Jb(a){Jb[\" \"](a);return a}Jb[\" \"]=ca;function Kb(a,b){var c=Lb;return Object.prototype.hasOwnProperty.call(c,a)?c[a]:c[a]=b(a)};var Mb=y(\"Opera\"),C=y(\"Trident\")||y(\"MSIE\"),Nb=y(\"Edge\"),Ob=Nb||C,Pb=y(\"Gecko\")&&!(x(Ua.toLowerCase(),\"webkit\")&&!y(\"Edge\"))&&!(y(\"Trident\")||y(\"MSIE\"))&&!y(\"Edge\"),Qb=x(Ua.toLowerCase(),\"webkit\")&&!y(\"Edge\");function Rb(){var a=k.document;return a?a.documentMode:void 0}var Sb;\na:{var Tb=\"\",Ub=function(){var a=Ua;if(Pb)return/rv:([^\\);]+)(\\)|;)/.exec(a);if(Nb)return/Edge\\/([\\d\\.]+)/.exec(a);if(C)return/\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);if(Qb)return/WebKit\\/(\\S+)/.exec(a);if(Mb)return/(?:Version)[ \\/]?(\\S+)/.exec(a)}();Ub&&(Tb=Ub?Ub[1]:\"\");if(C){var Vb=Rb();if(null!=Vb&&Vb>parseFloat(Tb)){Sb=String(Vb);break a}}Sb=Tb}var Lb={};\nfunction Wb(a){return Kb(a,function(){for(var b=0,c=Ka(String(Sb)).split(\".\"),d=Ka(String(a)).split(\".\"),e=Math.max(c.length,d.length),f=0;0==b&&f<e;f++){var h=c[f]||\"\",m=d[f]||\"\";do{h=/(\\d*)(\\D*)(.*)/.exec(h)||[\"\",\"\",\"\",\"\"];m=/(\\d*)(\\D*)(.*)/.exec(m)||[\"\",\"\",\"\",\"\"];if(0==h[0].length&&0==m[0].length)break;b=Ta(0==h[1].length?0:parseInt(h[1],10),0==m[1].length?0:parseInt(m[1],10))||Ta(0==h[2].length,0==m[2].length)||Ta(h[2],m[2]);h=h[3];m=m[3]}while(0==b)}return 0<=b})}var Xb;var Yb=k.document;\nXb=Yb&&C?Rb()||(\"CSS1Compat\"==Yb.compatMode?parseInt(Sb,10):5):void 0;var Zb=Object.freeze||function(a){return a};var $b=!C||9<=Number(Xb),ac=C&&!Wb(\"9\"),bc=function(){if(!k.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},\"passive\",{get:function(){a=!0}});k.addEventListener(\"test\",ca,b);k.removeEventListener(\"test\",ca,b);return a}();function D(a,b){this.type=a;this.b=this.target=b;this.Eb=!0}D.prototype.preventDefault=function(){this.Eb=!1};function cc(a,b){D.call(this,a?a.type:\"\");this.relatedTarget=this.b=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=0;this.key=\"\";this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.pointerId=0;this.pointerType=\"\";this.a=null;if(a){var c=this.type=a.type,d=a.changedTouches?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.b=b;if(b=a.relatedTarget){if(Pb){a:{try{Jb(b.nodeName);var e=!0;break a}catch(f){}e=!1}e||(b=null)}}else\"mouseover\"==c?b=\na.fromElement:\"mouseout\"==c&&(b=a.toElement);this.relatedTarget=b;null===d?(this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0):(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0);this.button=a.button;this.key=a.key||\"\";this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=\na.metaKey;this.pointerId=a.pointerId||0;this.pointerType=l(a.pointerType)?a.pointerType:dc[a.pointerType]||\"\";this.a=a;a.defaultPrevented&&this.preventDefault()}}t(cc,D);var dc=Zb({2:\"touch\",3:\"pen\",4:\"mouse\"});cc.prototype.preventDefault=function(){cc.lb.preventDefault.call(this);var a=this.a;if(a.preventDefault)a.preventDefault();else if(a.returnValue=!1,ac)try{if(a.ctrlKey||112<=a.keyCode&&123>=a.keyCode)a.keyCode=-1}catch(b){}};cc.prototype.f=function(){return this.a};var ec=\"closure_listenable_\"+(1E6*Math.random()|0),fc=0;function gc(a,b,c,d,e){this.listener=a;this.proxy=null;this.src=b;this.type=c;this.capture=!!d;this.La=e;this.key=++fc;this.ma=this.Ha=!1}function hc(a){a.ma=!0;a.listener=null;a.proxy=null;a.src=null;a.La=null};function jc(a){this.src=a;this.a={};this.b=0}jc.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.a[f];a||(a=this.a[f]=[],this.b++);var h=kc(a,b,d,e);-1<h?(b=a[h],c||(b.Ha=!1)):(b=new gc(b,this.src,f,!!d,e),b.Ha=c,a.push(b));return b};function lc(a,b){var c=b.type;c in a.a&&Ga(a.a[c],b)&&(hc(b),0==a.a[c].length&&(delete a.a[c],a.b--))}function kc(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.ma&&f.listener==b&&f.capture==!!c&&f.La==d)return e}return-1};var mc=\"closure_lm_\"+(1E6*Math.random()|0),nc={},oc=0;function pc(a,b,c,d,e){if(d&&d.once)qc(a,b,c,d,e);else if(fa(b))for(var f=0;f<b.length;f++)pc(a,b[f],c,d,e);else c=rc(c),a&&a[ec]?sc(a,b,c,q(d)?!!d.capture:!!d,e):tc(a,b,c,!1,d,e)}\nfunction tc(a,b,c,d,e,f){if(!b)throw Error(\"Invalid event type\");var h=q(e)?!!e.capture:!!e,m=uc(a);m||(a[mc]=m=new jc(a));c=m.add(b,c,d,h,f);if(!c.proxy){d=vc();c.proxy=d;d.src=a;d.listener=c;if(a.addEventListener)bc||(e=h),void 0===e&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(wc(b.toString()),d);else if(a.addListener&&a.removeListener)a.addListener(d);else throw Error(\"addEventListener and attachEvent are unavailable.\");oc++}}\nfunction vc(){var a=xc,b=$b?function(c){return a.call(b.src,b.listener,c)}:function(c){c=a.call(b.src,b.listener,c);if(!c)return c};return b}function qc(a,b,c,d,e){if(fa(b))for(var f=0;f<b.length;f++)qc(a,b[f],c,d,e);else c=rc(c),a&&a[ec]?yc(a,b,c,q(d)?!!d.capture:!!d,e):tc(a,b,c,!0,d,e)}\nfunction F(a,b,c,d,e){if(fa(b))for(var f=0;f<b.length;f++)F(a,b[f],c,d,e);else(d=q(d)?!!d.capture:!!d,c=rc(c),a&&a[ec])?(a=a.u,b=String(b).toString(),b in a.a&&(f=a.a[b],c=kc(f,c,d,e),-1<c&&(hc(f[c]),Array.prototype.splice.call(f,c,1),0==f.length&&(delete a.a[b],a.b--)))):a&&(a=uc(a))&&(b=a.a[b.toString()],a=-1,b&&(a=kc(b,c,d,e)),(c=-1<a?b[a]:null)&&zc(c))}\nfunction zc(a){if(\"number\"!=typeof a&&a&&!a.ma){var b=a.src;if(b&&b[ec])lc(b.u,a);else{var c=a.type,d=a.proxy;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(wc(c),d):b.addListener&&b.removeListener&&b.removeListener(d);oc--;(c=uc(b))?(lc(c,a),0==c.b&&(c.src=null,b[mc]=null)):hc(a)}}}function wc(a){return a in nc?nc[a]:nc[a]=\"on\"+a}\nfunction Ac(a,b,c,d){var e=!0;if(a=uc(a))if(b=a.a[b.toString()])for(b=b.concat(),a=0;a<b.length;a++){var f=b[a];f&&f.capture==c&&!f.ma&&(f=Bc(f,d),e=e&&!1!==f)}return e}function Bc(a,b){var c=a.listener,d=a.La||a.src;a.Ha&&zc(a);return c.call(d,b)}\nfunction xc(a,b){if(a.ma)return!0;if(!$b){if(!b)a:{b=[\"window\",\"event\"];for(var c=k,d=0;d<b.length;d++)if(c=c[b[d]],null==c){b=null;break a}b=c}d=b;b=new cc(d,this);c=!0;if(!(0>d.keyCode||void 0!=d.returnValue)){a:{var e=!1;if(0==d.keyCode)try{d.keyCode=-1;break a}catch(h){e=!0}if(e||void 0==d.returnValue)d.returnValue=!0}d=[];for(e=b.b;e;e=e.parentNode)d.push(e);a=a.type;for(e=d.length-1;0<=e;e--){b.b=d[e];var f=Ac(d[e],a,!0,b);c=c&&f}for(e=0;e<d.length;e++)b.b=d[e],f=Ac(d[e],a,!1,b),c=c&&f}return c}return Bc(a,\nnew cc(b,this))}function uc(a){a=a[mc];return a instanceof jc?a:null}var Cc=\"__closure_events_fn_\"+(1E9*Math.random()>>>0);function rc(a){if(n(a))return a;a[Cc]||(a[Cc]=function(b){return a.handleEvent(b)});return a[Cc]};function G(){Fb.call(this);this.u=new jc(this);this.Mb=this;this.Ta=null}t(G,Fb);G.prototype[ec]=!0;G.prototype.addEventListener=function(a,b,c,d){pc(this,a,b,c,d)};G.prototype.removeEventListener=function(a,b,c,d){F(this,a,b,c,d)};\nG.prototype.dispatchEvent=function(a){var b,c=this.Ta;if(c)for(b=[];c;c=c.Ta)b.push(c);c=this.Mb;var d=a.type||a;if(l(a))a=new D(a,c);else if(a instanceof D)a.target=a.target||c;else{var e=a;a=new D(d,c);ab(a,e)}e=!0;if(b)for(var f=b.length-1;0<=f;f--){var h=a.b=b[f];e=Dc(h,d,!0,a)&&e}h=a.b=c;e=Dc(h,d,!0,a)&&e;e=Dc(h,d,!1,a)&&e;if(b)for(f=0;f<b.length;f++)h=a.b=b[f],e=Dc(h,d,!1,a)&&e;return e};\nG.prototype.ua=function(){G.lb.ua.call(this);if(this.u){var a=this.u,b=0,c;for(c in a.a){for(var d=a.a[c],e=0;e<d.length;e++)++b,hc(d[e]);delete a.a[c];a.b--}}this.Ta=null};function sc(a,b,c,d,e){a.u.add(String(b),c,!1,d,e)}function yc(a,b,c,d,e){a.u.add(String(b),c,!0,d,e)}\nfunction Dc(a,b,c,d){b=a.u.a[String(b)];if(!b)return!0;b=b.concat();for(var e=!0,f=0;f<b.length;++f){var h=b[f];if(h&&!h.ma&&h.capture==c){var m=h.listener,p=h.La||h.src;h.Ha&&lc(a.u,h);e=!1!==m.call(p,d)&&e}}return e&&0!=d.Eb};function Ec(a,b,c){if(n(a))c&&(a=r(a,c));else if(a&&\"function\"==typeof a.handleEvent)a=r(a.handleEvent,a);else throw Error(\"Invalid listener argument\");return 2147483647<Number(b)?-1:k.setTimeout(a,b||0)}function Fc(a){var b=null;return(new z(function(c,d){b=Ec(function(){c(void 0)},a);-1==b&&d(Error(\"Failed to schedule timer.\"))})).m(function(a){k.clearTimeout(b);throw a;})};function Gc(a){if(a.S&&\"function\"==typeof a.S)return a.S();if(l(a))return a.split(\"\");if(ha(a)){for(var b=[],c=a.length,d=0;d<c;d++)b.push(a[d]);return b}b=[];c=0;for(d in a)b[c++]=a[d];return b}function Hc(a){if(a.U&&\"function\"==typeof a.U)return a.U();if(!a.S||\"function\"!=typeof a.S){if(ha(a)||l(a)){var b=[];a=a.length;for(var c=0;c<a;c++)b.push(c);return b}b=[];c=0;for(var d in a)b[c++]=d;return b}}\nfunction Ic(a,b){if(a.forEach&&\"function\"==typeof a.forEach)a.forEach(b,void 0);else if(ha(a)||l(a))v(a,b,void 0);else for(var c=Hc(a),d=Gc(a),e=d.length,f=0;f<e;f++)b.call(void 0,d[f],c&&c[f],a)};function Kc(a,b){this.b={};this.a=[];this.c=0;var c=arguments.length;if(1<c){if(c%2)throw Error(\"Uneven number of arguments\");for(var d=0;d<c;d+=2)this.set(arguments[d],arguments[d+1])}else if(a)if(a instanceof Kc)for(c=a.U(),d=0;d<c.length;d++)this.set(c[d],a.get(c[d]));else for(d in a)this.set(d,a[d])}g=Kc.prototype;g.S=function(){Lc(this);for(var a=[],b=0;b<this.a.length;b++)a.push(this.b[this.a[b]]);return a};g.U=function(){Lc(this);return this.a.concat()};\ng.clear=function(){this.b={};this.c=this.a.length=0};function Lc(a){if(a.c!=a.a.length){for(var b=0,c=0;b<a.a.length;){var d=a.a[b];Mc(a.b,d)&&(a.a[c++]=d);b++}a.a.length=c}if(a.c!=a.a.length){var e={};for(c=b=0;b<a.a.length;)d=a.a[b],Mc(e,d)||(a.a[c++]=d,e[d]=1),b++;a.a.length=c}}g.get=function(a,b){return Mc(this.b,a)?this.b[a]:b};g.set=function(a,b){Mc(this.b,a)||(this.c++,this.a.push(a));this.b[a]=b};\ng.forEach=function(a,b){for(var c=this.U(),d=0;d<c.length;d++){var e=c[d],f=this.get(e);a.call(b,f,e,this)}};function Mc(a,b){return Object.prototype.hasOwnProperty.call(a,b)};var Nc=/^(?:([^:/?#.]+):)?(?:\\/\\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$/;function Oc(a,b){if(a){a=a.split(\"&\");for(var c=0;c<a.length;c++){var d=a[c].indexOf(\"=\"),e=null;if(0<=d){var f=a[c].substring(0,d);e=a[c].substring(d+1)}else f=a[c];b(f,e?decodeURIComponent(e.replace(/\\+/g,\" \")):\"\")}}};function Pc(a,b){this.b=this.l=this.c=\"\";this.j=null;this.h=this.g=\"\";this.f=!1;if(a instanceof Pc){this.f=void 0!==b?b:a.f;Qc(this,a.c);this.l=a.l;this.b=a.b;Rc(this,a.j);this.g=a.g;b=a.a;var c=new Sc;c.c=b.c;b.a&&(c.a=new Kc(b.a),c.b=b.b);Tc(this,c);this.h=a.h}else a&&(c=String(a).match(Nc))?(this.f=!!b,Qc(this,c[1]||\"\",!0),this.l=Uc(c[2]||\"\"),this.b=Uc(c[3]||\"\",!0),Rc(this,c[4]),this.g=Uc(c[5]||\"\",!0),Tc(this,c[6]||\"\",!0),this.h=Uc(c[7]||\"\")):(this.f=!!b,this.a=new Sc(null,this.f))}\nPc.prototype.toString=function(){var a=[],b=this.c;b&&a.push(Vc(b,Wc,!0),\":\");var c=this.b;if(c||\"file\"==b)a.push(\"//\"),(b=this.l)&&a.push(Vc(b,Wc,!0),\"@\"),a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),c=this.j,null!=c&&a.push(\":\",String(c));if(c=this.g)this.b&&\"/\"!=c.charAt(0)&&a.push(\"/\"),a.push(Vc(c,\"/\"==c.charAt(0)?Xc:Yc,!0));(c=this.a.toString())&&a.push(\"?\",c);(c=this.h)&&a.push(\"#\",Vc(c,Zc));return a.join(\"\")};\nfunction Qc(a,b,c){a.c=c?Uc(b,!0):b;a.c&&(a.c=a.c.replace(/:$/,\"\"))}function Rc(a,b){if(b){b=Number(b);if(isNaN(b)||0>b)throw Error(\"Bad port number \"+b);a.j=b}else a.j=null}function Tc(a,b,c){b instanceof Sc?(a.a=b,$c(a.a,a.f)):(c||(b=Vc(b,ad)),a.a=new Sc(b,a.f))}function H(a,b,c){a.a.set(b,c)}function bd(a,b){return a.a.get(b)}function cd(a){return a instanceof Pc?new Pc(a):new Pc(a,void 0)}function dd(a,b){var c=new Pc(null,void 0);Qc(c,\"https\");a&&(c.b=a);b&&(c.g=b);return c}\nfunction Uc(a,b){return a?b?decodeURI(a.replace(/%25/g,\"%2525\")):decodeURIComponent(a):\"\"}function Vc(a,b,c){return l(a)?(a=encodeURI(a).replace(b,ed),c&&(a=a.replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),a):null}function ed(a){a=a.charCodeAt(0);return\"%\"+(a>>4&15).toString(16)+(a&15).toString(16)}var Wc=/[#\\/\\?@]/g,Yc=/[#\\?:]/g,Xc=/[#\\?]/g,ad=/[#\\?@]/g,Zc=/#/g;function Sc(a,b){this.b=this.a=null;this.c=a||null;this.f=!!b}\nfunction fd(a){a.a||(a.a=new Kc,a.b=0,a.c&&Oc(a.c,function(b,c){a.add(decodeURIComponent(b.replace(/\\+/g,\" \")),c)}))}function gd(a){var b=Hc(a);if(\"undefined\"==typeof b)throw Error(\"Keys are undefined\");var c=new Sc(null,void 0);a=Gc(a);for(var d=0;d<b.length;d++){var e=b[d],f=a[d];fa(f)?hd(c,e,f):c.add(e,f)}return c}g=Sc.prototype;g.add=function(a,b){fd(this);this.c=null;a=id(this,a);var c=this.a.get(a);c||this.a.set(a,c=[]);c.push(b);this.b+=1;return this};\nfunction jd(a,b){fd(a);b=id(a,b);Mc(a.a.b,b)&&(a.c=null,a.b-=a.a.get(b).length,a=a.a,Mc(a.b,b)&&(delete a.b[b],a.c--,a.a.length>2*a.c&&Lc(a)))}g.clear=function(){this.a=this.c=null;this.b=0};function kd(a,b){fd(a);b=id(a,b);return Mc(a.a.b,b)}g.forEach=function(a,b){fd(this);this.a.forEach(function(c,d){v(c,function(c){a.call(b,c,d,this)},this)},this)};g.U=function(){fd(this);for(var a=this.a.S(),b=this.a.U(),c=[],d=0;d<b.length;d++)for(var e=a[d],f=0;f<e.length;f++)c.push(b[d]);return c};\ng.S=function(a){fd(this);var b=[];if(l(a))kd(this,a)&&(b=Ha(b,this.a.get(id(this,a))));else{a=this.a.S();for(var c=0;c<a.length;c++)b=Ha(b,a[c])}return b};g.set=function(a,b){fd(this);this.c=null;a=id(this,a);kd(this,a)&&(this.b-=this.a.get(a).length);this.a.set(a,[b]);this.b+=1;return this};g.get=function(a,b){a=a?this.S(a):[];return 0<a.length?String(a[0]):b};function hd(a,b,c){jd(a,b);0<c.length&&(a.c=null,a.a.set(id(a,b),Ia(c)),a.b+=c.length)}\ng.toString=function(){if(this.c)return this.c;if(!this.a)return\"\";for(var a=[],b=this.a.U(),c=0;c<b.length;c++){var d=b[c],e=encodeURIComponent(String(d));d=this.S(d);for(var f=0;f<d.length;f++){var h=e;\"\"!==d[f]&&(h+=\"=\"+encodeURIComponent(String(d[f])));a.push(h)}}return this.c=a.join(\"&\")};function id(a,b){b=String(b);a.f&&(b=b.toLowerCase());return b}function $c(a,b){b&&!a.f&&(fd(a),a.c=null,a.a.forEach(function(a,b){var c=b.toLowerCase();b!=c&&(jd(this,b),hd(this,c,a))},a));a.f=b};var ld=!C||9<=Number(Xb);function md(){this.a=\"\";this.b=nd}md.prototype.la=!0;md.prototype.ja=function(){return this.a};md.prototype.toString=function(){return\"Const{\"+this.a+\"}\"};function od(a){if(a instanceof md&&a.constructor===md&&a.b===nd)return a.a;ra(\"expected object of type Const, got '\"+a+\"'\");return\"type_error:Const\"}var nd={};function pd(a){var b=new md;b.a=a;return b}pd(\"\");function qd(){this.a=\"\";this.b=rd}qd.prototype.la=!0;qd.prototype.ja=function(){return this.a};qd.prototype.toString=function(){return\"TrustedResourceUrl{\"+this.a+\"}\"};function sd(a){if(a instanceof qd&&a.constructor===qd&&a.b===rd)return a.a;ra(\"expected object of type TrustedResourceUrl, got '\"+a+\"' of type \"+da(a));return\"type_error:TrustedResourceUrl\"}\nfunction td(a,b){var c=od(a);if(!ud.test(c))throw Error(\"Invalid TrustedResourceUrl format: \"+c);a=c.replace(vd,function(a,e){if(!Object.prototype.hasOwnProperty.call(b,e))throw Error('Found marker, \"'+e+'\", in format string, \"'+c+'\", but no valid label mapping found in args: '+JSON.stringify(b));a=b[e];return a instanceof md?od(a):encodeURIComponent(String(a))});return wd(a)}var vd=/%{(\\w+)}/g,ud=/^(?:https:)?\\/\\/[0-9a-z.:[\\]-]+\\/|^\\/[^\\/\\\\]|^about:blank#/i,rd={};\nfunction wd(a){var b=new qd;b.a=a;return b};function xd(){this.a=\"\";this.b=yd}xd.prototype.la=!0;xd.prototype.ja=function(){return this.a};xd.prototype.toString=function(){return\"SafeUrl{\"+this.a+\"}\"};function zd(a){if(a instanceof xd&&a.constructor===xd&&a.b===yd)return a.a;ra(\"expected object of type SafeUrl, got '\"+a+\"' of type \"+da(a));return\"type_error:SafeUrl\"}var Ad=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;\nfunction Bd(a){if(a instanceof xd)return a;a=a.la?a.ja():String(a);Ad.test(a)||(a=\"about:invalid#zClosurez\");return Cd(a)}var yd={};function Cd(a){var b=new xd;b.a=a;return b}Cd(\"about:blank\");function Dd(){this.a=\"\";this.b=Ed}Dd.prototype.la=!0;Dd.prototype.ja=function(){return this.a};Dd.prototype.toString=function(){return\"SafeHtml{\"+this.a+\"}\"};function Fd(a){if(a instanceof Dd&&a.constructor===Dd&&a.b===Ed)return a.a;ra(\"expected object of type SafeHtml, got '\"+a+\"' of type \"+da(a));return\"type_error:SafeHtml\"}var Ed={};function Gd(a){var b=new Dd;b.a=a;return b}Gd(\"<!DOCTYPE html>\");Gd(\"\");Gd(\"<br>\");function Hd(a){var b=document;return l(a)?b.getElementById(a):a}function Id(a,b){Xa(b,function(b,d){b&&b.la&&(b=b.ja());\"style\"==d?a.style.cssText=b:\"class\"==d?a.className=b:\"for\"==d?a.htmlFor=b:Jd.hasOwnProperty(d)?a.setAttribute(Jd[d],b):0==d.lastIndexOf(\"aria-\",0)||0==d.lastIndexOf(\"data-\",0)?a.setAttribute(d,b):a[d]=b})}\nvar Jd={cellpadding:\"cellPadding\",cellspacing:\"cellSpacing\",colspan:\"colSpan\",frameborder:\"frameBorder\",height:\"height\",maxlength:\"maxLength\",nonce:\"nonce\",role:\"role\",rowspan:\"rowSpan\",type:\"type\",usemap:\"useMap\",valign:\"vAlign\",width:\"width\"};\nfunction Kd(a,b,c){var d=arguments,e=document,f=String(d[0]),h=d[1];if(!ld&&h&&(h.name||h.type)){f=[\"<\",f];h.name&&f.push(' name=\"',La(h.name),'\"');if(h.type){f.push(' type=\"',La(h.type),'\"');var m={};ab(m,h);delete m.type;h=m}f.push(\">\");f=f.join(\"\")}f=e.createElement(f);h&&(l(h)?f.className=h:fa(h)?f.className=h.join(\" \"):Id(f,h));2<d.length&&Ld(e,f,d);return f}\nfunction Ld(a,b,c){function d(c){c&&b.appendChild(l(c)?a.createTextNode(c):c)}for(var e=2;e<c.length;e++){var f=c[e];!ha(f)||q(f)&&0<f.nodeType?d(f):v(Md(f)?Ia(f):f,d)}}function Md(a){if(a&&\"number\"==typeof a.length){if(q(a))return\"function\"==typeof a.item||\"string\"==typeof a.item;if(n(a))return\"function\"==typeof a.item}return!1};function Nd(a){var b=[];Od(new Pd,a,b);return b.join(\"\")}function Pd(){}\nfunction Od(a,b,c){if(null==b)c.push(\"null\");else{if(\"object\"==typeof b){if(fa(b)){var d=b;b=d.length;c.push(\"[\");for(var e=\"\",f=0;f<b;f++)c.push(e),Od(a,d[f],c),e=\",\";c.push(\"]\");return}if(b instanceof String||b instanceof Number||b instanceof Boolean)b=b.valueOf();else{c.push(\"{\");e=\"\";for(d in b)Object.prototype.hasOwnProperty.call(b,d)&&(f=b[d],\"function\"!=typeof f&&(c.push(e),Qd(d,c),c.push(\":\"),Od(a,f,c),e=\",\"));c.push(\"}\");return}}switch(typeof b){case \"string\":Qd(b,c);break;case \"number\":c.push(isFinite(b)&&\n!isNaN(b)?String(b):\"null\");break;case \"boolean\":c.push(String(b));break;case \"function\":c.push(\"null\");break;default:throw Error(\"Unknown type: \"+typeof b);}}}var Rd={'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"/\":\"\\\\/\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\\t\":\"\\\\t\",\"\\x0B\":\"\\\\u000b\"},Sd=/\\uffff/.test(\"\\uffff\")?/[\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g:/[\\\\\"\\x00-\\x1f\\x7f-\\xff]/g;\nfunction Qd(a,b){b.push('\"',a.replace(Sd,function(a){var b=Rd[a];b||(b=\"\\\\u\"+(a.charCodeAt(0)|65536).toString(16).substr(1),Rd[a]=b);return b}),'\"')};function Td(){var a=I();return C&&!!Xb&&11==Xb||/Edge\\/\\d+/.test(a)}function Ud(){return k.window&&k.window.location.href||self&&self.location&&self.location.href||\"\"}function Vd(a,b){b=b||k.window;var c=\"about:blank\";a&&(c=zd(Bd(a)));b.location.href=c}\nfunction Wd(a,b){var c=[],d;for(d in a)if(d in b)if(typeof a[d]!=typeof b[d])c.push(d);else if(fa(a[d])){a:{var e=void 0;var f=a[d],h=b[d];for(e in f)if(!(e in h)||f[e]!==h[e]){e=!1;break a}for(e in h)if(!(e in f)){e=!1;break a}e=!0}e||c.push(d)}else\"object\"==typeof a[d]&&null!=a[d]&&null!=b[d]?0<Wd(a[d],b[d]).length&&c.push(d):a[d]!==b[d]&&c.push(d);else c.push(d);for(d in b)d in a||c.push(d);return c}\nfunction Xd(){var a=I();a=Yd(a)!=Zd?null:(a=a.match(/\\sChrome\\/(\\d+)/i))&&2==a.length?parseInt(a[1],10):null;return a&&30>a?!1:!C||!Xb||9<Xb}function $d(a){a=(a||I()).toLowerCase();return a.match(/android/)||a.match(/webos/)||a.match(/iphone|ipad|ipod/)||a.match(/blackberry/)||a.match(/windows phone/)||a.match(/iemobile/)?!0:!1}function ae(a){a=a||k.window;try{a.close()}catch(b){}}\nfunction be(a,b,c){var d=Math.floor(1E9*Math.random()).toString();b=b||500;c=c||600;var e=(window.screen.availHeight-c)/2,f=(window.screen.availWidth-b)/2;b={width:b,height:c,top:0<e?e:0,left:0<f?f:0,location:!0,resizable:!0,statusbar:!0,toolbar:!1};c=I().toLowerCase();d&&(b.target=d,x(c,\"crios/\")&&(b.target=\"_blank\"));Yd(I())==ce&&(a=a||\"http://localhost\",b.scrollbars=!0);c=a||\"\";(a=b)||(a={});d=window;b=c instanceof xd?c:Bd(\"undefined\"!=typeof c.href?c.href:String(c));c=a.target||c.target;e=[];\nfor(h in a)switch(h){case \"width\":case \"height\":case \"top\":case \"left\":e.push(h+\"=\"+a[h]);break;case \"target\":case \"noopener\":case \"noreferrer\":break;default:e.push(h+\"=\"+(a[h]?1:0))}var h=e.join(\",\");(y(\"iPhone\")&&!y(\"iPod\")&&!y(\"iPad\")||y(\"iPad\")||y(\"iPod\"))&&d.navigator&&d.navigator.standalone&&c&&\"_self\"!=c?(h=d.document.createElement(\"A\"),b instanceof xd||b instanceof xd||(b=b.la?b.ja():String(b),Ad.test(b)||(b=\"about:invalid#zClosurez\"),b=Cd(b)),h.href=zd(b),h.setAttribute(\"target\",c),a.noreferrer&&\nh.setAttribute(\"rel\",\"noreferrer\"),a=document.createEvent(\"MouseEvent\"),a.initMouseEvent(\"click\",!0,!0,d,1),h.dispatchEvent(a),h={}):a.noreferrer?(h=d.open(\"\",c,h),a=zd(b),h&&(Ob&&x(a,\";\")&&(a=\"'\"+a.replace(/'/g,\"%27\")+\"'\"),h.opener=null,pd(\"b/12014412, meta tag with sanitized URL\"),a='<meta name=\"referrer\" content=\"no-referrer\"><meta http-equiv=\"refresh\" content=\"0; url='+La(a)+'\">',a=Gd(a),h.document.write(Fd(a)),h.document.close())):(h=d.open(zd(b),c,h))&&a.noopener&&(h.opener=null);if(h)try{h.focus()}catch(m){}return h}\nfunction de(a){return new z(function(b){function c(){Fc(2E3).then(function(){if(!a||a.closed)b();else return c()})}return c()})}var ee=/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;function fe(){var a=null;return(new z(function(b){\"complete\"==k.document.readyState?b():(a=function(){b()},qc(window,\"load\",a))})).m(function(b){F(window,\"load\",a);throw b;})}\nfunction ge(){return he(void 0)?fe().then(function(){return new z(function(a,b){var c=k.document,d=setTimeout(function(){b(Error(\"Cordova framework is not ready.\"))},1E3);c.addEventListener(\"deviceready\",function(){clearTimeout(d);a()},!1)})}):B(Error(\"Cordova must run in an Android or iOS file scheme.\"))}function he(a){a=a||I();return!(\"file:\"!==ie()||!a.toLowerCase().match(/iphone|ipad|ipod|android/))}function je(){var a=k.window;try{return!(!a||a==a.top)}catch(b){return!1}}\nfunction ke(){return\"object\"!==typeof k.window&&\"function\"===typeof k.importScripts}function le(){return firebase.INTERNAL.hasOwnProperty(\"reactNative\")?\"ReactNative\":firebase.INTERNAL.hasOwnProperty(\"node\")?\"Node\":ke()?\"Worker\":\"Browser\"}function me(){var a=le();return\"ReactNative\"===a||\"Node\"===a}var ce=\"Firefox\",Zd=\"Chrome\";\nfunction Yd(a){var b=a.toLowerCase();if(x(b,\"opera/\")||x(b,\"opr/\")||x(b,\"opios/\"))return\"Opera\";if(x(b,\"iemobile\"))return\"IEMobile\";if(x(b,\"msie\")||x(b,\"trident/\"))return\"IE\";if(x(b,\"edge/\"))return\"Edge\";if(x(b,\"firefox/\"))return ce;if(x(b,\"silk/\"))return\"Silk\";if(x(b,\"blackberry\"))return\"Blackberry\";if(x(b,\"webos\"))return\"Webos\";if(!x(b,\"safari/\")||x(b,\"chrome/\")||x(b,\"crios/\")||x(b,\"android\"))if(!x(b,\"chrome/\")&&!x(b,\"crios/\")||x(b,\"edge/\")){if(x(b,\"android\"))return\"Android\";if((a=a.match(/([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/))&&\n2==a.length)return a[1]}else return Zd;else return\"Safari\";return\"Other\"}var ne={Qc:\"FirebaseCore-web\",Sc:\"FirebaseUI-web\"};function oe(a,b){b=b||[];var c=[],d={},e;for(e in ne)d[ne[e]]=!0;for(e=0;e<b.length;e++)\"undefined\"!==typeof d[b[e]]&&(delete d[b[e]],c.push(b[e]));c.sort();b=c;b.length||(b=[\"FirebaseCore-web\"]);c=le();\"Browser\"===c?(d=I(),c=Yd(d)):\"Worker\"===c&&(d=I(),c=Yd(d)+\"-\"+c);return c+\"/JsCore/\"+a+\"/\"+b.join(\",\")}function I(){return k.navigator&&k.navigator.userAgent||\"\"}\nfunction J(a,b){a=a.split(\".\");b=b||k;for(var c=0;c<a.length&&\"object\"==typeof b&&null!=b;c++)b=b[a[c]];c!=a.length&&(b=void 0);return b}function pe(){try{var a=k.localStorage,b=qe();if(a)return a.setItem(b,\"1\"),a.removeItem(b),Td()?!!k.indexedDB:!0}catch(c){return ke()&&!!k.indexedDB}return!1}function re(){return(se()||\"chrome-extension:\"===ie()||he())&&!me()&&pe()&&!ke()}function se(){return\"http:\"===ie()||\"https:\"===ie()}function ie(){return k.location&&k.location.protocol||null}\nfunction te(a){a=a||I();return $d(a)||Yd(a)==ce?!1:!0}function ue(a){return\"undefined\"===typeof a?null:Nd(a)}function ve(a){var b={},c;for(c in a)a.hasOwnProperty(c)&&null!==a[c]&&void 0!==a[c]&&(b[c]=a[c]);return b}function we(a){if(null!==a)return JSON.parse(a)}function qe(a){return a?a:Math.floor(1E9*Math.random()).toString()}function xe(a){a=a||I();return\"Safari\"==Yd(a)||a.toLowerCase().match(/iphone|ipad|ipod/)?!1:!0}\nfunction ye(){var a=k.___jsl;if(a&&a.H)for(var b in a.H)if(a.H[b].r=a.H[b].r||[],a.H[b].L=a.H[b].L||[],a.H[b].r=a.H[b].L.concat(),a.CP)for(var c=0;c<a.CP.length;c++)a.CP[c]=null}function ze(a,b){if(a>b)throw Error(\"Short delay should be less than long delay!\");this.a=a;this.c=b;a=I();b=le();this.b=$d(a)||\"ReactNative\"===b}\nze.prototype.get=function(){var a=k.navigator;return(a&&\"boolean\"===typeof a.onLine&&(se()||\"chrome-extension:\"===ie()||\"undefined\"!==typeof a.connection)?a.onLine:1)?this.b?this.c:this.a:Math.min(5E3,this.a)};function Ae(){var a=k.document;return a&&\"undefined\"!==typeof a.visibilityState?\"visible\"==a.visibilityState:!0}\nfunction Be(){var a=k.document,b=null;return Ae()||!a?A():(new z(function(c){b=function(){Ae()&&(a.removeEventListener(\"visibilitychange\",b,!1),c())};a.addEventListener(\"visibilitychange\",b,!1)})).m(function(c){a.removeEventListener(\"visibilitychange\",b,!1);throw c;})}function Ce(a){try{var b=new Date(parseInt(a,10));if(!isNaN(b.getTime())&&!/[^0-9]/.test(a))return b.toUTCString()}catch(c){}return null}function De(){return!(!J(\"fireauth.oauthhelper\",k)&&!J(\"fireauth.iframe\",k))};var Ee={};var Fe;try{var Ge={};Object.defineProperty(Ge,\"abcd\",{configurable:!0,enumerable:!0,value:1});Object.defineProperty(Ge,\"abcd\",{configurable:!0,enumerable:!0,value:2});Fe=2==Ge.abcd}catch(a){Fe=!1}function K(a,b,c){Fe?Object.defineProperty(a,b,{configurable:!0,enumerable:!0,value:c}):a[b]=c}function L(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&K(a,c,b[c])}function He(a){var b={};L(b,a);return b}function Ie(a){var b={},c;for(c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b}\nfunction Je(a,b){if(!b||!b.length)return!0;if(!a)return!1;for(var c=0;c<b.length;c++){var d=a[b[c]];if(void 0===d||null===d||\"\"===d)return!1}return!0}function Ke(a){var b=a;if(\"object\"==typeof a&&null!=a){b=\"length\"in a?[]:{};for(var c in a)K(b,c,Ke(a[c]))}return b};function Le(a){var b={},c=a[Me],d=a[Ne];a=a[Oe];if(!a||a!=Pe&&!c)throw Error(\"Invalid provider user info!\");b[Qe]=d||null;b[Re]=c||null;K(this,Se,a);K(this,Te,Ke(b))}var Pe=\"EMAIL_SIGNIN\",Me=\"email\",Ne=\"newEmail\",Oe=\"requestType\",Re=\"email\",Qe=\"fromEmail\",Te=\"data\",Se=\"operation\";function M(a,b){this.code=Ue+a;this.message=b||Ve[a]||\"\"}t(M,Error);M.prototype.C=function(){return{code:this.code,message:this.message}};M.prototype.toJSON=function(){return this.C()};function We(a){var b=a&&a.code;return b?new M(b.substring(Ue.length),a.message):null}\nvar Ue=\"auth/\",Ve={\"argument-error\":\"\",\"app-not-authorized\":\"This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.\",\"app-not-installed\":\"The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.\",\"captcha-check-failed\":\"The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.\",\n\"code-expired\":\"The SMS code has expired. Please re-send the verification code to try again.\",\"cordova-not-ready\":\"Cordova framework is not ready.\",\"cors-unsupported\":\"This browser is not supported.\",\"credential-already-in-use\":\"This credential is already associated with a different user account.\",\"custom-token-mismatch\":\"The custom token corresponds to a different audience.\",\"requires-recent-login\":\"This operation is sensitive and requires recent authentication. Log in again before retrying this request.\",\n\"dynamic-link-not-activated\":\"Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.\",\"email-already-in-use\":\"The email address is already in use by another account.\",\"expired-action-code\":\"The action code has expired. \",\"cancelled-popup-request\":\"This operation has been cancelled due to another conflicting popup being opened.\",\"internal-error\":\"An internal error has occurred.\",\"invalid-app-credential\":\"The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.\",\n\"invalid-app-id\":\"The mobile app identifier is not registed for the current project.\",\"invalid-user-token\":\"This user's credential isn't valid for this project. This can happen if the user's token has been tampered with, or if the user isn't for the project associated with this API key.\",\"invalid-auth-event\":\"An internal error has occurred.\",\"invalid-verification-code\":\"The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure use the verification code provided by the user.\",\n\"invalid-continue-uri\":\"The continue URL provided in the request is invalid.\",\"invalid-cordova-configuration\":\"The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.\",\"invalid-custom-token\":\"The custom token format is incorrect. Please check the documentation.\",\"invalid-email\":\"The email address is badly formatted.\",\"invalid-api-key\":\"Your API key is invalid, please check you have copied it correctly.\",\n\"invalid-cert-hash\":\"The SHA-1 certificate hash provided is invalid.\",\"invalid-credential\":\"The supplied auth credential is malformed or has expired.\",\"invalid-persistence-type\":\"The specified persistence type is invalid. It can only be local, session or none.\",\"invalid-message-payload\":\"The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.\",\"invalid-oauth-provider\":\"EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.\",\n\"invalid-oauth-client-id\":\"The OAuth client ID provided is either invalid or does not match the specified API key.\",\"unauthorized-domain\":\"This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.\",\"invalid-action-code\":\"The action code is invalid. This can happen if the code is malformed, expired, or has already been used.\",\"wrong-password\":\"The password is invalid or the user does not have a password.\",\"invalid-phone-number\":\"The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].\",\n\"invalid-recipient-email\":\"The email corresponding to this action failed to send as the provided recipient email address is invalid.\",\"invalid-sender\":\"The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.\",\"invalid-verification-id\":\"The verification ID used to create the phone auth credential is invalid.\",\"missing-android-pkg-name\":\"An Android Package Name must be provided if the Android App is required to be installed.\",\n\"auth-domain-config-required\":\"Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.\",\"missing-app-credential\":\"The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.\",\"missing-verification-code\":\"The phone auth credential was created with an empty SMS verification code.\",\"missing-continue-uri\":\"A continue URL must be provided in the request.\",\"missing-iframe-start\":\"An internal error has occurred.\",\n\"missing-ios-bundle-id\":\"An iOS Bundle ID must be provided if an App Store ID is provided.\",\"missing-phone-number\":\"To send verification codes, provide a phone number for the recipient.\",\"missing-verification-id\":\"The phone auth credential was created with an empty verification ID.\",\"app-deleted\":\"This instance of FirebaseApp has been deleted.\",\"account-exists-with-different-credential\":\"An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.\",\n\"network-request-failed\":\"A network error (such as timeout, interrupted connection or unreachable host) has occurred.\",\"no-auth-event\":\"An internal error has occurred.\",\"no-such-provider\":\"User was not linked to an account with the given provider.\",\"operation-not-allowed\":\"The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.\",\"operation-not-supported-in-this-environment\":'This operation is not supported in the environment this application is running on. \"location.protocol\" must be http, https or chrome-extension and web storage must be enabled.',\n\"popup-blocked\":\"Unable to establish a connection with the popup. It may have been blocked by the browser.\",\"popup-closed-by-user\":\"The popup has been closed by the user before finalizing the operation.\",\"provider-already-linked\":\"User can only be linked to one identity for the given provider.\",\"quota-exceeded\":\"The project's quota for this operation has been exceeded.\",\"redirect-cancelled-by-user\":\"The redirect operation has been cancelled by the user before finalizing.\",\"redirect-operation-pending\":\"A redirect sign-in operation is already pending.\",\ntimeout:\"The operation has timed out.\",\"user-token-expired\":\"The user's credential is no longer valid. The user must sign in again.\",\"too-many-requests\":\"We have blocked all requests from this device due to unusual activity. Try again later.\",\"unauthorized-continue-uri\":\"The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.\",\"unsupported-persistence-type\":\"The current environment does not support the specified persistence type.\",\"user-cancelled\":\"User did not grant your application the permissions it requested.\",\n\"user-not-found\":\"There is no user record corresponding to this identifier. The user may have been deleted.\",\"user-disabled\":\"The user account has been disabled by an administrator.\",\"user-mismatch\":\"The supplied credentials do not correspond to the previously signed in user.\",\"user-signed-out\":\"\",\"weak-password\":\"The password must be 6 characters long or more.\",\"web-storage-unsupported\":\"This browser is not supported or 3rd party cookies and data may be disabled.\"};function Xe(a){var b=a[Ye];if(\"undefined\"===typeof b)throw new M(\"missing-continue-uri\");if(\"string\"!==typeof b||\"string\"===typeof b&&!b.length)throw new M(\"invalid-continue-uri\");this.h=b;this.b=this.a=null;this.g=!1;var c=a[Ze];if(c&&\"object\"===typeof c){b=c[$e];var d=c[af];c=c[bf];if(\"string\"===typeof b&&b.length){this.a=b;if(\"undefined\"!==typeof d&&\"boolean\"!==typeof d)throw new M(\"argument-error\",af+\" property must be a boolean when specified.\");this.g=!!d;if(\"undefined\"!==typeof c&&(\"string\"!==\ntypeof c||\"string\"===typeof c&&!c.length))throw new M(\"argument-error\",bf+\" property must be a non empty string when specified.\");this.b=c||null}else{if(\"undefined\"!==typeof b)throw new M(\"argument-error\",$e+\" property must be a non empty string when specified.\");if(\"undefined\"!==typeof d||\"undefined\"!==typeof c)throw new M(\"missing-android-pkg-name\");}}else if(\"undefined\"!==typeof c)throw new M(\"argument-error\",Ze+\" property must be a non null object when specified.\");this.f=null;if((b=a[cf])&&\"object\"===\ntypeof b)if(b=b[df],\"string\"===typeof b&&b.length)this.f=b;else{if(\"undefined\"!==typeof b)throw new M(\"argument-error\",df+\" property must be a non empty string when specified.\");}else if(\"undefined\"!==typeof b)throw new M(\"argument-error\",cf+\" property must be a non null object when specified.\");a=a[ef];if(\"undefined\"!==typeof a&&\"boolean\"!==typeof a)throw new M(\"argument-error\",ef+\" property must be a boolean when specified.\");this.c=!!a}\nvar Ze=\"android\",ef=\"handleCodeInApp\",cf=\"iOS\",Ye=\"url\",af=\"installApp\",bf=\"minimumVersion\",$e=\"packageName\",df=\"bundleId\";function ff(a){var b={};b.continueUrl=a.h;b.canHandleCodeInApp=a.c;if(b.androidPackageName=a.a)b.androidMinimumVersion=a.b,b.androidInstallApp=a.g;b.iOSBundleId=a.f;for(var c in b)null===b[c]&&delete b[c];return b};function gf(a){return Ba(a,function(a){a=a.toString(16);return 1<a.length?a:\"0\"+a}).join(\"\")};var hf=null,jf=null;function kf(a){var b=\"\";lf(a,function(a){b+=String.fromCharCode(a)});return b}function lf(a,b){function c(b){for(;d<a.length;){var c=a.charAt(d++),e=jf[c];if(null!=e)return e;if(!/^[\\s\\xa0]*$/.test(c))throw Error(\"Unknown base64 encoding at char: \"+c);}return b}mf();for(var d=0;;){var e=c(-1),f=c(0),h=c(64),m=c(64);if(64===m&&-1===e)break;b(e<<2|f>>4);64!=h&&(b(f<<4&240|h>>2),64!=m&&b(h<<6&192|m))}}\nfunction mf(){if(!hf){hf={};jf={};for(var a=0;65>a;a++)hf[a]=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".charAt(a),jf[hf[a]]=a,62<=a&&(jf[\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\".charAt(a)]=a)}};function nf(a){this.c=a.sub;na();this.a=a.provider_id||a.firebase&&a.firebase.sign_in_provider||null;this.b=!!a.is_anonymous||\"anonymous\"==this.a}nf.prototype.f=function(){return this.b};function of(a){return(a=pf(a))&&a.sub&&a.iss&&a.aud&&a.exp?new nf(a):null}function pf(a){if(!a)return null;a=a.split(\".\");if(3!=a.length)return null;a=a[1];for(var b=(4-a.length%4)%4,c=0;c<b;c++)a+=\".\";try{return JSON.parse(kf(a))}catch(d){}return null};var qf=\"oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version\".split(\" \"),rf=[\"client_id\",\"response_type\",\"scope\",\"redirect_uri\",\"state\"],sf={Rc:{Ma:\"locale\",Aa:500,za:600,Na:\"facebook.com\",cb:rf},Tc:{Ma:null,Aa:500,za:620,Na:\"github.com\",cb:rf},Uc:{Ma:\"hl\",Aa:515,za:680,Na:\"google.com\",cb:rf},$c:{Ma:\"lang\",Aa:485,za:705,Na:\"twitter.com\",cb:qf}};function tf(a){for(var b in sf)if(sf[b].Na==a)return sf[b];return null};function uf(a){var b={};b[\"facebook.com\"]=vf;b[\"google.com\"]=wf;b[\"github.com\"]=xf;b[\"twitter.com\"]=yf;var c=a&&a[zf];try{if(c)return b[c]?new b[c](a):new Af(a);if(\"undefined\"!==typeof a[Bf])return new Cf(a)}catch(d){}return null}var Bf=\"idToken\",zf=\"providerId\";\nfunction Cf(a){var b=a[zf];if(!b&&a[Bf]){var c=of(a[Bf]);c&&c.a&&(b=c.a)}if(!b)throw Error(\"Invalid additional user info!\");if(\"anonymous\"==b||\"custom\"==b)b=null;c=!1;\"undefined\"!==typeof a.isNewUser?c=!!a.isNewUser:\"identitytoolkit#SignupNewUserResponse\"===a.kind&&(c=!0);K(this,\"providerId\",b);K(this,\"isNewUser\",c)}function Af(a){Cf.call(this,a);a=we(a.rawUserInfo||\"{}\");K(this,\"profile\",Ke(a||{}))}t(Af,Cf);\nfunction vf(a){Af.call(this,a);if(\"facebook.com\"!=this.providerId)throw Error(\"Invalid provider ID!\");}t(vf,Af);function xf(a){Af.call(this,a);if(\"github.com\"!=this.providerId)throw Error(\"Invalid provider ID!\");K(this,\"username\",this.profile&&this.profile.login||null)}t(xf,Af);function wf(a){Af.call(this,a);if(\"google.com\"!=this.providerId)throw Error(\"Invalid provider ID!\");}t(wf,Af);\nfunction yf(a){Af.call(this,a);if(\"twitter.com\"!=this.providerId)throw Error(\"Invalid provider ID!\");K(this,\"username\",a.screenName||null)}t(yf,Af);function Df(a){this.a=cd(a)};function Ef(a){var b=cd(a),c=bd(b,\"link\"),d=bd(cd(c),\"link\");b=bd(b,\"deep_link_id\");return bd(cd(b),\"link\")||b||d||c||a};function Ff(a,b){return a.then(function(a){if(a[Gf]){var c=of(a[Gf]);if(!c||b!=c.c)throw new M(\"user-mismatch\");return a}throw new M(\"user-mismatch\");}).m(function(a){throw a&&a.code&&a.code==Ue+\"user-not-found\"?new M(\"user-mismatch\"):a;})}\nfunction Hf(a,b,c){if(b.idToken||b.accessToken)b.idToken&&K(this,\"idToken\",b.idToken),b.accessToken&&K(this,\"accessToken\",b.accessToken);else if(b.oauthToken&&b.oauthTokenSecret)K(this,\"accessToken\",b.oauthToken),K(this,\"secret\",b.oauthTokenSecret);else throw new M(\"internal-error\",\"failed to construct a credential\");K(this,\"providerId\",a);K(this,\"signInMethod\",c)}Hf.prototype.xa=function(a){return If(a,Jf(this))};Hf.prototype.c=function(a,b){var c=Jf(this);c.idToken=b;return Kf(a,c)};\nHf.prototype.f=function(a,b){var c=Jf(this);return Ff(Lf(a,c),b)};function Jf(a){var b={};a.idToken&&(b.id_token=a.idToken);a.accessToken&&(b.access_token=a.accessToken);a.secret&&(b.oauth_token_secret=a.secret);b.providerId=a.providerId;return{postBody:gd(b).toString(),requestUri:\"http://localhost\"}}\nHf.prototype.C=function(){var a={providerId:this.providerId,signInMethod:this.signInMethod};this.idToken&&(a.oauthIdToken=this.idToken);this.accessToken&&(a.oauthAccessToken=this.accessToken);this.secret&&(a.oauthTokenSecret=this.secret);return a};function Mf(a,b){this.Ac=b||[];L(this,{providerId:a,isOAuthProvider:!0});this.tb={};this.Za=(tf(a)||{}).Ma||null;this.Xa=null}Mf.prototype.Ca=function(a){this.tb=Za(a);return this};function N(a){Mf.call(this,a,rf);this.a=[]}t(N,Mf);\nN.prototype.ta=function(a){Fa(this.a,a)||this.a.push(a);return this};N.prototype.yb=function(){return Ia(this.a)};N.prototype.credential=function(a,b){if(!a&&!b)throw new M(\"argument-error\",\"credential failed: must provide the ID token and/or the access token.\");return new Hf(this.providerId,{idToken:a||null,accessToken:b||null},this.providerId)};function Nf(){N.call(this,\"facebook.com\")}t(Nf,N);K(Nf,\"PROVIDER_ID\",\"facebook.com\");K(Nf,\"FACEBOOK_SIGN_IN_METHOD\",\"facebook.com\");\nfunction Of(a){if(!a)throw new M(\"argument-error\",\"credential failed: expected 1 argument (the OAuth access token).\");var b=a;q(a)&&(b=a.accessToken);return(new Nf).credential(null,b)}function Pf(){N.call(this,\"github.com\")}t(Pf,N);K(Pf,\"PROVIDER_ID\",\"github.com\");K(Pf,\"GITHUB_SIGN_IN_METHOD\",\"github.com\");function Qf(a){if(!a)throw new M(\"argument-error\",\"credential failed: expected 1 argument (the OAuth access token).\");var b=a;q(a)&&(b=a.accessToken);return(new Pf).credential(null,b)}\nfunction Rf(){N.call(this,\"google.com\");this.ta(\"profile\")}t(Rf,N);K(Rf,\"PROVIDER_ID\",\"google.com\");K(Rf,\"GOOGLE_SIGN_IN_METHOD\",\"google.com\");function Sf(a,b){var c=a;q(a)&&(c=a.idToken,b=a.accessToken);return(new Rf).credential(c,b)}function Tf(){Mf.call(this,\"twitter.com\",qf)}t(Tf,Mf);K(Tf,\"PROVIDER_ID\",\"twitter.com\");K(Tf,\"TWITTER_SIGN_IN_METHOD\",\"twitter.com\");\nfunction Uf(a,b){var c=a;q(c)||(c={oauthToken:a,oauthTokenSecret:b});if(!c.oauthToken||!c.oauthTokenSecret)throw new M(\"argument-error\",\"credential failed: expected 2 arguments (the OAuth access token and secret).\");return new Hf(\"twitter.com\",c,\"twitter.com\")}function Vf(a,b,c){this.a=a;this.b=b;K(this,\"providerId\",\"password\");K(this,\"signInMethod\",c===O.EMAIL_LINK_SIGN_IN_METHOD?O.EMAIL_LINK_SIGN_IN_METHOD:O.EMAIL_PASSWORD_SIGN_IN_METHOD)}\nVf.prototype.xa=function(a){return this.signInMethod==O.EMAIL_LINK_SIGN_IN_METHOD?P(a,Wf,{email:this.a,oobCode:this.b}):P(a,Xf,{email:this.a,password:this.b})};Vf.prototype.c=function(a,b){return this.signInMethod==O.EMAIL_LINK_SIGN_IN_METHOD?P(a,Yf,{idToken:b,email:this.a,oobCode:this.b}):P(a,Zf,{idToken:b,email:this.a,password:this.b})};Vf.prototype.f=function(a,b){return Ff(this.xa(a),b)};Vf.prototype.C=function(){return{email:this.a,password:this.b,signInMethod:this.signInMethod}};\nfunction O(){L(this,{providerId:\"password\",isOAuthProvider:!1})}function $f(a,b){b=ag(b);if(!b)throw new M(\"argument-error\",\"Invalid email link!\");return new Vf(a,b,O.EMAIL_LINK_SIGN_IN_METHOD)}function ag(a){a=Ef(a);a=new Df(a);var b=bd(a.a,\"oobCode\")||null;return\"signIn\"===(bd(a.a,\"mode\")||null)&&b?b:null}L(O,{PROVIDER_ID:\"password\"});L(O,{EMAIL_LINK_SIGN_IN_METHOD:\"emailLink\"});L(O,{EMAIL_PASSWORD_SIGN_IN_METHOD:\"password\"});\nfunction bg(a){if(!(a.Ra&&a.Qa||a.Ea&&a.Z))throw new M(\"internal-error\");this.a=a;K(this,\"providerId\",\"phone\");K(this,\"signInMethod\",\"phone\")}bg.prototype.xa=function(a){return a.Sa(cg(this))};bg.prototype.c=function(a,b){var c=cg(this);c.idToken=b;return P(a,dg,c)};bg.prototype.f=function(a,b){var c=cg(this);c.operation=\"REAUTH\";a=P(a,eg,c);return Ff(a,b)};\nbg.prototype.C=function(){var a={providerId:\"phone\"};this.a.Ra&&(a.verificationId=this.a.Ra);this.a.Qa&&(a.verificationCode=this.a.Qa);this.a.Ea&&(a.temporaryProof=this.a.Ea);this.a.Z&&(a.phoneNumber=this.a.Z);return a};function cg(a){return a.a.Ea&&a.a.Z?{temporaryProof:a.a.Ea,phoneNumber:a.a.Z}:{sessionInfo:a.a.Ra,code:a.a.Qa}}\nfunction fg(a){try{this.a=a||firebase.auth()}catch(b){throw new M(\"argument-error\",\"Either an instance of firebase.auth.Auth must be passed as an argument to the firebase.auth.PhoneAuthProvider constructor, or the default firebase App instance must be initialized via firebase.initializeApp().\");}L(this,{providerId:\"phone\",isOAuthProvider:!1})}\nfg.prototype.Sa=function(a,b){var c=this.a.b;return A(b.verify()).then(function(d){if(!l(d))throw new M(\"argument-error\",\"An implementation of firebase.auth.ApplicationVerifier.prototype.verify() must return a firebase.Promise that resolves with a string.\");switch(b.type){case \"recaptcha\":return gg(c,{phoneNumber:a,recaptchaToken:d}).then(function(a){\"function\"===typeof b.reset&&b.reset();return a},function(a){\"function\"===typeof b.reset&&b.reset();throw a;});default:throw new M(\"argument-error\",\n'Only firebase.auth.ApplicationVerifiers with type=\"recaptcha\" are currently supported.');}})};function hg(a,b){if(!a)throw new M(\"missing-verification-id\");if(!b)throw new M(\"missing-verification-code\");return new bg({Ra:a,Qa:b})}L(fg,{PROVIDER_ID:\"phone\"});L(fg,{PHONE_SIGN_IN_METHOD:\"phone\"});\nfunction ig(a){if(a.temporaryProof&&a.phoneNumber)return new bg({Ea:a.temporaryProof,Z:a.phoneNumber});var b=a&&a.providerId;if(!b||\"password\"===b)return null;var c=a&&a.oauthAccessToken,d=a&&a.oauthTokenSecret;a=a&&a.oauthIdToken;try{switch(b){case \"google.com\":return Sf(a,c);case \"facebook.com\":return Of(c);case \"github.com\":return Qf(c);case \"twitter.com\":return Uf(c,d);default:return(new N(b)).credential(a,c)}}catch(e){return null}}\nfunction jg(a){if(!a.isOAuthProvider)throw new M(\"invalid-oauth-provider\");};function kg(a,b,c,d,e){this.b=a;this.c=b||null;this.f=c||null;this.g=d||null;this.a=e||null;if(this.f||this.a){if(this.f&&this.a)throw new M(\"invalid-auth-event\");if(this.f&&!this.g)throw new M(\"invalid-auth-event\");}else throw new M(\"invalid-auth-event\");}kg.prototype.C=function(){return{type:this.b,eventId:this.c,urlResponse:this.f,sessionId:this.g,error:this.a&&this.a.C()}};function lg(a){a=a||{};return a.type?new kg(a.type,a.eventId,a.urlResponse,a.sessionId,a.error&&We(a.error)):null};function mg(){this.b=null;this.a=[]}var ng=null;mg.prototype.subscribe=function(a){var b=this;this.a.push(a);this.b||(this.b=function(a){for(var c=0;c<b.a.length;c++)b.a[c](a)},a=J(\"universalLinks.subscribe\",k),\"function\"===typeof a&&a(null,this.b))};mg.prototype.unsubscribe=function(a){w(this.a,function(b){return b==a})};function og(a){var b=\"unauthorized-domain\",c=void 0,d=cd(a);a=d.b;d=d.c;\"chrome-extension\"==d?c=Ja(\"This chrome extension ID (chrome-extension://%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.\",a):\"http\"==d||\"https\"==d?c=Ja(\"This domain (%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.\",a):b=\"operation-not-supported-in-this-environment\";\nM.call(this,b,c)}t(og,M);function pg(a,b,c){M.call(this,a,c);a=b||{};a.ub&&K(this,\"email\",a.ub);a.Z&&K(this,\"phoneNumber\",a.Z);a.credential&&K(this,\"credential\",a.credential)}t(pg,M);pg.prototype.C=function(){var a={code:this.code,message:this.message};this.email&&(a.email=this.email);this.phoneNumber&&(a.phoneNumber=this.phoneNumber);var b=this.credential&&this.credential.C();b&&ab(a,b);return a};pg.prototype.toJSON=function(){return this.C()};\nfunction qg(a){if(a.code){var b=a.code||\"\";0==b.indexOf(Ue)&&(b=b.substring(Ue.length));var c={credential:ig(a)};if(a.email)c.ub=a.email;else if(a.phoneNumber)c.Z=a.phoneNumber;else return new M(b,a.message||void 0);return new pg(b,c,a.message)}return null};var rg=/^[+a-zA-Z0-9_.!#$%&'*\\/=?^`{|}~-]+@([a-zA-Z0-9-]+\\.)+[a-zA-Z0-9]{2,63}$/;function sg(){}sg.prototype.c=null;function tg(a){return a.c||(a.c=a.b())};var ug;function vg(){}t(vg,sg);vg.prototype.a=function(){var a=wg(this);return a?new ActiveXObject(a):new XMLHttpRequest};vg.prototype.b=function(){var a={};wg(this)&&(a[0]=!0,a[1]=!0);return a};\nfunction wg(a){if(!a.f&&\"undefined\"==typeof XMLHttpRequest&&\"undefined\"!=typeof ActiveXObject){for(var b=[\"MSXML2.XMLHTTP.6.0\",\"MSXML2.XMLHTTP.3.0\",\"MSXML2.XMLHTTP\",\"Microsoft.XMLHTTP\"],c=0;c<b.length;c++){var d=b[c];try{return new ActiveXObject(d),a.f=d}catch(e){}}throw Error(\"Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed\");}return a.f}ug=new vg;function xg(){}t(xg,sg);xg.prototype.a=function(){var a=new XMLHttpRequest;if(\"withCredentials\"in a)return a;if(\"undefined\"!=typeof XDomainRequest)return new yg;throw Error(\"Unsupported browser\");};xg.prototype.b=function(){return{}};\nfunction yg(){this.a=new XDomainRequest;this.readyState=0;this.onreadystatechange=null;this.responseText=\"\";this.status=-1;this.statusText=\"\";this.a.onload=r(this.bc,this);this.a.onerror=r(this.zb,this);this.a.onprogress=r(this.cc,this);this.a.ontimeout=r(this.fc,this)}g=yg.prototype;g.open=function(a,b,c){if(null!=c&&!c)throw Error(\"Only async requests are supported.\");this.a.open(a,b)};\ng.send=function(a){if(a)if(\"string\"==typeof a)this.a.send(a);else throw Error(\"Only string data is supported\");else this.a.send()};g.abort=function(){this.a.abort()};g.setRequestHeader=function(){};g.getResponseHeader=function(a){return\"content-type\"==a.toLowerCase()?this.a.contentType:\"\"};g.bc=function(){this.status=200;this.responseText=this.a.responseText;zg(this,4)};g.zb=function(){this.status=500;this.responseText=\"\";zg(this,4)};g.fc=function(){this.zb()};\ng.cc=function(){this.status=200;zg(this,1)};function zg(a,b){a.readyState=b;if(a.onreadystatechange)a.onreadystatechange()}g.getAllResponseHeaders=function(){return\"content-type: \"+this.a.contentType};function Ag(a,b,c){this.reset(a,b,c,void 0,void 0)}Ag.prototype.a=null;var Bg=0;Ag.prototype.reset=function(a,b,c,d,e){\"number\"==typeof e||Bg++;d||na();delete this.a};function Cg(a){this.f=a;this.b=this.c=this.a=null}function Dg(a,b){this.name=a;this.value=b}Dg.prototype.toString=function(){return this.name};var Eg=new Dg(\"SEVERE\",1E3),Fg=new Dg(\"WARNING\",900),Gg=new Dg(\"CONFIG\",700),Hg=new Dg(\"FINE\",500);function Ig(a){if(a.c)return a.c;if(a.a)return Ig(a.a);ra(\"Root logger has no level set.\");return null}Cg.prototype.log=function(a,b,c){if(a.value>=Ig(this).value)for(n(b)&&(b=b()),a=new Ag(a,String(b),this.f),c&&(a.a=c),c=this;c;)c=c.a};var Jg={},Kg=null;\nfunction Lg(a){Kg||(Kg=new Cg(\"\"),Jg[\"\"]=Kg,Kg.c=Gg);var b;if(!(b=Jg[a])){b=new Cg(a);var c=a.lastIndexOf(\".\"),d=a.substr(c+1);c=Lg(a.substr(0,c));c.b||(c.b={});c.b[d]=b;b.a=c;Jg[a]=b}return b};function Q(a,b){a&&a.log(Hg,b,void 0)};function Mg(a){this.f=a}t(Mg,sg);Mg.prototype.a=function(){return new Ng(this.f)};Mg.prototype.b=function(a){return function(){return a}}({});function Ng(a){G.call(this);this.j=a;this.readyState=Og;this.status=0;this.responseText=this.statusText=\"\";this.onreadystatechange=null;this.g=new Headers;this.b=null;this.h=\"GET\";this.c=\"\";this.a=!1;this.f=Lg(\"goog.net.FetchXmlHttp\")}t(Ng,G);var Og=0;g=Ng.prototype;\ng.open=function(a,b){if(this.readyState!=Og)throw this.abort(),Error(\"Error reopening a connection\");this.h=a;this.c=b;this.readyState=1;Pg(this)};g.send=function(a){if(1!=this.readyState)throw this.abort(),Error(\"need to call open() first. \");this.a=!0;var b={headers:this.g,method:this.h,credentials:void 0,cache:void 0};a&&(b.body=a);this.j.fetch(new Request(this.c,b)).then(this.ec.bind(this),this.Ab.bind(this))};\ng.abort=function(){this.responseText=\"\";this.g=new Headers;this.status=0;1<=this.readyState&&this.a&&4!=this.readyState&&(this.readyState=4,this.a=!1,Pg(this));this.readyState=Og};g.ec=function(a){this.a&&(this.b||(this.b=a.headers,this.readyState=2,Pg(this)),this.a&&(this.readyState=3,Pg(this),this.a&&a.text().then(this.dc.bind(this,a),this.Ab.bind(this))))};g.dc=function(a,b){this.a&&(this.status=a.status,this.statusText=a.statusText,this.responseText=b,this.readyState=4,Pg(this))};\ng.Ab=function(a){var b=this.f;b&&b.log(Fg,\"Failed to fetch url \"+this.c,a instanceof Error?a:Error(a));this.a&&(this.readyState=4,Pg(this))};g.setRequestHeader=function(a,b){this.g.append(a,b)};g.getResponseHeader=function(a){return this.b?this.b.get(a.toLowerCase())||\"\":((a=this.f)&&a.log(Fg,\"Attempting to get response header but no headers have been received for url: \"+this.c,void 0),\"\")};\ng.getAllResponseHeaders=function(){if(!this.b){var a=this.f;a&&a.log(Fg,\"Attempting to get all response headers but no headers have been received for url: \"+this.c,void 0);return\"\"}a=[];for(var b=this.b.entries(),c=b.next();!c.done;)c=c.value,a.push(c[0]+\": \"+c[1]),c=b.next();return a.join(\"\\r\\n\")};function Pg(a){a.onreadystatechange&&a.onreadystatechange.call(a)};function Qg(a){G.call(this);this.headers=new Kc;this.D=a||null;this.c=!1;this.B=this.a=null;this.h=this.N=this.l=\"\";this.f=this.I=this.j=this.G=!1;this.g=0;this.s=null;this.o=Rg;this.v=this.O=!1}t(Qg,G);var Rg=\"\";Qg.prototype.b=Lg(\"goog.net.XhrIo\");var Sg=/^https?$/i,Tg=[\"POST\",\"PUT\"];\nfunction Ug(a,b,c,d,e){if(a.a)throw Error(\"[goog.net.XhrIo] Object is active with another request=\"+a.l+\"; newUri=\"+b);c=c?c.toUpperCase():\"GET\";a.l=b;a.h=\"\";a.N=c;a.G=!1;a.c=!0;a.a=a.D?a.D.a():ug.a();a.B=a.D?tg(a.D):tg(ug);a.a.onreadystatechange=r(a.Db,a);try{Q(a.b,Vg(a,\"Opening Xhr\")),a.I=!0,a.a.open(c,String(b),!0),a.I=!1}catch(h){Q(a.b,Vg(a,\"Error opening Xhr: \"+h.message));Wg(a,h);return}b=d||\"\";var f=new Kc(a.headers);e&&Ic(e,function(a,b){f.set(b,a)});e=Da(f.U());d=k.FormData&&b instanceof\nk.FormData;!Fa(Tg,c)||e||d||f.set(\"Content-Type\",\"application/x-www-form-urlencoded;charset=utf-8\");f.forEach(function(a,b){this.a.setRequestHeader(b,a)},a);a.o&&(a.a.responseType=a.o);\"withCredentials\"in a.a&&a.a.withCredentials!==a.O&&(a.a.withCredentials=a.O);try{Xg(a),0<a.g&&(a.v=Yg(a.a),Q(a.b,Vg(a,\"Will abort after \"+a.g+\"ms if incomplete, xhr2 \"+a.v)),a.v?(a.a.timeout=a.g,a.a.ontimeout=r(a.Fa,a)):a.s=Ec(a.Fa,a.g,a)),Q(a.b,Vg(a,\"Sending request\")),a.j=!0,a.a.send(b),a.j=!1}catch(h){Q(a.b,Vg(a,\n\"Send error: \"+h.message)),Wg(a,h)}}function Yg(a){return C&&Wb(9)&&\"number\"==typeof a.timeout&&void 0!==a.ontimeout}function Ea(a){return\"content-type\"==a.toLowerCase()}g=Qg.prototype;g.Fa=function(){\"undefined\"!=typeof aa&&this.a&&(this.h=\"Timed out after \"+this.g+\"ms, aborting\",Q(this.b,Vg(this,this.h)),this.dispatchEvent(\"timeout\"),this.abort(8))};function Wg(a,b){a.c=!1;a.a&&(a.f=!0,a.a.abort(),a.f=!1);a.h=b;Zg(a);$g(a)}\nfunction Zg(a){a.G||(a.G=!0,a.dispatchEvent(\"complete\"),a.dispatchEvent(\"error\"))}g.abort=function(){this.a&&this.c&&(Q(this.b,Vg(this,\"Aborting\")),this.c=!1,this.f=!0,this.a.abort(),this.f=!1,this.dispatchEvent(\"complete\"),this.dispatchEvent(\"abort\"),$g(this))};g.ua=function(){this.a&&(this.c&&(this.c=!1,this.f=!0,this.a.abort(),this.f=!1),$g(this,!0));Qg.lb.ua.call(this)};g.Db=function(){this.pa||(this.I||this.j||this.f?ah(this):this.tc())};g.tc=function(){ah(this)};\nfunction ah(a){if(a.c&&\"undefined\"!=typeof aa)if(a.B[1]&&4==bh(a)&&2==ch(a))Q(a.b,Vg(a,\"Local request error detected and ignored\"));else if(a.j&&4==bh(a))Ec(a.Db,0,a);else if(a.dispatchEvent(\"readystatechange\"),4==bh(a)){Q(a.b,Vg(a,\"Request complete\"));a.c=!1;try{var b=ch(a);a:switch(b){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var c=!0;break a;default:c=!1}var d;if(!(d=c)){var e;if(e=0===b){var f=String(a.l).match(Nc)[1]||null;if(!f&&k.self&&k.self.location){var h=k.self.location.protocol;\nf=h.substr(0,h.length-1)}e=!Sg.test(f?f.toLowerCase():\"\")}d=e}if(d)a.dispatchEvent(\"complete\"),a.dispatchEvent(\"success\");else{try{var m=2<bh(a)?a.a.statusText:\"\"}catch(p){Q(a.b,\"Can not get status: \"+p.message),m=\"\"}a.h=m+\" [\"+ch(a)+\"]\";Zg(a)}}finally{$g(a)}}}function $g(a,b){if(a.a){Xg(a);var c=a.a,d=a.B[0]?ca:null;a.a=null;a.B=null;b||a.dispatchEvent(\"ready\");try{c.onreadystatechange=d}catch(e){(a=a.b)&&a.log(Eg,\"Problem encountered resetting onreadystatechange: \"+e.message,void 0)}}}\nfunction Xg(a){a.a&&a.v&&(a.a.ontimeout=null);a.s&&(k.clearTimeout(a.s),a.s=null)}function bh(a){return a.a?a.a.readyState:0}function ch(a){try{return 2<bh(a)?a.a.status:-1}catch(b){return-1}}function dh(a){try{return a.a?a.a.responseText:\"\"}catch(b){return Q(a.b,\"Can not get responseText: \"+b.message),\"\"}}\ng.getResponse=function(){try{if(!this.a)return null;if(\"response\"in this.a)return this.a.response;switch(this.o){case Rg:case \"text\":return this.a.responseText;case \"arraybuffer\":if(\"mozResponseArrayBuffer\"in this.a)return this.a.mozResponseArrayBuffer}var a=this.b;a&&a.log(Eg,\"Response type \"+this.o+\" is not supported on this browser\",void 0);return null}catch(b){return Q(this.b,\"Can not get response: \"+b.message),null}};function Vg(a,b){return b+\" [\"+a.N+\" \"+a.l+\" \"+ch(a)+\"]\"};/*\n Portions of this code are from MochiKit, received by\n The Closure Authors under the MIT license. All other code is Copyright\n 2005-2009 The Closure Authors. All Rights Reserved.\n*/\nfunction eh(a,b){this.g=[];this.v=a;this.s=b||null;this.f=this.a=!1;this.c=void 0;this.u=this.B=this.j=!1;this.h=0;this.b=null;this.l=0}eh.prototype.cancel=function(a){if(this.a)this.c instanceof eh&&this.c.cancel();else{if(this.b){var b=this.b;delete this.b;a?b.cancel(a):(b.l--,0>=b.l&&b.cancel())}this.v?this.v.call(this.s,this):this.u=!0;this.a||(a=new fh(this),gh(this),hh(this,!1,a))}};eh.prototype.o=function(a,b){this.j=!1;hh(this,a,b)};function hh(a,b,c){a.a=!0;a.c=c;a.f=!b;ih(a)}\nfunction gh(a){if(a.a){if(!a.u)throw new jh(a);a.u=!1}}eh.prototype.D=function(){gh(this);hh(this,!0,null)};function kh(a,b){lh(a,null,b,void 0)}function lh(a,b,c,d){a.g.push([b,c,d]);a.a&&ih(a)}eh.prototype.then=function(a,b,c){var d,e,f=new z(function(a,b){d=a;e=b});lh(this,d,function(a){a instanceof fh?f.cancel():e(a)});return f.then(a,b,c)};oa(eh);function mh(a){return Ca(a.g,function(a){return n(a[1])})}\nfunction ih(a){if(a.h&&a.a&&mh(a)){var b=a.h,c=nh[b];c&&(k.clearTimeout(c.a),delete nh[b]);a.h=0}a.b&&(a.b.l--,delete a.b);b=a.c;for(var d=c=!1;a.g.length&&!a.j;){var e=a.g.shift(),f=e[0],h=e[1];e=e[2];if(f=a.f?h:f)try{var m=f.call(e||a.s,b);void 0!==m&&(a.f=a.f&&(m==b||m instanceof Error),a.c=b=m);if(pa(b)||\"function\"===typeof k.Promise&&b instanceof k.Promise)d=!0,a.j=!0}catch(p){b=p,a.f=!0,mh(a)||(c=!0)}}a.c=b;d&&(m=r(a.o,a,!0),d=r(a.o,a,!1),b instanceof eh?(lh(b,m,d),b.B=!0):b.then(m,d));c&&(b=\nnew oh(b),nh[b.a]=b,a.h=b.a)}function jh(){u.call(this)}t(jh,u);jh.prototype.message=\"Deferred has already fired\";jh.prototype.name=\"AlreadyCalledError\";function fh(){u.call(this)}t(fh,u);fh.prototype.message=\"Deferred was canceled\";fh.prototype.name=\"CanceledError\";function oh(a){this.a=k.setTimeout(r(this.c,this),0);this.b=a}oh.prototype.c=function(){delete nh[this.a];throw this.b;};var nh={};function ph(a){var b={},c=b.document||document,d=sd(a),e=document.createElement(\"SCRIPT\"),f={Fb:e,Fa:void 0},h=new eh(qh,f),m=null,p=null!=b.timeout?b.timeout:5E3;0<p&&(m=window.setTimeout(function(){rh(e,!0);var a=new sh(th,\"Timeout reached for loading script \"+d);gh(h);hh(h,!1,a)},p),f.Fa=m);e.onload=e.onreadystatechange=function(){e.readyState&&\"loaded\"!=e.readyState&&\"complete\"!=e.readyState||(rh(e,b.bd||!1,m),h.D())};e.onerror=function(){rh(e,!0,m);var a=new sh(uh,\"Error while loading script \"+\nd);gh(h);hh(h,!1,a)};f=b.attributes||{};ab(f,{type:\"text/javascript\",charset:\"UTF-8\"});Id(e,f);e.src=sd(a);vh(c).appendChild(e);return h}function vh(a){var b;return(b=(a||document).getElementsByTagName(\"HEAD\"))&&0!=b.length?b[0]:a.documentElement}function qh(){if(this&&this.Fb){var a=this.Fb;a&&\"SCRIPT\"==a.tagName&&rh(a,!0,this.Fa)}}\nfunction rh(a,b,c){null!=c&&k.clearTimeout(c);a.onload=ca;a.onerror=ca;a.onreadystatechange=ca;b&&window.setTimeout(function(){a&&a.parentNode&&a.parentNode.removeChild(a)},0)}var uh=0,th=1;function sh(a,b){var c=\"Jsloader error (code #\"+a+\")\";b&&(c+=\": \"+b);u.call(this,c);this.code=a}t(sh,u);function wh(a){this.f=a}t(wh,sg);wh.prototype.a=function(){return new this.f};wh.prototype.b=function(){return{}};\nfunction xh(a,b,c){this.b=a;a=b||{};this.j=a.secureTokenEndpoint||\"https://securetoken.googleapis.com/v1/token\";this.l=a.secureTokenTimeout||yh;this.f=Za(a.secureTokenHeaders||zh);this.g=a.firebaseEndpoint||\"https://www.googleapis.com/identitytoolkit/v3/relyingparty/\";this.h=a.firebaseTimeout||Ah;this.a=Za(a.firebaseHeaders||Bh);c&&(this.a[\"X-Client-Version\"]=c,this.f[\"X-Client-Version\"]=c);c=\"Node\"==le();c=k.XMLHttpRequest||c&&firebase.INTERNAL.node&&firebase.INTERNAL.node.XMLHttpRequest;if(!c&&\n!ke())throw new M(\"internal-error\",\"The XMLHttpRequest compatibility library was not found.\");this.c=void 0;ke()?this.c=new Mg(self):me()?this.c=new wh(c):this.c=new xg}var Ch,Gf=\"idToken\",yh=new ze(3E4,6E4),zh={\"Content-Type\":\"application/x-www-form-urlencoded\"},Ah=new ze(3E4,6E4),Bh={\"Content-Type\":\"application/json\"};function Dh(a,b){b?a.a[\"X-Firebase-Locale\"]=b:delete a.a[\"X-Firebase-Locale\"]}\nfunction Eh(a,b){b?(a.a[\"X-Client-Version\"]=b,a.f[\"X-Client-Version\"]=b):(delete a.a[\"X-Client-Version\"],delete a.f[\"X-Client-Version\"])}function Fh(a,b,c,d,e,f,h){Xd()||ke()?a=r(a.o,a):(Ch||(Ch=new z(function(a,b){Gh(a,b)})),a=r(a.u,a));a(b,c,d,e,f,h)}\nxh.prototype.o=function(a,b,c,d,e,f){if(ke()&&(\"undefined\"===typeof k.fetch||\"undefined\"===typeof k.Headers||\"undefined\"===typeof k.Request))throw new M(\"operation-not-supported-in-this-environment\",\"fetch, Headers and Request native APIs or equivalent Polyfills must be available to support HTTP requests from a Worker environment.\");var h=new Qg(this.c);if(f){h.g=Math.max(0,f);var m=setTimeout(function(){h.dispatchEvent(\"timeout\")},f)}sc(h,\"complete\",function(){m&&clearTimeout(m);var a=null;try{a=\nJSON.parse(dh(this))||null}catch(E){a=null}b&&b(a)});yc(h,\"ready\",function(){m&&clearTimeout(m);Ib(this)});yc(h,\"timeout\",function(){m&&clearTimeout(m);Ib(this);b&&b(null)});Ug(h,a,c,d,e)};var Hh=pd(\"https://apis.google.com/js/client.js?onload=%{onload}\"),Ih=\"__fcb\"+Math.floor(1E6*Math.random()).toString();\nfunction Gh(a,b){if(((window.gapi||{}).client||{}).request)a();else{k[Ih]=function(){((window.gapi||{}).client||{}).request?a():b(Error(\"CORS_UNSUPPORTED\"))};var c=td(Hh,{onload:Ih});kh(ph(c),function(){b(Error(\"CORS_UNSUPPORTED\"))})}}\nxh.prototype.u=function(a,b,c,d,e){var f=this;Ch.then(function(){window.gapi.client.setApiKey(f.b);var h=window.gapi.auth.getToken();window.gapi.auth.setToken(null);window.gapi.client.request({path:a,method:c,body:d,headers:e,authType:\"none\",callback:function(a){window.gapi.auth.setToken(h);b&&b(a)}})}).m(function(a){b&&b({error:{message:a&&a.message||\"CORS_UNSUPPORTED\"}})})};\nfunction Jh(a,b){return new z(function(c,d){\"refresh_token\"==b.grant_type&&b.refresh_token||\"authorization_code\"==b.grant_type&&b.code?Fh(a,a.j+\"?key=\"+encodeURIComponent(a.b),function(a){a?a.error?d(Kh(a)):a.access_token&&a.refresh_token?c(a):d(new M(\"internal-error\")):d(new M(\"network-request-failed\"))},\"POST\",gd(b).toString(),a.f,a.l.get()):d(new M(\"internal-error\"))})}\nfunction Lh(a,b,c,d,e,f){var h=cd(a.g+b);H(h,\"key\",a.b);f&&H(h,\"cb\",na().toString());var m=\"GET\"==c;if(m)for(var p in d)d.hasOwnProperty(p)&&H(h,p,d[p]);return new z(function(b,f){Fh(a,h.toString(),function(a){a?a.error?f(Kh(a,e||{})):b(a):f(new M(\"network-request-failed\"))},c,m?void 0:Nd(ve(d)),a.a,a.h.get())})}function Mh(a){if(!rg.test(a.email))throw new M(\"invalid-email\");}function Nh(a){\"email\"in a&&Mh(a)}\nfunction Oh(a,b){return P(a,Ph,{identifier:b,continueUri:se()?Ud():\"http://localhost\"}).then(function(a){return a.allProviders||[]})}function Qh(a,b){return P(a,Ph,{identifier:b,continueUri:se()?Ud():\"http://localhost\"}).then(function(a){return a.signinMethods||[]})}function Rh(a){return P(a,Sh,{}).then(function(a){return a.authorizedDomains||[]})}function Th(a){if(!a[Gf])throw new M(\"internal-error\");}\nfunction Uh(a){if(a.phoneNumber||a.temporaryProof){if(!a.phoneNumber||!a.temporaryProof)throw new M(\"internal-error\");}else{if(!a.sessionInfo)throw new M(\"missing-verification-id\");if(!a.code)throw new M(\"missing-verification-code\");}}xh.prototype.jb=function(){return P(this,Vh,{})};xh.prototype.mb=function(a,b){return P(this,Wh,{idToken:a,email:b})};xh.prototype.nb=function(a,b){return P(this,Zf,{idToken:a,password:b})};var Xh={displayName:\"DISPLAY_NAME\",photoUrl:\"PHOTO_URL\"};g=xh.prototype;\ng.ob=function(a,b){var c={idToken:a},d=[];Xa(Xh,function(a,f){var e=b[f];null===e?d.push(a):f in b&&(c[f]=e)});d.length&&(c.deleteAttribute=d);return P(this,Wh,c)};g.gb=function(a,b){a={requestType:\"PASSWORD_RESET\",email:a};ab(a,b);return P(this,Yh,a)};g.hb=function(a,b){a={requestType:\"EMAIL_SIGNIN\",email:a};ab(a,b);return P(this,Zh,a)};g.fb=function(a,b){a={requestType:\"VERIFY_EMAIL\",idToken:a};ab(a,b);return P(this,$h,a)};function gg(a,b){return P(a,ai,b)}g.Sa=function(a){return P(this,bi,a)};\nfunction ci(a,b,c){return P(a,di,{idToken:b,deleteProvider:c})}function ei(a){if(!a.requestUri||!a.sessionId&&!a.postBody)throw new M(\"internal-error\");}\nfunction fi(a){var b=null;a.needConfirmation?(a.code=\"account-exists-with-different-credential\",b=qg(a)):\"FEDERATED_USER_ID_ALREADY_LINKED\"==a.errorMessage?(a.code=\"credential-already-in-use\",b=qg(a)):\"EMAIL_EXISTS\"==a.errorMessage?(a.code=\"email-already-in-use\",b=qg(a)):a.errorMessage&&(b=gi(a.errorMessage));if(b)throw b;if(!a[Gf])throw new M(\"internal-error\");}function If(a,b){b.returnIdpCredential=!0;return P(a,hi,b)}function Kf(a,b){b.returnIdpCredential=!0;return P(a,ii,b)}\nfunction Lf(a,b){b.returnIdpCredential=!0;b.autoCreate=!1;return P(a,ji,b)}function ki(a){if(!a.oobCode)throw new M(\"invalid-action-code\");}g.Wa=function(a,b){return P(this,li,{oobCode:a,newPassword:b})};g.Ia=function(a){return P(this,mi,{oobCode:a})};g.Ua=function(a){return P(this,ni,{oobCode:a})};\nvar ni={endpoint:\"setAccountInfo\",A:ki,ba:\"email\"},mi={endpoint:\"resetPassword\",A:ki,J:function(a){var b=a.requestType;if(!b||!a.email&&\"EMAIL_SIGNIN\"!=b)throw new M(\"internal-error\");}},oi={endpoint:\"signupNewUser\",A:function(a){Mh(a);if(!a.password)throw new M(\"weak-password\");},J:Th,R:!0},Ph={endpoint:\"createAuthUri\"},pi={endpoint:\"deleteAccount\",T:[\"idToken\"]},di={endpoint:\"setAccountInfo\",T:[\"idToken\",\"deleteProvider\"],A:function(a){if(!fa(a.deleteProvider))throw new M(\"internal-error\");}},Wf=\n{endpoint:\"emailLinkSignin\",T:[\"email\",\"oobCode\"],A:Mh,J:Th,R:!0},Yf={endpoint:\"emailLinkSignin\",T:[\"idToken\",\"email\",\"oobCode\"],A:Mh,J:Th,R:!0},qi={endpoint:\"getAccountInfo\"},Zh={endpoint:\"getOobConfirmationCode\",T:[\"requestType\"],A:function(a){if(\"EMAIL_SIGNIN\"!=a.requestType)throw new M(\"internal-error\");Mh(a)},ba:\"email\"},$h={endpoint:\"getOobConfirmationCode\",T:[\"idToken\",\"requestType\"],A:function(a){if(\"VERIFY_EMAIL\"!=a.requestType)throw new M(\"internal-error\");},ba:\"email\"},Yh={endpoint:\"getOobConfirmationCode\",\nT:[\"requestType\"],A:function(a){if(\"PASSWORD_RESET\"!=a.requestType)throw new M(\"internal-error\");Mh(a)},ba:\"email\"},Sh={pb:!0,endpoint:\"getProjectConfig\",Cb:\"GET\"},ri={pb:!0,endpoint:\"getRecaptchaParam\",Cb:\"GET\",J:function(a){if(!a.recaptchaSiteKey)throw new M(\"internal-error\");}},li={endpoint:\"resetPassword\",A:ki,ba:\"email\"},ai={endpoint:\"sendVerificationCode\",T:[\"phoneNumber\",\"recaptchaToken\"],ba:\"sessionInfo\"},Wh={endpoint:\"setAccountInfo\",T:[\"idToken\"],A:Nh,R:!0},Zf={endpoint:\"setAccountInfo\",\nT:[\"idToken\"],A:function(a){Nh(a);if(!a.password)throw new M(\"weak-password\");},J:Th,R:!0},Vh={endpoint:\"signupNewUser\",J:Th,R:!0},hi={endpoint:\"verifyAssertion\",A:ei,J:fi,R:!0},ji={endpoint:\"verifyAssertion\",A:ei,J:function(a){if(a.errorMessage&&\"USER_NOT_FOUND\"==a.errorMessage)throw new M(\"user-not-found\");if(a.errorMessage)throw gi(a.errorMessage);if(!a[Gf])throw new M(\"internal-error\");},R:!0},ii={endpoint:\"verifyAssertion\",A:function(a){ei(a);if(!a.idToken)throw new M(\"internal-error\");},J:fi,\nR:!0},si={endpoint:\"verifyCustomToken\",A:function(a){if(!a.token)throw new M(\"invalid-custom-token\");},J:Th,R:!0},Xf={endpoint:\"verifyPassword\",A:function(a){Mh(a);if(!a.password)throw new M(\"wrong-password\");},J:Th,R:!0},bi={endpoint:\"verifyPhoneNumber\",A:Uh,J:Th},dg={endpoint:\"verifyPhoneNumber\",A:function(a){if(!a.idToken)throw new M(\"internal-error\");Uh(a)},J:function(a){if(a.temporaryProof)throw a.code=\"credential-already-in-use\",qg(a);Th(a)}},eg={Tb:{USER_NOT_FOUND:\"user-not-found\"},endpoint:\"verifyPhoneNumber\",\nA:Uh,J:Th};function P(a,b,c){if(!Je(c,b.T))return B(new M(\"internal-error\"));var d=b.Cb||\"POST\",e;return A(c).then(b.A).then(function(){b.R&&(c.returnSecureToken=!0);return Lh(a,b.endpoint,d,c,b.Tb,b.pb||!1)}).then(function(a){return e=a}).then(b.J).then(function(){if(!b.ba)return e;if(!(b.ba in e))throw new M(\"internal-error\");return e[b.ba]})}function gi(a){return Kh({error:{errors:[{message:a}],code:400,message:a}})}\nfunction Kh(a,b){var c=(a.error&&a.error.errors&&a.error.errors[0]||{}).reason||\"\";var d={keyInvalid:\"invalid-api-key\",ipRefererBlocked:\"app-not-authorized\"};if(c=d[c]?new M(d[c]):null)return c;c=a.error&&a.error.message||\"\";d={INVALID_CUSTOM_TOKEN:\"invalid-custom-token\",CREDENTIAL_MISMATCH:\"custom-token-mismatch\",MISSING_CUSTOM_TOKEN:\"internal-error\",INVALID_IDENTIFIER:\"invalid-email\",MISSING_CONTINUE_URI:\"internal-error\",INVALID_EMAIL:\"invalid-email\",INVALID_PASSWORD:\"wrong-password\",USER_DISABLED:\"user-disabled\",\nMISSING_PASSWORD:\"internal-error\",EMAIL_EXISTS:\"email-already-in-use\",PASSWORD_LOGIN_DISABLED:\"operation-not-allowed\",INVALID_IDP_RESPONSE:\"invalid-credential\",FEDERATED_USER_ID_ALREADY_LINKED:\"credential-already-in-use\",INVALID_MESSAGE_PAYLOAD:\"invalid-message-payload\",INVALID_RECIPIENT_EMAIL:\"invalid-recipient-email\",INVALID_SENDER:\"invalid-sender\",EMAIL_NOT_FOUND:\"user-not-found\",EXPIRED_OOB_CODE:\"expired-action-code\",INVALID_OOB_CODE:\"invalid-action-code\",MISSING_OOB_CODE:\"internal-error\",CREDENTIAL_TOO_OLD_LOGIN_AGAIN:\"requires-recent-login\",\nINVALID_ID_TOKEN:\"invalid-user-token\",TOKEN_EXPIRED:\"user-token-expired\",USER_NOT_FOUND:\"user-token-expired\",CORS_UNSUPPORTED:\"cors-unsupported\",DYNAMIC_LINK_NOT_ACTIVATED:\"dynamic-link-not-activated\",INVALID_APP_ID:\"invalid-app-id\",TOO_MANY_ATTEMPTS_TRY_LATER:\"too-many-requests\",WEAK_PASSWORD:\"weak-password\",OPERATION_NOT_ALLOWED:\"operation-not-allowed\",USER_CANCELLED:\"user-cancelled\",CAPTCHA_CHECK_FAILED:\"captcha-check-failed\",INVALID_APP_CREDENTIAL:\"invalid-app-credential\",INVALID_CODE:\"invalid-verification-code\",\nINVALID_PHONE_NUMBER:\"invalid-phone-number\",INVALID_SESSION_INFO:\"invalid-verification-id\",INVALID_TEMPORARY_PROOF:\"invalid-credential\",MISSING_APP_CREDENTIAL:\"missing-app-credential\",MISSING_CODE:\"missing-verification-code\",MISSING_PHONE_NUMBER:\"missing-phone-number\",MISSING_SESSION_INFO:\"missing-verification-id\",QUOTA_EXCEEDED:\"quota-exceeded\",SESSION_EXPIRED:\"code-expired\",INVALID_CONTINUE_URI:\"invalid-continue-uri\",MISSING_ANDROID_PACKAGE_NAME:\"missing-android-pkg-name\",MISSING_IOS_BUNDLE_ID:\"missing-ios-bundle-id\",\nUNAUTHORIZED_DOMAIN:\"unauthorized-continue-uri\",INVALID_OAUTH_CLIENT_ID:\"invalid-oauth-client-id\",INVALID_CERT_HASH:\"invalid-cert-hash\"};ab(d,b||{});b=(b=c.match(/^[^\\s]+\\s*:\\s*(.*)$/))&&1<b.length?b[1]:void 0;for(var e in d)if(0===c.indexOf(e))return new M(d[e],b);!b&&a&&(b=ue(a));return new M(\"internal-error\",b)};var ti={Wc:{Ya:\"https://www.googleapis.com/identitytoolkit/v3/relyingparty/\",eb:\"https://securetoken.googleapis.com/v1/token\",id:\"p\"},Yc:{Ya:\"https://staging-www.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/\",eb:\"https://staging-securetoken.sandbox.googleapis.com/v1/token\",id:\"s\"},Zc:{Ya:\"https://www-googleapis-test.sandbox.google.com/identitytoolkit/v3/relyingparty/\",eb:\"https://test-securetoken.sandbox.googleapis.com/v1/token\",id:\"t\"}};\nfunction ui(a){for(var b in ti)if(ti[b].id===a)return a=ti[b],{firebaseEndpoint:a.Ya,secureTokenEndpoint:a.eb};return null}var vi;vi=ui(\"__EID__\")?\"__EID__\":void 0;function wi(a){this.b=a;this.a=null;this.ab=xi(this)}\nfunction xi(a){return yi().then(function(){return new z(function(b,c){J(\"gapi.iframes.getContext\")().open({where:document.body,url:a.b,messageHandlersFilter:J(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"),attributes:{style:{position:\"absolute\",top:\"-100px\",width:\"1px\",height:\"1px\"}},dontclear:!0},function(d){function e(){clearTimeout(f);b()}a.a=d;a.a.restyle({setHideOnLeave:!1});var f=setTimeout(function(){c(Error(\"Network Error\"))},zi.get());d.ping(e).then(e,function(){c(Error(\"Network Error\"))})})})})}\nfunction Ai(a,b){return a.ab.then(function(){return new z(function(c){a.a.send(b.type,b,c,J(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"))})})}function Bi(a,b){a.ab.then(function(){a.a.register(\"authEvent\",b,J(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"))})}var Ci=pd(\"https://apis.google.com/js/api.js?onload=%{onload}\"),Di=new ze(3E4,6E4),zi=new ze(5E3,15E3),Ei=null;\nfunction yi(){return Ei?Ei:Ei=(new z(function(a,b){function c(){ye();J(\"gapi.load\")(\"gapi.iframes\",{callback:a,ontimeout:function(){ye();b(Error(\"Network Error\"))},timeout:Di.get()})}if(J(\"gapi.iframes.Iframe\"))a();else if(J(\"gapi.load\"))c();else{var d=\"__iframefcb\"+Math.floor(1E6*Math.random()).toString();k[d]=function(){J(\"gapi.load\")?c():b(Error(\"Network Error\"))};d=td(Ci,{onload:d});A(ph(d)).m(function(){b(Error(\"Network Error\"))})}})).m(function(a){Ei=null;throw a;})};function Fi(a,b,c){this.j=a;this.g=b;this.h=c;this.f=null;this.a=dd(this.j,\"/__/auth/iframe\");H(this.a,\"apiKey\",this.g);H(this.a,\"appName\",this.h);this.b=null;this.c=[]}Fi.prototype.toString=function(){this.f?H(this.a,\"v\",this.f):jd(this.a.a,\"v\");this.b?H(this.a,\"eid\",this.b):jd(this.a.a,\"eid\");this.c.length?H(this.a,\"fw\",this.c.join(\",\")):jd(this.a.a,\"fw\");return this.a.toString()};function Gi(a,b,c,d,e){this.o=a;this.u=b;this.c=c;this.l=d;this.h=this.g=this.j=null;this.a=e;this.f=null}\nGi.prototype.toString=function(){var a=dd(this.o,\"/__/auth/handler\");H(a,\"apiKey\",this.u);H(a,\"appName\",this.c);H(a,\"authType\",this.l);if(this.a.isOAuthProvider){var b=this.a;try{var c=firebase.app(this.c).auth().ca()}catch(m){c=null}b.Xa=c;H(a,\"providerId\",this.a.providerId);b=this.a;c=ve(b.tb);for(var d in c)c[d]=c[d].toString();d=b.Ac;c=Za(c);for(var e=0;e<d.length;e++){var f=d[e];f in c&&delete c[f]}b.Za&&b.Xa&&!c[b.Za]&&(c[b.Za]=b.Xa);Ya(c)||H(a,\"customParameters\",ue(c))}\"function\"===typeof this.a.yb&&\n(b=this.a.yb(),b.length&&H(a,\"scopes\",b.join(\",\")));this.j?H(a,\"redirectUrl\",this.j):jd(a.a,\"redirectUrl\");this.g?H(a,\"eventId\",this.g):jd(a.a,\"eventId\");this.h?H(a,\"v\",this.h):jd(a.a,\"v\");if(this.b)for(var h in this.b)this.b.hasOwnProperty(h)&&!bd(a,h)&&H(a,h,this.b[h]);this.f?H(a,\"eid\",this.f):jd(a.a,\"eid\");h=Hi(this.c);h.length&&H(a,\"fw\",h.join(\",\"));return a.toString()};function Hi(a){try{return firebase.app(a).auth().Ka()}catch(b){return[]}}\nfunction Ii(a,b,c,d,e){this.u=a;this.f=b;this.b=c;this.c=d||null;this.h=e||null;this.o=this.s=this.v=null;this.g=[];this.l=this.a=null}\nfunction Ji(a){var b=Ud();return Rh(a).then(function(a){a:{var c=cd(b),e=c.c;c=c.b;for(var f=0;f<a.length;f++){var h=a[f];var m=c;var p=e;0==h.indexOf(\"chrome-extension://\")?m=cd(h).b==m&&\"chrome-extension\"==p:\"http\"!=p&&\"https\"!=p?m=!1:ee.test(h)?m=m==h:(h=h.split(\".\").join(\"\\\\.\"),m=(new RegExp(\"^(.+\\\\.\"+h+\"|\"+h+\")$\",\"i\")).test(m));if(m){a=!0;break a}}a=!1}if(!a)throw new og(Ud());})}\nfunction Ki(a){if(a.l)return a.l;a.l=fe().then(function(){if(!a.s){var b=a.c,c=a.h,d=Hi(a.b),e=new Fi(a.u,a.f,a.b);e.f=b;e.b=c;e.c=Ia(d||[]);a.s=e.toString()}a.j=new wi(a.s);Li(a)});return a.l}g=Ii.prototype;g.Da=function(a,b,c){var d=new M(\"popup-closed-by-user\"),e=new M(\"web-storage-unsupported\"),f=this,h=!1;return this.ea().then(function(){Mi(f).then(function(c){c||(a&&ae(a),b(e),h=!0)})}).m(function(){}).then(function(){if(!h)return de(a)}).then(function(){if(!h)return Fc(c).then(function(){b(d)})})};\ng.Gb=function(){var a=I();return!te(a)&&!xe(a)};g.Bb=function(){return!1};\ng.xb=function(a,b,c,d,e,f,h){if(!a)return B(new M(\"popup-blocked\"));if(h&&!te())return this.ea().m(function(b){ae(a);e(b)}),d(),A();this.a||(this.a=Ji(Ni(this)));var m=this;return this.a.then(function(){var b=m.ea().m(function(b){ae(a);e(b);throw b;});d();return b}).then(function(){jg(c);if(!h){var d=Oi(m.u,m.f,m.b,b,c,null,f,m.c,void 0,m.h);Vd(d,a)}}).m(function(a){\"auth/network-request-failed\"==a.code&&(m.a=null);throw a;})};\nfunction Ni(a){a.o||(a.v=a.c?oe(a.c,Hi(a.b)):null,a.o=new xh(a.f,ui(a.h),a.v));return a.o}g.Ba=function(a,b,c){this.a||(this.a=Ji(Ni(this)));var d=this;return this.a.then(function(){jg(b);var e=Oi(d.u,d.f,d.b,a,b,Ud(),c,d.c,void 0,d.h);Vd(e)}).m(function(a){\"auth/network-request-failed\"==a.code&&(d.a=null);throw a;})};g.ea=function(){var a=this;return Ki(this).then(function(){return a.j.ab}).m(function(){a.a=null;throw new M(\"network-request-failed\");})};g.Lb=function(){return!0};\nfunction Oi(a,b,c,d,e,f,h,m,p,E){a=new Gi(a,b,c,d,e);a.j=f;a.g=h;a.h=m;a.b=Za(p||null);a.f=E;return a.toString()}function Li(a){if(!a.j)throw Error(\"IfcHandler must be initialized!\");Bi(a.j,function(b){var c={};if(b&&b.authEvent){var d=!1;b=lg(b.authEvent);for(c=0;c<a.g.length;c++)d=a.g[c](b)||d;c={};c.status=d?\"ACK\":\"ERROR\";return A(c)}c.status=\"ERROR\";return A(c)})}\nfunction Mi(a){var b={type:\"webStorageSupport\"};return Ki(a).then(function(){return Ai(a.j,b)}).then(function(a){if(a&&a.length&&\"undefined\"!==typeof a[0].webStorageSupport)return a[0].webStorageSupport;throw Error();})}g.va=function(a){this.g.push(a)};g.Ja=function(a){w(this.g,function(b){return b==a})};function Pi(a){this.a=a||firebase.INTERNAL.reactNative&&firebase.INTERNAL.reactNative.AsyncStorage;if(!this.a)throw new M(\"internal-error\",\"The React Native compatibility library was not found.\");this.type=\"asyncStorage\"}g=Pi.prototype;g.get=function(a){return A(this.a.getItem(a)).then(function(a){return a&&we(a)})};g.set=function(a,b){return A(this.a.setItem(a,ue(b)))};g.P=function(a){return A(this.a.removeItem(a))};g.Y=function(){};g.aa=function(){};function Qi(){if(!Ri())throw new M(\"web-storage-unsupported\");this.f={};this.a=[];this.b=0;this.g=k.indexedDB;this.type=\"indexedDB\"}var Si;function Ti(a){return new z(function(b,c){var d=a.g.deleteDatabase(\"firebaseLocalStorageDb\");d.onsuccess=function(){b()};d.onerror=function(a){c(Error(a.target.error))}})}\nfunction Ui(a){return new z(function(b,c){var d=a.g.open(\"firebaseLocalStorageDb\",1);d.onerror=function(a){try{a.preventDefault()}catch(f){}c(Error(a.target.error))};d.onupgradeneeded=function(a){a=a.target.result;try{a.createObjectStore(\"firebaseLocalStorage\",{keyPath:\"fbase_key\"})}catch(f){c(f)}};d.onsuccess=function(d){d=d.target.result;d.objectStoreNames.contains(\"firebaseLocalStorage\")?b(d):Ti(a).then(function(){return Ui(a)}).then(function(a){b(a)}).m(function(a){c(a)})}})}\nfunction Vi(a){a.h||(a.h=Ui(a));return a.h}function Ri(){try{return!!k.indexedDB}catch(a){return!1}}function Wi(a){return a.objectStore(\"firebaseLocalStorage\")}function Xi(a,b){return a.transaction([\"firebaseLocalStorage\"],b?\"readwrite\":\"readonly\")}function Yi(a){return new z(function(b,c){a.onsuccess=function(a){a&&a.target?b(a.target.result):b()};a.onerror=function(a){c(Error(a.target.errorCode))}})}g=Qi.prototype;\ng.set=function(a,b){var c=!1,d,e=this;return Vi(this).then(function(b){d=b;b=Wi(Xi(d,!0));return Yi(b.get(a))}).then(function(f){var h=Wi(Xi(d,!0));if(f)return f.value=b,Yi(h.put(f));e.b++;c=!0;f={};f.fbase_key=a;f.value=b;return Yi(h.add(f))}).then(function(){e.f[a]=b}).ha(function(){c&&e.b--})};g.get=function(a){return Vi(this).then(function(b){return Yi(Wi(Xi(b,!1)).get(a))}).then(function(a){return a&&a.value})};\ng.P=function(a){var b=!1,c=this;return Vi(this).then(function(d){b=!0;c.b++;return Yi(Wi(Xi(d,!0))[\"delete\"](a))}).then(function(){delete c.f[a]}).ha(function(){b&&c.b--})};\ng.Jc=function(){var a=this;return Vi(this).then(function(a){var b=Wi(Xi(a,!1));return b.getAll?Yi(b.getAll()):new z(function(a,c){var d=[],e=b.openCursor();e.onsuccess=function(b){(b=b.target.result)?(d.push(b.value),b[\"continue\"]()):a(d)};e.onerror=function(a){c(Error(a.target.errorCode))}})}).then(function(b){var c={},d=[];if(0==a.b){for(d=0;d<b.length;d++)c[b[d].fbase_key]=b[d].value;d=Wd(a.f,c);a.f=c}return d})};g.Y=function(a){0==this.a.length&&Zi(this);this.a.push(a)};\ng.aa=function(a){w(this.a,function(b){return b==a});0==this.a.length&&this.c&&this.c.cancel(\"STOP_EVENT\")};function Zi(a){function b(){a.c=Fc(800).then(r(a.Jc,a)).then(function(b){0<b.length&&v(a.a,function(a){a(b)})}).then(b).m(function(a){\"STOP_EVENT\"!=a.message&&b()});return a.c}a.c&&a.c.cancel(\"STOP_EVENT\");b()};function $i(a){var b=this,c=null;this.a=[];this.type=\"indexedDB\";this.c=a;this.b=A().then(function(){return Ri()?(Si||(Si=new Qi),c=Si,c.set(\"__sak\",\"!\").then(function(){return c.get(\"__sak\")}).then(function(a){if(\"!\"!==a)throw Error(\"indexedDB not supported!\");return c.P(\"__sak\")}).then(function(){return c}).m(function(){return b.c})):b.c}).then(function(a){b.type=a.type;a.Y(function(a){v(b.a,function(b){b(a)})});return a})}g=$i.prototype;g.get=function(a){return this.b.then(function(b){return b.get(a)})};\ng.set=function(a,b){return this.b.then(function(c){return c.set(a,b)})};g.P=function(a){return this.b.then(function(b){return b.P(a)})};g.Y=function(a){this.a.push(a)};g.aa=function(a){w(this.a,function(b){return b==a})};function aj(){this.a={};this.type=\"inMemory\"}g=aj.prototype;g.get=function(a){return A(this.a[a])};g.set=function(a,b){this.a[a]=b;return A()};g.P=function(a){delete this.a[a];return A()};g.Y=function(){};g.aa=function(){};function bj(){if(!cj()){if(\"Node\"==le())throw new M(\"internal-error\",\"The LocalStorage compatibility library was not found.\");throw new M(\"web-storage-unsupported\");}this.a=dj()||firebase.INTERNAL.node.localStorage;this.type=\"localStorage\"}function dj(){try{var a=k.localStorage,b=qe();a&&(a.setItem(b,\"1\"),a.removeItem(b));return a}catch(c){return null}}\nfunction cj(){var a=\"Node\"==le();a=dj()||a&&firebase.INTERNAL.node&&firebase.INTERNAL.node.localStorage;if(!a)return!1;try{return a.setItem(\"__sak\",\"1\"),a.removeItem(\"__sak\"),!0}catch(b){return!1}}g=bj.prototype;g.get=function(a){var b=this;return A().then(function(){var c=b.a.getItem(a);return we(c)})};g.set=function(a,b){var c=this;return A().then(function(){var d=ue(b);null===d?c.P(a):c.a.setItem(a,d)})};g.P=function(a){var b=this;return A().then(function(){b.a.removeItem(a)})};\ng.Y=function(a){k.window&&pc(k.window,\"storage\",a)};g.aa=function(a){k.window&&F(k.window,\"storage\",a)};function ej(){this.type=\"nullStorage\"}g=ej.prototype;g.get=function(){return A(null)};g.set=function(){return A()};g.P=function(){return A()};g.Y=function(){};g.aa=function(){};function fj(){if(!gj()){if(\"Node\"==le())throw new M(\"internal-error\",\"The SessionStorage compatibility library was not found.\");throw new M(\"web-storage-unsupported\");}this.a=hj()||firebase.INTERNAL.node.sessionStorage;this.type=\"sessionStorage\"}function hj(){try{var a=k.sessionStorage,b=qe();a&&(a.setItem(b,\"1\"),a.removeItem(b));return a}catch(c){return null}}\nfunction gj(){var a=\"Node\"==le();a=hj()||a&&firebase.INTERNAL.node&&firebase.INTERNAL.node.sessionStorage;if(!a)return!1;try{return a.setItem(\"__sak\",\"1\"),a.removeItem(\"__sak\"),!0}catch(b){return!1}}g=fj.prototype;g.get=function(a){var b=this;return A().then(function(){var c=b.a.getItem(a);return we(c)})};g.set=function(a,b){var c=this;return A().then(function(){var d=ue(b);null===d?c.P(a):c.a.setItem(a,d)})};g.P=function(a){var b=this;return A().then(function(){b.a.removeItem(a)})};g.Y=function(){};\ng.aa=function(){};function ij(){var a={};a.Browser=jj;a.Node=kj;a.ReactNative=lj;a.Worker=mj;this.a=a[le()]}var nj,jj={w:bj,Pa:fj},kj={w:bj,Pa:fj},lj={w:Pi,Pa:ej},mj={w:bj,Pa:ej};var oj={Vc:\"local\",NONE:\"none\",Xc:\"session\"};function pj(a){var b=new M(\"invalid-persistence-type\"),c=new M(\"unsupported-persistence-type\");a:{for(d in oj)if(oj[d]==a){var d=!0;break a}d=!1}if(!d||\"string\"!==typeof a)throw b;switch(le()){case \"ReactNative\":if(\"session\"===a)throw c;break;case \"Node\":if(\"none\"!==a)throw c;break;default:if(!pe()&&\"none\"!==a)throw c;}}\nfunction qj(){var a=!xe(I())&&je()?!0:!1,b=te(),c=pe();this.o=a;this.h=b;this.l=c;this.a={};nj||(nj=new ij);a=nj;try{this.g=!Td()&&De()||!k.indexedDB?new a.a.w:new $i(ke()?new aj:new a.a.w)}catch(d){this.g=new aj,this.h=!0}try{this.j=new a.a.Pa}catch(d){this.j=new aj}this.u=new aj;this.f=r(this.Kb,this);this.b={}}var rj;function sj(){rj||(rj=new qj);return rj}function tj(a,b){switch(b){case \"session\":return a.j;case \"none\":return a.u;default:return a.g}}\nfunction uj(a,b){return\"firebase:\"+a.name+(b?\":\"+b:\"\")}function vj(a,b,c){var d=uj(b,c),e=tj(a,b.w);return a.get(b,c).then(function(f){var h=null;try{h=we(k.localStorage.getItem(d))}catch(m){}if(h&&!f)return k.localStorage.removeItem(d),a.set(b,h,c);h&&f&&\"localStorage\"!=e.type&&k.localStorage.removeItem(d)})}g=qj.prototype;g.get=function(a,b){return tj(this,a.w).get(uj(a,b))};function wj(a,b,c){c=uj(b,c);\"local\"==b.w&&(a.b[c]=null);return tj(a,b.w).P(c)}\ng.set=function(a,b,c){var d=uj(a,c),e=this,f=tj(this,a.w);return f.set(d,b).then(function(){return f.get(d)}).then(function(b){\"local\"==a.w&&(e.b[d]=b)})};g.addListener=function(a,b,c){a=uj(a,b);this.l&&(this.b[a]=k.localStorage.getItem(a));Ya(this.a)&&(tj(this,\"local\").Y(this.f),this.h||(Td()||!De())&&k.indexedDB||!this.l||xj(this));this.a[a]||(this.a[a]=[]);this.a[a].push(c)};\ng.removeListener=function(a,b,c){a=uj(a,b);this.a[a]&&(w(this.a[a],function(a){return a==c}),0==this.a[a].length&&delete this.a[a]);Ya(this.a)&&(tj(this,\"local\").aa(this.f),yj(this))};function xj(a){yj(a);a.c=setInterval(function(){for(var b in a.a){var c=k.localStorage.getItem(b),d=a.b[b];c!=d&&(a.b[b]=c,c=new cc({type:\"storage\",key:b,target:window,oldValue:d,newValue:c,a:!0}),a.Kb(c))}},1E3)}function yj(a){a.c&&(clearInterval(a.c),a.c=null)}\ng.Kb=function(a){if(a&&a.f){var b=a.a.key;if(null==b)for(var c in this.a){var d=this.b[c];\"undefined\"===typeof d&&(d=null);var e=k.localStorage.getItem(c);e!==d&&(this.b[c]=e,this.Va(c))}else if(0==b.indexOf(\"firebase:\")&&this.a[b]){\"undefined\"!==typeof a.a.a?tj(this,\"local\").aa(this.f):yj(this);if(this.o)if(c=k.localStorage.getItem(b),d=a.a.newValue,d!==c)null!==d?k.localStorage.setItem(b,d):k.localStorage.removeItem(b);else if(this.b[b]===d&&\"undefined\"===typeof a.a.a)return;var f=this;c=function(){if(\"undefined\"!==\ntypeof a.a.a||f.b[b]!==k.localStorage.getItem(b))f.b[b]=k.localStorage.getItem(b),f.Va(b)};C&&Xb&&10==Xb&&k.localStorage.getItem(b)!==a.a.newValue&&a.a.newValue!==a.a.oldValue?setTimeout(c,10):c()}}else v(a,r(this.Va,this))};g.Va=function(a){this.a[a]&&v(this.a[a],function(a){a()})};function zj(a){this.a=a;this.b=sj()}var Aj={name:\"authEvent\",w:\"local\"};function Bj(a){return a.b.get(Aj,a.a).then(function(a){return lg(a)})};function Cj(){this.a=sj()};function Dj(){this.b=-1};function Ej(a,b){this.b=-1;this.b=Fj;this.f=k.Uint8Array?new Uint8Array(this.b):Array(this.b);this.g=this.c=0;this.a=[];this.j=a;this.h=b;this.l=k.Int32Array?new Int32Array(64):Array(64);void 0!==Gj||(k.Int32Array?Gj=new Int32Array(Hj):Gj=Hj);this.reset()}var Gj;t(Ej,Dj);for(var Fj=64,Ij=Fj-1,Jj=[],Kj=0;Kj<Ij;Kj++)Jj[Kj]=0;var Lj=Ha(128,Jj);Ej.prototype.reset=function(){this.g=this.c=0;this.a=k.Int32Array?new Int32Array(this.h):Ia(this.h)};\nfunction Mj(a){for(var b=a.f,c=a.l,d=0,e=0;e<b.length;)c[d++]=b[e]<<24|b[e+1]<<16|b[e+2]<<8|b[e+3],e=4*d;for(b=16;64>b;b++){e=c[b-15]|0;d=c[b-2]|0;var f=(c[b-16]|0)+((e>>>7|e<<25)^(e>>>18|e<<14)^e>>>3)|0,h=(c[b-7]|0)+((d>>>17|d<<15)^(d>>>19|d<<13)^d>>>10)|0;c[b]=f+h|0}d=a.a[0]|0;e=a.a[1]|0;var m=a.a[2]|0,p=a.a[3]|0,E=a.a[4]|0,ic=a.a[5]|0,Jc=a.a[6]|0;f=a.a[7]|0;for(b=0;64>b;b++){var El=((d>>>2|d<<30)^(d>>>13|d<<19)^(d>>>22|d<<10))+(d&e^d&m^e&m)|0;h=E&ic^~E&Jc;f=f+((E>>>6|E<<26)^(E>>>11|E<<21)^(E>>>\n25|E<<7))|0;h=h+(Gj[b]|0)|0;h=f+(h+(c[b]|0)|0)|0;f=Jc;Jc=ic;ic=E;E=p+h|0;p=m;m=e;e=d;d=h+El|0}a.a[0]=a.a[0]+d|0;a.a[1]=a.a[1]+e|0;a.a[2]=a.a[2]+m|0;a.a[3]=a.a[3]+p|0;a.a[4]=a.a[4]+E|0;a.a[5]=a.a[5]+ic|0;a.a[6]=a.a[6]+Jc|0;a.a[7]=a.a[7]+f|0}\nfunction Nj(a,b,c){void 0===c&&(c=b.length);var d=0,e=a.c;if(l(b))for(;d<c;)a.f[e++]=b.charCodeAt(d++),e==a.b&&(Mj(a),e=0);else if(ha(b))for(;d<c;){var f=b[d++];if(!(\"number\"==typeof f&&0<=f&&255>=f&&f==(f|0)))throw Error(\"message must be a byte array\");a.f[e++]=f;e==a.b&&(Mj(a),e=0)}else throw Error(\"message must be string or array\");a.c=e;a.g+=c}\nvar Hj=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,\n4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function Oj(){Ej.call(this,8,Pj)}t(Oj,Ej);var Pj=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];function Qj(a,b,c,d,e){this.u=a;this.j=b;this.l=c;this.o=d||null;this.s=e||null;this.h=b+\":\"+c;this.v=new Cj;this.g=new zj(this.h);this.f=null;this.b=[];this.a=this.c=null}function Rj(a){return new M(\"invalid-cordova-configuration\",a)}g=Qj.prototype;\ng.ea=function(){return this.ya?this.ya:this.ya=ge().then(function(){if(\"function\"!==typeof J(\"universalLinks.subscribe\",k))throw Rj(\"cordova-universal-links-plugin is not installed\");if(\"undefined\"===typeof J(\"BuildInfo.packageName\",k))throw Rj(\"cordova-plugin-buildinfo is not installed\");if(\"function\"!==typeof J(\"cordova.plugins.browsertab.openUrl\",k))throw Rj(\"cordova-plugin-browsertab is not installed\");if(\"function\"!==typeof J(\"cordova.InAppBrowser.open\",k))throw Rj(\"cordova-plugin-inappbrowser is not installed\");\n},function(){throw new M(\"cordova-not-ready\");})};function Sj(){for(var a=20,b=[];0<a;)b.push(\"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".charAt(Math.floor(62*Math.random()))),a--;return b.join(\"\")}function Tj(a){var b=new Oj;Nj(b,a);a=[];var c=8*b.g;56>b.c?Nj(b,Lj,56-b.c):Nj(b,Lj,b.b-(b.c-56));for(var d=63;56<=d;d--)b.f[d]=c&255,c/=256;Mj(b);for(d=c=0;d<b.j;d++)for(var e=24;0<=e;e-=8)a[c++]=b.a[d]>>e&255;return gf(a)}\ng.Da=function(a,b){b(new M(\"operation-not-supported-in-this-environment\"));return A()};g.xb=function(){return B(new M(\"operation-not-supported-in-this-environment\"))};g.Lb=function(){return!1};g.Gb=function(){return!0};g.Bb=function(){return!0};\ng.Ba=function(a,b,c){if(this.c)return B(new M(\"redirect-operation-pending\"));var d=this,e=k.document,f=null,h=null,m=null,p=null;return this.c=A().then(function(){jg(b);return Uj(d)}).then(function(){return Vj(d,a,b,c)}).then(function(){return(new z(function(a,b){h=function(){var b=J(\"cordova.plugins.browsertab.close\",k);a();\"function\"===typeof b&&b();d.a&&\"function\"===typeof d.a.close&&(d.a.close(),d.a=null);return!1};d.va(h);m=function(){f||(f=Fc(2E3).then(function(){b(new M(\"redirect-cancelled-by-user\"))}))};\np=function(){Ae()&&m()};e.addEventListener(\"resume\",m,!1);I().toLowerCase().match(/android/)||e.addEventListener(\"visibilitychange\",p,!1)})).m(function(a){return Wj(d).then(function(){throw a;})})}).ha(function(){m&&e.removeEventListener(\"resume\",m,!1);p&&e.removeEventListener(\"visibilitychange\",p,!1);f&&f.cancel();h&&d.Ja(h);d.c=null})};\nfunction Vj(a,b,c,d){var e=Sj(),f=new kg(b,d,null,e,new M(\"no-auth-event\")),h=J(\"BuildInfo.packageName\",k);if(\"string\"!==typeof h)throw new M(\"invalid-cordova-configuration\");var m=J(\"BuildInfo.displayName\",k),p={};if(I().toLowerCase().match(/iphone|ipad|ipod/))p.ibi=h;else if(I().toLowerCase().match(/android/))p.apn=h;else return B(new M(\"operation-not-supported-in-this-environment\"));m&&(p.appDisplayName=m);e=Tj(e);p.sessionId=e;var E=Oi(a.u,a.j,a.l,b,c,null,d,a.o,p,a.s);return a.ea().then(function(){var b=\na.h;return a.v.a.set(Aj,f.C(),b)}).then(function(){var b=J(\"cordova.plugins.browsertab.isAvailable\",k);if(\"function\"!==typeof b)throw new M(\"invalid-cordova-configuration\");var c=null;b(function(b){if(b){c=J(\"cordova.plugins.browsertab.openUrl\",k);if(\"function\"!==typeof c)throw new M(\"invalid-cordova-configuration\");c(E)}else{c=J(\"cordova.InAppBrowser.open\",k);if(\"function\"!==typeof c)throw new M(\"invalid-cordova-configuration\");b=I();b=!(!b.match(/(iPad|iPhone|iPod).*OS 7_\\d/i)&&!b.match(/(iPad|iPhone|iPod).*OS 8_\\d/i));\na.a=c(E,b?\"_blank\":\"_system\",\"location=yes\")}})})}function Xj(a,b){for(var c=0;c<a.b.length;c++)try{a.b[c](b)}catch(d){}}function Uj(a){a.f||(a.f=a.ea().then(function(){return new z(function(b){function c(d){b(d);a.Ja(c);return!1}a.va(c);Yj(a)})}));return a.f}function Wj(a){var b=null;return Bj(a.g).then(function(c){b=c;c=a.g;return wj(c.b,Aj,c.a)}).then(function(){return b})}\nfunction Yj(a){function b(b){d=!0;e&&e.cancel();Wj(a).then(function(d){var e=c;if(d&&b&&b.url){var f=null;e=Ef(b.url);-1!=e.indexOf(\"/__/auth/callback\")&&(f=cd(e),f=we(bd(f,\"firebaseError\")||null),f=(f=\"object\"===typeof f?We(f):null)?new kg(d.b,d.c,null,null,f):new kg(d.b,d.c,e,d.g));e=f||c}Xj(a,e)})}var c=new kg(\"unknown\",null,null,null,new M(\"no-auth-event\")),d=!1,e=Fc(500).then(function(){return Wj(a).then(function(){d||Xj(a,c)})}),f=k.handleOpenURL;k.handleOpenURL=function(a){0==a.toLowerCase().indexOf(J(\"BuildInfo.packageName\",\nk).toLowerCase()+\"://\")&&b({url:a});if(\"function\"===typeof f)try{f(a)}catch(m){console.error(m)}};ng||(ng=new mg);ng.subscribe(b)}g.va=function(a){this.b.push(a);Uj(this).m(function(b){\"auth/invalid-cordova-configuration\"===b.code&&(b=new kg(\"unknown\",null,null,null,new M(\"no-auth-event\")),a(b))})};g.Ja=function(a){w(this.b,function(b){return b==a})};function Zj(a){this.a=a;this.b=sj()}var ak={name:\"pendingRedirect\",w:\"session\"};function bk(a){return a.b.set(ak,\"pending\",a.a)}function ck(a){return wj(a.b,ak,a.a)}function dk(a){return a.b.get(ak,a.a).then(function(a){return\"pending\"==a})};function ek(a,b,c){this.v=a;this.l=b;this.u=c;this.h=[];this.f=!1;this.j=r(this.o,this);this.c=new fk;this.s=new gk;this.g=new Zj(this.l+\":\"+this.u);this.b={};this.b.unknown=this.c;this.b.signInViaRedirect=this.c;this.b.linkViaRedirect=this.c;this.b.reauthViaRedirect=this.c;this.b.signInViaPopup=this.s;this.b.linkViaPopup=this.s;this.b.reauthViaPopup=this.s;this.a=hk(this.v,this.l,this.u,vi)}function hk(a,b,c,d){var e=firebase.SDK_VERSION||null;return he()?new Qj(a,b,c,e,d):new Ii(a,b,c,e,d)}\nek.prototype.reset=function(){this.f=!1;this.a.Ja(this.j);this.a=hk(this.v,this.l,this.u)};function ik(a){a.f||(a.f=!0,a.a.va(a.j));var b=a.a;return a.a.ea().m(function(c){a.a==b&&a.reset();throw c;})}function jk(a){a.a.Gb()&&ik(a).m(function(b){var c=new kg(\"unknown\",null,null,null,new M(\"operation-not-supported-in-this-environment\"));kk(b)&&a.o(c)});a.a.Bb()||lk(a.c)}\nek.prototype.subscribe=function(a){Fa(this.h,a)||this.h.push(a);if(!this.f){var b=this;dk(this.g).then(function(a){a?ck(b.g).then(function(){ik(b).m(function(a){var c=new kg(\"unknown\",null,null,null,new M(\"operation-not-supported-in-this-environment\"));kk(a)&&b.o(c)})}):jk(b)}).m(function(){jk(b)})}};ek.prototype.unsubscribe=function(a){w(this.h,function(b){return b==a})};\nek.prototype.o=function(a){if(!a)throw new M(\"invalid-auth-event\");for(var b=!1,c=0;c<this.h.length;c++){var d=this.h[c];if(d.qb(a.b,a.c)){(b=this.b[a.b])&&b.h(a,d);b=!0;break}}lk(this.c);return b};var mk=new ze(2E3,1E4),nk=new ze(3E4,6E4);ek.prototype.da=function(){return this.c.da()};function ok(a,b,c,d,e,f){return a.a.xb(b,c,d,function(){a.f||(a.f=!0,a.a.va(a.j))},function(){a.reset()},e,f)}function kk(a){return a&&\"auth/cordova-not-ready\"==a.code?!0:!1}\nek.prototype.Ba=function(a,b,c){var d=this,e;return bk(this.g).then(function(){return d.a.Ba(a,b,c).m(function(a){if(kk(a))throw new M(\"operation-not-supported-in-this-environment\");e=a;return ck(d.g).then(function(){throw e;})}).then(function(){return d.a.Lb()?new z(function(){}):ck(d.g).then(function(){return d.da()}).then(function(){}).m(function(){})})})};ek.prototype.Da=function(a,b,c,d){return this.a.Da(c,function(c){a.ga(b,null,c,d)},mk.get())};var pk={};\nfunction qk(a,b,c){var d=b+\":\"+c;pk[d]||(pk[d]=new ek(a,b,c));return pk[d]}function fk(){this.b=null;this.f=[];this.c=[];this.a=null;this.g=!1}fk.prototype.reset=function(){this.b=null;this.a&&(this.a.cancel(),this.a=null)};\nfk.prototype.h=function(a,b){if(a){this.reset();this.g=!0;var c=a.b,d=a.c,e=a.a&&\"auth/web-storage-unsupported\"==a.a.code,f=a.a&&\"auth/operation-not-supported-in-this-environment\"==a.a.code;\"unknown\"!=c||e||f?a.a?(rk(this,!0,null,a.a),A()):b.wa(c,d)?sk(this,a,b):B(new M(\"invalid-auth-event\")):(rk(this,!1,null,null),A())}else B(new M(\"invalid-auth-event\"))};function lk(a){a.g||(a.g=!0,rk(a,!1,null,null))}\nfunction sk(a,b,c){c=c.wa(b.b,b.c);var d=b.f,e=b.g,f=!!b.b.match(/Redirect$/);c(d,e).then(function(b){rk(a,f,b,null)}).m(function(b){rk(a,f,null,b)})}function tk(a,b){a.b=function(){return B(b)};if(a.c.length)for(var c=0;c<a.c.length;c++)a.c[c](b)}function uk(a,b){a.b=function(){return A(b)};if(a.f.length)for(var c=0;c<a.f.length;c++)a.f[c](b)}function rk(a,b,c,d){b?d?tk(a,d):uk(a,c):uk(a,{user:null});a.f=[];a.c=[]}\nfk.prototype.da=function(){var a=this;return new z(function(b,c){a.b?a.b().then(b,c):(a.f.push(b),a.c.push(c),vk(a))})};function vk(a){var b=new M(\"timeout\");a.a&&a.a.cancel();a.a=Fc(nk.get()).then(function(){a.b||rk(a,!0,null,b)})}function gk(){}gk.prototype.h=function(a,b){if(a){var c=a.b,d=a.c;a.a?(b.ga(a.b,null,a.a,a.c),A()):b.wa(c,d)?wk(a,b):B(new M(\"invalid-auth-event\"))}else B(new M(\"invalid-auth-event\"))};\nfunction wk(a,b){var c=a.c,d=a.b;b.wa(d,c)(a.f,a.g).then(function(a){b.ga(d,a,null,c)}).m(function(a){b.ga(d,null,a,c)})};function xk(a,b){this.a=b;K(this,\"verificationId\",a)}xk.prototype.confirm=function(a){a=hg(this.verificationId,a);return this.a(a)};function yk(a,b,c,d){return(new fg(a)).Sa(b,c).then(function(a){return new xk(a,d)})};function zk(a){var b=pf(a);if(!(b&&b.exp&&b.auth_time&&b.iat))throw new M(\"internal-error\",\"An internal error occurred. The token obtained by Firebase appears to be malformed. Please retry the operation.\");L(this,{token:a,expirationTime:Ce(1E3*b.exp),authTime:Ce(1E3*b.auth_time),issuedAtTime:Ce(1E3*b.iat),signInProvider:b.firebase&&b.firebase.sign_in_provider?b.firebase.sign_in_provider:null,claims:b})};function Ak(a,b,c){this.h=a;this.j=b;this.g=c;this.c=3E4;this.f=96E4;this.b=null;this.a=this.c;if(this.f<this.c)throw Error(\"Proactive refresh lower bound greater than upper bound!\");}Ak.prototype.start=function(){this.a=this.c;Bk(this,!0)};function Ck(a,b){if(b)return a.a=a.c,a.g();b=a.a;a.a*=2;a.a>a.f&&(a.a=a.f);return b}function Bk(a,b){a.stop();a.b=Fc(Ck(a,b)).then(function(){return Be()}).then(function(){return a.h()}).then(function(){Bk(a,!0)}).m(function(b){a.j(b)&&Bk(a,!1)})}\nAk.prototype.stop=function(){this.b&&(this.b.cancel(),this.b=null)};function Dk(a){this.f=a;this.b=this.a=null;this.c=0}Dk.prototype.C=function(){return{apiKey:this.f.b,refreshToken:this.a,accessToken:this.b,expirationTime:this.c}};function Ek(a,b){var c=b[Gf],d=b.refreshToken;b=Fk(b.expiresIn);a.b=c;a.c=b;a.a=d}function Fk(a){return na()+1E3*parseInt(a,10)}\nfunction Gk(a,b){return Jh(a.f,b).then(function(b){a.b=b.access_token;a.c=Fk(b.expires_in);a.a=b.refresh_token;return{accessToken:a.b,expirationTime:a.c,refreshToken:a.a}}).m(function(b){\"auth/user-token-expired\"==b.code&&(a.a=null);throw b;})}Dk.prototype.getToken=function(a){a=!!a;return this.b&&!this.a?B(new M(\"user-token-expired\")):a||!this.b||na()>this.c-3E4?this.a?Gk(this,{grant_type:\"refresh_token\",refresh_token:this.a}):A(null):A({accessToken:this.b,expirationTime:this.c,refreshToken:this.a})};function Hk(a,b){this.a=a||null;this.b=b||null;L(this,{lastSignInTime:Ce(b||null),creationTime:Ce(a||null)})}function Ik(a){return new Hk(a.a,a.b)}Hk.prototype.C=function(){return{lastLoginAt:this.b,createdAt:this.a}};function Jk(a,b,c,d,e,f){L(this,{uid:a,displayName:d||null,photoURL:e||null,email:c||null,phoneNumber:f||null,providerId:b})}function Kk(a,b){D.call(this,a);for(var c in b)this[c]=b[c]}t(Kk,D);\nfunction Lk(a,b,c){this.D=[];this.G=a.apiKey;this.s=a.appName;this.B=a.authDomain||null;a=firebase.SDK_VERSION?oe(firebase.SDK_VERSION):null;this.b=new xh(this.G,ui(vi),a);this.h=new Dk(this.b);Mk(this,b[Gf]);Ek(this.h,b);K(this,\"refreshToken\",this.h.a);Nk(this,c||{});G.call(this);this.I=!1;this.B&&re()&&(this.a=qk(this.B,this.G,this.s));this.N=[];this.j=null;this.l=Ok(this);this.V=r(this.Ga,this);var d=this;this.ia=null;this.sa=function(a){d.na(a.g)};this.X=null;this.O=[];this.ra=function(a){Pk(d,\na.c)};this.W=null}t(Lk,G);Lk.prototype.na=function(a){this.ia=a;Dh(this.b,a)};Lk.prototype.ca=function(){return this.ia};function Qk(a,b){a.X&&F(a.X,\"languageCodeChanged\",a.sa);(a.X=b)&&pc(b,\"languageCodeChanged\",a.sa)}function Pk(a,b){a.O=b;Eh(a.b,firebase.SDK_VERSION?oe(firebase.SDK_VERSION,a.O):null)}Lk.prototype.Ka=function(){return Ia(this.O)};function Rk(a,b){a.W&&F(a.W,\"frameworkChanged\",a.ra);(a.W=b)&&pc(b,\"frameworkChanged\",a.ra)}Lk.prototype.Ga=function(){this.l.b&&(this.l.stop(),this.l.start())};\nfunction Sk(a){try{return firebase.app(a.s).auth()}catch(b){throw new M(\"internal-error\",\"No firebase.auth.Auth instance is available for the Firebase App '\"+a.s+\"'!\");}}function Ok(a){return new Ak(function(){return a.F(!0)},function(a){return a&&\"auth/network-request-failed\"==a.code?!0:!1},function(){var b=a.h.c-na()-3E5;return 0<b?b:0})}function Tk(a){a.o||a.l.b||(a.l.start(),F(a,\"tokenChanged\",a.V),pc(a,\"tokenChanged\",a.V))}function Uk(a){F(a,\"tokenChanged\",a.V);a.l.stop()}\nfunction Mk(a,b){a.qa=b;K(a,\"_lat\",b)}function Vk(a,b){w(a.N,function(a){return a==b})}function Wk(a){for(var b=[],c=0;c<a.N.length;c++)b.push(a.N[c](a));return ub(b).then(function(){return a})}function Xk(a){a.a&&!a.I&&(a.I=!0,a.a.subscribe(a))}\nfunction Nk(a,b){L(a,{uid:b.uid,displayName:b.displayName||null,photoURL:b.photoURL||null,email:b.email||null,emailVerified:b.emailVerified||!1,phoneNumber:b.phoneNumber||null,isAnonymous:b.isAnonymous||!1,metadata:new Hk(b.createdAt,b.lastLoginAt),providerData:[]})}K(Lk.prototype,\"providerId\",\"firebase\");function Yk(){}function Zk(a){return A().then(function(){if(a.o)throw new M(\"app-deleted\");})}function $k(a){return Ba(a.providerData,function(a){return a.providerId})}\nfunction al(a,b){b&&(bl(a,b.providerId),a.providerData.push(b))}function bl(a,b){w(a.providerData,function(a){return a.providerId==b})}function cl(a,b,c){(\"uid\"!=b||c)&&a.hasOwnProperty(b)&&K(a,b,c)}\nfunction dl(a,b){a!=b&&(L(a,{uid:b.uid,displayName:b.displayName,photoURL:b.photoURL,email:b.email,emailVerified:b.emailVerified,phoneNumber:b.phoneNumber,isAnonymous:b.isAnonymous,providerData:[]}),b.metadata?K(a,\"metadata\",Ik(b.metadata)):K(a,\"metadata\",new Hk),v(b.providerData,function(b){al(a,b)}),a.h=b.h,K(a,\"refreshToken\",a.h.a))}g=Lk.prototype;g.reload=function(){var a=this;return R(this,Zk(this).then(function(){return el(a).then(function(){return Wk(a)}).then(Yk)}))};\nfunction el(a){return a.F().then(function(b){var c=a.isAnonymous;return fl(a,b).then(function(){c||cl(a,\"isAnonymous\",!1);return b})})}g.ac=function(a){return this.F(a).then(function(a){return new zk(a)})};g.F=function(a){var b=this;return R(this,Zk(this).then(function(){return b.h.getToken(a)}).then(function(a){if(!a)throw new M(\"internal-error\");a.accessToken!=b.qa&&(Mk(b,a.accessToken),b.dispatchEvent(new Kk(\"tokenChanged\")));cl(b,\"refreshToken\",a.refreshToken);return a.accessToken}))};\ng.getToken=function(a){Ee[\"firebase.User.prototype.getToken is deprecated. Please use firebase.User.prototype.getIdToken instead.\"]||(Ee[\"firebase.User.prototype.getToken is deprecated. Please use firebase.User.prototype.getIdToken instead.\"]=!0,\"undefined\"!==typeof console&&\"function\"===typeof console.warn&&console.warn(\"firebase.User.prototype.getToken is deprecated. Please use firebase.User.prototype.getIdToken instead.\"));return this.F(a)};\nfunction gl(a,b){b[Gf]&&a.qa!=b[Gf]&&(Ek(a.h,b),a.dispatchEvent(new Kk(\"tokenChanged\")),Mk(a,b[Gf]),cl(a,\"refreshToken\",a.h.a))}function fl(a,b){return P(a.b,qi,{idToken:b}).then(r(a.uc,a))}\ng.uc=function(a){a=a.users;if(!a||!a.length)throw new M(\"internal-error\");a=a[0];Nk(this,{uid:a.localId,displayName:a.displayName,photoURL:a.photoUrl,email:a.email,emailVerified:!!a.emailVerified,phoneNumber:a.phoneNumber,lastLoginAt:a.lastLoginAt,createdAt:a.createdAt});for(var b=hl(a),c=0;c<b.length;c++)al(this,b[c]);cl(this,\"isAnonymous\",!(this.email&&a.passwordHash)&&!(this.providerData&&this.providerData.length))};\nfunction hl(a){return(a=a.providerUserInfo)&&a.length?Ba(a,function(a){return new Jk(a.rawId,a.providerId,a.email,a.displayName,a.photoUrl,a.phoneNumber)}):[]}g.bb=function(a){var b=this,c=null;return R(this,a.f(this.b,this.uid).then(function(a){gl(b,a);c=il(b,a,\"reauthenticate\");b.j=null;return b.reload()}).then(function(){return c}),!0)};g.vc=function(a){return this.bb(a).then(function(){})};\nfunction jl(a,b){return el(a).then(function(){if(Fa($k(a),b))return Wk(a).then(function(){throw new M(\"provider-already-linked\");})})}g.$a=function(a){var b=this,c=null;return R(this,jl(this,a.providerId).then(function(){return b.F()}).then(function(c){return a.c(b.b,c)}).then(function(a){c=il(b,a,\"link\");return kl(b,a)}).then(function(){return c}))};g.mc=function(a){return this.$a(a).then(function(a){return a.user})};\ng.nc=function(a,b){var c=this;return R(this,jl(this,\"phone\").then(function(){return yk(Sk(c),a,b,r(c.$a,c))}))};g.wc=function(a,b){var c=this;return R(this,A().then(function(){return yk(Sk(c),a,b,r(c.bb,c))}),!0)};function il(a,b,c){var d=ig(b);b=uf(b);return He({user:a,credential:d,additionalUserInfo:b,operationType:c})}function kl(a,b){gl(a,b);return a.reload().then(function(){return a})}\ng.mb=function(a){var b=this;return R(this,this.F().then(function(c){return b.b.mb(c,a)}).then(function(a){gl(b,a);return b.reload()}))};g.Nc=function(a){var b=this;return R(this,this.F().then(function(c){return a.c(b.b,c)}).then(function(a){gl(b,a);return b.reload()}))};g.nb=function(a){var b=this;return R(this,this.F().then(function(c){return b.b.nb(c,a)}).then(function(a){gl(b,a);return b.reload()}))};\ng.ob=function(a){if(void 0===a.displayName&&void 0===a.photoURL)return Zk(this);var b=this;return R(this,this.F().then(function(c){return b.b.ob(c,{displayName:a.displayName,photoUrl:a.photoURL})}).then(function(a){gl(b,a);cl(b,\"displayName\",a.displayName||null);cl(b,\"photoURL\",a.photoUrl||null);v(b.providerData,function(a){\"password\"===a.providerId&&(K(a,\"displayName\",b.displayName),K(a,\"photoURL\",b.photoURL))});return Wk(b)}).then(Yk))};\ng.Mc=function(a){var b=this;return R(this,el(this).then(function(c){return Fa($k(b),a)?ci(b.b,c,[a]).then(function(a){var c={};v(a.providerUserInfo||[],function(a){c[a.providerId]=!0});v($k(b),function(a){c[a]||bl(b,a)});c[fg.PROVIDER_ID]||K(b,\"phoneNumber\",null);return Wk(b)}):Wk(b).then(function(){throw new M(\"no-such-provider\");})}))};\ng.delete=function(){var a=this;return R(this,this.F().then(function(b){return P(a.b,pi,{idToken:b})}).then(function(){a.dispatchEvent(new Kk(\"userDeleted\"))})).then(function(){for(var b=0;b<a.D.length;b++)a.D[b].cancel(\"app-deleted\");Qk(a,null);Rk(a,null);a.D=[];a.o=!0;Uk(a);K(a,\"refreshToken\",null);a.a&&a.a.unsubscribe(a)})};\ng.qb=function(a,b){return\"linkViaPopup\"==a&&(this.g||null)==b&&this.f||\"reauthViaPopup\"==a&&(this.g||null)==b&&this.f||\"linkViaRedirect\"==a&&(this.$||null)==b||\"reauthViaRedirect\"==a&&(this.$||null)==b?!0:!1};g.ga=function(a,b,c,d){\"linkViaPopup\"!=a&&\"reauthViaPopup\"!=a||d!=(this.g||null)||(c&&this.v?this.v(c):b&&!c&&this.f&&this.f(b),this.c&&(this.c.cancel(),this.c=null),delete this.f,delete this.v)};\ng.wa=function(a,b){return\"linkViaPopup\"==a&&b==(this.g||null)?r(this.vb,this):\"reauthViaPopup\"==a&&b==(this.g||null)?r(this.wb,this):\"linkViaRedirect\"==a&&(this.$||null)==b?r(this.vb,this):\"reauthViaRedirect\"==a&&(this.$||null)==b?r(this.wb,this):null};g.oc=function(a){var b=this;return ll(this,\"linkViaPopup\",a,function(){return jl(b,a.providerId).then(function(){return Wk(b)})},!1)};g.xc=function(a){return ll(this,\"reauthViaPopup\",a,function(){return A()},!0)};\nfunction ll(a,b,c,d,e){if(!re())return B(new M(\"operation-not-supported-in-this-environment\"));if(a.j&&!e)return B(a.j);var f=tf(c.providerId),h=qe(a.uid+\":::\"),m=null;(!te()||je())&&a.B&&c.isOAuthProvider&&(m=Oi(a.B,a.G,a.s,b,c,null,h,firebase.SDK_VERSION||null));var p=be(m,f&&f.Aa,f&&f.za);d=d().then(function(){ml(a);if(!e)return a.F().then(function(){})}).then(function(){return ok(a.a,p,b,c,h,!!m)}).then(function(){return new z(function(c,d){a.ga(b,null,new M(\"cancelled-popup-request\"),a.g||null);\na.f=c;a.v=d;a.g=h;a.c=a.a.Da(a,b,p,h)})}).then(function(a){p&&ae(p);return a?He(a):null}).m(function(a){p&&ae(p);throw a;});return R(a,d,e)}g.pc=function(a){var b=this;return nl(this,\"linkViaRedirect\",a,function(){return jl(b,a.providerId)},!1)};g.yc=function(a){return nl(this,\"reauthViaRedirect\",a,function(){return A()},!0)};\nfunction nl(a,b,c,d,e){if(!re())return B(new M(\"operation-not-supported-in-this-environment\"));if(a.j&&!e)return B(a.j);var f=null,h=qe(a.uid+\":::\");d=d().then(function(){ml(a);if(!e)return a.F().then(function(){})}).then(function(){a.$=h;return Wk(a)}).then(function(b){a.fa&&(b=a.fa,b=b.b.set(ol,a.C(),b.a));return b}).then(function(){return a.a.Ba(b,c,h)}).m(function(b){f=b;if(a.fa)return pl(a.fa);throw f;}).then(function(){if(f)throw f;});return R(a,d,e)}\nfunction ml(a){if(!a.a||!a.I){if(a.a&&!a.I)throw new M(\"internal-error\");throw new M(\"auth-domain-config-required\");}}g.vb=function(a,b){var c=this;this.c&&(this.c.cancel(),this.c=null);var d=null,e=this.F().then(function(d){return Kf(c.b,{requestUri:a,sessionId:b,idToken:d})}).then(function(a){d=il(c,a,\"link\");return kl(c,a)}).then(function(){return d});return R(this,e)};\ng.wb=function(a,b){var c=this;this.c&&(this.c.cancel(),this.c=null);var d=null,e=A().then(function(){return Ff(Lf(c.b,{requestUri:a,sessionId:b}),c.uid)}).then(function(a){d=il(c,a,\"reauthenticate\");gl(c,a);c.j=null;return c.reload()}).then(function(){return d});return R(this,e,!0)};g.fb=function(a){var b=this,c=null;return R(this,this.F().then(function(b){c=b;return\"undefined\"===typeof a||Ya(a)?{}:ff(new Xe(a))}).then(function(a){return b.b.fb(c,a)}).then(function(a){if(b.email!=a)return b.reload()}).then(function(){}))};\nfunction R(a,b,c){var d=ql(a,b,c);a.D.push(d);d.ha(function(){Ga(a.D,d)});return d}function ql(a,b,c){return a.j&&!c?(b.cancel(),B(a.j)):b.m(function(b){!b||\"auth/user-disabled\"!=b.code&&\"auth/user-token-expired\"!=b.code||(a.j||a.dispatchEvent(new Kk(\"userInvalidated\")),a.j=b);throw b;})}g.toJSON=function(){return this.C()};\ng.C=function(){var a={uid:this.uid,displayName:this.displayName,photoURL:this.photoURL,email:this.email,emailVerified:this.emailVerified,phoneNumber:this.phoneNumber,isAnonymous:this.isAnonymous,providerData:[],apiKey:this.G,appName:this.s,authDomain:this.B,stsTokenManager:this.h.C(),redirectEventId:this.$||null};this.metadata&&ab(a,this.metadata.C());v(this.providerData,function(b){a.providerData.push(Ie(b))});return a};\nfunction rl(a){if(!a.apiKey)return null;var b={apiKey:a.apiKey,authDomain:a.authDomain,appName:a.appName},c={};if(a.stsTokenManager&&a.stsTokenManager.accessToken&&a.stsTokenManager.expirationTime)c[Gf]=a.stsTokenManager.accessToken,c.refreshToken=a.stsTokenManager.refreshToken||null,c.expiresIn=(a.stsTokenManager.expirationTime-na())/1E3;else return null;var d=new Lk(b,c,a);a.providerData&&v(a.providerData,function(a){a&&al(d,He(a))});a.redirectEventId&&(d.$=a.redirectEventId);return d}\nfunction sl(a,b,c,d){var e=new Lk(a,b);c&&(e.fa=c);d&&Pk(e,d);return e.reload().then(function(){return e})};function tl(a){this.a=a;this.b=sj()}var ol={name:\"redirectUser\",w:\"session\"};function pl(a){return wj(a.b,ol,a.a)}function ul(a,b){return a.b.get(ol,a.a).then(function(a){a&&b&&(a.authDomain=b);return rl(a||{})})};function vl(a){this.a=a;this.b=sj();this.c=null;this.f=wl(this);this.b.addListener(xl(\"local\"),this.a,r(this.g,this))}vl.prototype.g=function(){var a=this,b=xl(\"local\");yl(this,function(){return A().then(function(){return a.c&&\"local\"!=a.c.w?a.b.get(b,a.a):null}).then(function(c){if(c)return zl(a,\"local\").then(function(){a.c=b})})})};function zl(a,b){var c=[],d;for(d in oj)oj[d]!==b&&c.push(wj(a.b,xl(oj[d]),a.a));c.push(wj(a.b,Al,a.a));return tb(c)}\nfunction wl(a){var b=xl(\"local\"),c=xl(\"session\"),d=xl(\"none\");return vj(a.b,b,a.a).then(function(){return a.b.get(c,a.a)}).then(function(e){return e?c:a.b.get(d,a.a).then(function(c){return c?d:a.b.get(b,a.a).then(function(c){return c?b:a.b.get(Al,a.a).then(function(a){return a?xl(a):b})})})}).then(function(b){a.c=b;return zl(a,b.w)}).m(function(){a.c||(a.c=b)})}var Al={name:\"persistence\",w:\"session\"};function xl(a){return{name:\"authUser\",w:a}}\nvl.prototype.ib=function(a){var b=null,c=this;pj(a);return yl(this,function(){return a!=c.c.w?c.b.get(c.c,c.a).then(function(d){b=d;return zl(c,a)}).then(function(){c.c=xl(a);if(b)return c.b.set(c.c,b,c.a)}):A()})};function Bl(a){return yl(a,function(){return a.b.set(Al,a.c.w,a.a)})}function Cl(a,b){return yl(a,function(){return a.b.set(a.c,b.C(),a.a)})}function Dl(a){return yl(a,function(){return wj(a.b,a.c,a.a)})}\nfunction Fl(a,b){return yl(a,function(){return a.b.get(a.c,a.a).then(function(a){a&&b&&(a.authDomain=b);return rl(a||{})})})}function yl(a,b){a.f=a.f.then(b,b);return a.f};function Gl(a){this.l=!1;K(this,\"app\",a);if(S(this).options&&S(this).options.apiKey)a=firebase.SDK_VERSION?oe(firebase.SDK_VERSION):null,this.b=new xh(S(this).options&&S(this).options.apiKey,ui(vi),a);else throw new M(\"invalid-api-key\");this.N=[];this.o=[];this.I=[];this.Ob=firebase.INTERNAL.createSubscribe(r(this.ic,this));this.O=void 0;this.Pb=firebase.INTERNAL.createSubscribe(r(this.jc,this));Hl(this,null);this.h=new vl(S(this).options.apiKey+\":\"+S(this).name);this.G=new tl(S(this).options.apiKey+\n\":\"+S(this).name);this.V=T(this,Il(this));this.j=T(this,Jl(this));this.X=!1;this.ia=r(this.Ic,this);this.Ga=r(this.ka,this);this.qa=r(this.Yb,this);this.ra=r(this.gc,this);this.sa=r(this.hc,this);Kl(this);this.INTERNAL={};this.INTERNAL[\"delete\"]=r(this.delete,this);this.INTERNAL.logFramework=r(this.qc,this);this.s=0;G.call(this);Ll(this);this.D=[]}t(Gl,G);function Ml(a){D.call(this,\"languageCodeChanged\");this.g=a}t(Ml,D);function Nl(a){D.call(this,\"frameworkChanged\");this.c=a}t(Nl,D);g=Gl.prototype;\ng.ib=function(a){a=this.h.ib(a);return T(this,a)};g.na=function(a){this.W===a||this.l||(this.W=a,Dh(this.b,this.W),this.dispatchEvent(new Ml(this.ca())))};g.ca=function(){return this.W};g.Oc=function(){var a=k.navigator;this.na(a?a.languages&&a.languages[0]||a.language||a.userLanguage||null:null)};g.qc=function(a){this.D.push(a);Eh(this.b,firebase.SDK_VERSION?oe(firebase.SDK_VERSION,this.D):null);this.dispatchEvent(new Nl(this.D))};g.Ka=function(){return Ia(this.D)};\nfunction Ll(a){Object.defineProperty(a,\"lc\",{get:function(){return this.ca()},set:function(a){this.na(a)},enumerable:!1});a.W=null}g.toJSON=function(){return{apiKey:S(this).options.apiKey,authDomain:S(this).options.authDomain,appName:S(this).name,currentUser:U(this)&&U(this).C()}};function Ol(a){return a.Nb||B(new M(\"auth-domain-config-required\"))}\nfunction Kl(a){var b=S(a).options.authDomain,c=S(a).options.apiKey;b&&re()&&(a.Nb=a.V.then(function(){if(!a.l){a.a=qk(b,c,S(a).name);a.a.subscribe(a);U(a)&&Xk(U(a));if(a.B){Xk(a.B);var d=a.B;d.na(a.ca());Qk(d,a);d=a.B;Pk(d,a.D);Rk(d,a);a.B=null}return a.a}}))}g.qb=function(a,b){switch(a){case \"unknown\":case \"signInViaRedirect\":return!0;case \"signInViaPopup\":return this.g==b&&!!this.f;default:return!1}};\ng.ga=function(a,b,c,d){\"signInViaPopup\"==a&&this.g==d&&(c&&this.v?this.v(c):b&&!c&&this.f&&this.f(b),this.c&&(this.c.cancel(),this.c=null),delete this.f,delete this.v)};g.wa=function(a,b){return\"signInViaRedirect\"==a||\"signInViaPopup\"==a&&this.g==b&&this.f?r(this.Xb,this):null};\ng.Xb=function(a,b){var c=this;a={requestUri:a,sessionId:b};this.c&&(this.c.cancel(),this.c=null);var d=null,e=null,f=If(c.b,a).then(function(a){d=ig(a);e=uf(a);return a});a=c.V.then(function(){return f}).then(function(a){return Pl(c,a)}).then(function(){return He({user:U(c),credential:d,additionalUserInfo:e,operationType:\"signIn\"})});return T(this,a)};\ng.Gc=function(a){if(!re())return B(new M(\"operation-not-supported-in-this-environment\"));var b=this,c=tf(a.providerId),d=qe(),e=null;(!te()||je())&&S(this).options.authDomain&&a.isOAuthProvider&&(e=Oi(S(this).options.authDomain,S(this).options.apiKey,S(this).name,\"signInViaPopup\",a,null,d,firebase.SDK_VERSION||null));var f=be(e,c&&c.Aa,c&&c.za);c=Ol(this).then(function(b){return ok(b,f,\"signInViaPopup\",a,d,!!e)}).then(function(){return new z(function(a,c){b.ga(\"signInViaPopup\",null,new M(\"cancelled-popup-request\"),\nb.g);b.f=a;b.v=c;b.g=d;b.c=b.a.Da(b,\"signInViaPopup\",f,d)})}).then(function(a){f&&ae(f);return a?He(a):null}).m(function(a){f&&ae(f);throw a;});return T(this,c)};g.Hc=function(a){if(!re())return B(new M(\"operation-not-supported-in-this-environment\"));var b=this,c=Ol(this).then(function(){return Bl(b.h)}).then(function(){return b.a.Ba(\"signInViaRedirect\",a)});return T(this,c)};\ng.da=function(){if(!re())return B(new M(\"operation-not-supported-in-this-environment\"));var a=this,b=Ol(this).then(function(){return a.a.da()}).then(function(a){return a?He(a):null});return T(this,b)};function Pl(a,b){var c={};c.apiKey=S(a).options.apiKey;c.authDomain=S(a).options.authDomain;c.appName=S(a).name;return a.V.then(function(){return sl(c,b,a.G,a.Ka())}).then(function(b){if(U(a)&&b.uid==U(a).uid)return dl(U(a),b),a.ka(b);Hl(a,b);Xk(b);return a.ka(b)}).then(function(){Ql(a)})}\nfunction Hl(a,b){U(a)&&(Vk(U(a),a.Ga),F(U(a),\"tokenChanged\",a.qa),F(U(a),\"userDeleted\",a.ra),F(U(a),\"userInvalidated\",a.sa),Uk(U(a)));b&&(b.N.push(a.Ga),pc(b,\"tokenChanged\",a.qa),pc(b,\"userDeleted\",a.ra),pc(b,\"userInvalidated\",a.sa),0<a.s&&Tk(b));K(a,\"currentUser\",b);b&&(b.na(a.ca()),Qk(b,a),Pk(b,a.D),Rk(b,a))}g.kb=function(){var a=this,b=this.j.then(function(){if(!U(a))return A();Hl(a,null);return Dl(a.h).then(function(){Ql(a)})});return T(this,b)};\nfunction Rl(a){var b=ul(a.G,S(a).options.authDomain).then(function(b){if(a.B=b)b.fa=a.G;return pl(a.G)});return T(a,b)}function Il(a){var b=S(a).options.authDomain,c=Rl(a).then(function(){return Fl(a.h,b)}).then(function(b){return b?(b.fa=a.G,a.B&&(a.B.$||null)==(b.$||null)?b:b.reload().then(function(){return Cl(a.h,b).then(function(){return b})}).m(function(c){return\"auth/network-request-failed\"==c.code?b:Dl(a.h)})):null}).then(function(b){Hl(a,b||null)});return T(a,c)}\nfunction Jl(a){return a.V.then(function(){return a.da()}).m(function(){}).then(function(){if(!a.l)return a.ia()}).m(function(){}).then(function(){if(!a.l){a.X=!0;var b=a.h;b.b.addListener(xl(\"local\"),b.a,a.ia)}})}\ng.Ic=function(){var a=this;return Fl(this.h,S(this).options.authDomain).then(function(b){if(!a.l){var c;if(c=U(a)&&b){c=U(a).uid;var d=b.uid;c=void 0===c||null===c||\"\"===c||void 0===d||null===d||\"\"===d?!1:c==d}if(c)return dl(U(a),b),U(a).F();if(U(a)||b)Hl(a,b),b&&(Xk(b),b.fa=a.G),a.a&&a.a.subscribe(a),Ql(a)}})};g.ka=function(a){return Cl(this.h,a)};g.Yb=function(){Ql(this);this.ka(U(this))};g.gc=function(){this.kb()};g.hc=function(){this.kb()};\nfunction Sl(a,b){var c=null,d=null;return T(a,b.then(function(b){c=ig(b);d=uf(b);return Pl(a,b)}).then(function(){return He({user:U(a),credential:c,additionalUserInfo:d,operationType:\"signIn\"})}))}g.ic=function(a){var b=this;this.addAuthTokenListener(function(){a.next(U(b))})};g.jc=function(a){var b=this;Tl(this,function(){a.next(U(b))})};g.sc=function(a,b,c){var d=this;this.X&&firebase.Promise.resolve().then(function(){n(a)?a(U(d)):n(a.next)&&a.next(U(d))});return this.Ob(a,b,c)};\ng.rc=function(a,b,c){var d=this;this.X&&firebase.Promise.resolve().then(function(){d.O=d.getUid();n(a)?a(U(d)):n(a.next)&&a.next(U(d))});return this.Pb(a,b,c)};g.$b=function(a){var b=this,c=this.j.then(function(){return U(b)?U(b).F(a).then(function(a){return{accessToken:a}}):null});return T(this,c)};g.Cc=function(a){return this.Hb(a).then(function(a){return a.user})};\ng.Hb=function(a){var b=this;return this.j.then(function(){return Sl(b,P(b.b,si,{token:a}))}).then(function(a){var c=a.user;cl(c,\"isAnonymous\",!1);b.ka(c);return a})};g.Ib=function(a,b){var c=this;return this.j.then(function(){return Sl(c,P(c.b,Xf,{email:a,password:b}))})};g.Dc=function(a,b){return this.Ib(a,b).then(function(a){return a.user})};g.Sb=function(a,b){return this.sb(a,b).then(function(a){return a.user})};\ng.sb=function(a,b){var c=this;return this.j.then(function(){return Sl(c,P(c.b,oi,{email:a,password:b}))})};g.Bc=function(a){return this.Oa(a).then(function(a){return a.user})};g.Oa=function(a){var b=this;return this.j.then(function(){return Sl(b,a.xa(b.b))})};g.jb=function(){return this.Jb().then(function(a){return a.user})};\ng.Jb=function(){var a=this;return this.j.then(function(){var b=U(a);if(b&&b.isAnonymous){var c=He({providerId:null,isNewUser:!1});return He({user:b,credential:null,additionalUserInfo:c,operationType:\"signIn\"})}return Sl(a,a.b.jb()).then(function(b){var c=b.user;cl(c,\"isAnonymous\",!0);a.ka(c);return b})})};function S(a){return a.app}function U(a){return a.currentUser}g.getUid=function(){return U(this)&&U(this).uid||null};function Ul(a){return U(a)&&U(a)._lat||null}\nfunction Ql(a){if(a.X){for(var b=0;b<a.o.length;b++)if(a.o[b])a.o[b](Ul(a));if(a.O!==a.getUid()&&a.I.length)for(a.O=a.getUid(),b=0;b<a.I.length;b++)if(a.I[b])a.I[b](Ul(a))}}g.Qb=function(a){this.addAuthTokenListener(a);this.s++;0<this.s&&U(this)&&Tk(U(this))};g.zc=function(a){var b=this;v(this.o,function(c){c==a&&b.s--});0>this.s&&(this.s=0);0==this.s&&U(this)&&Uk(U(this));this.removeAuthTokenListener(a)};\ng.addAuthTokenListener=function(a){var b=this;this.o.push(a);T(this,this.j.then(function(){b.l||Fa(b.o,a)&&a(Ul(b))}))};g.removeAuthTokenListener=function(a){w(this.o,function(b){return b==a})};function Tl(a,b){a.I.push(b);T(a,a.j.then(function(){!a.l&&Fa(a.I,b)&&a.O!==a.getUid()&&(a.O=a.getUid(),b(Ul(a)))}))}\ng.delete=function(){this.l=!0;for(var a=0;a<this.N.length;a++)this.N[a].cancel(\"app-deleted\");this.N=[];this.h&&(a=this.h,a.b.removeListener(xl(\"local\"),a.a,this.ia));this.a&&this.a.unsubscribe(this);return firebase.Promise.resolve()};function T(a,b){a.N.push(b);b.ha(function(){Ga(a.N,b)});return b}g.Vb=function(a){return T(this,Oh(this.b,a))};g.Wb=function(a){return T(this,Qh(this.b,a))};g.kc=function(a){return!!ag(a)};\ng.hb=function(a,b){var c=this;return T(this,A().then(function(){var a=new Xe(b);if(!a.c)throw new M(\"argument-error\",ef+\" must be true when sending sign in link to email\");return ff(a)}).then(function(b){return c.b.hb(a,b)}).then(function(){}))};g.Pc=function(a){return this.Ia(a).then(function(a){return a.data.email})};g.Wa=function(a,b){return T(this,this.b.Wa(a,b).then(function(){}))};g.Ia=function(a){return T(this,this.b.Ia(a).then(function(a){return new Le(a)}))};\ng.Ua=function(a){return T(this,this.b.Ua(a).then(function(){}))};g.gb=function(a,b){var c=this;return T(this,A().then(function(){return\"undefined\"===typeof b||Ya(b)?{}:ff(new Xe(b))}).then(function(b){return c.b.gb(a,b)}).then(function(){}))};g.Fc=function(a,b){return T(this,yk(this,a,b,r(this.Oa,this)))};g.Ec=function(a,b){var c=this;return T(this,A().then(function(){var d=$f(a,b||Ud());return c.Oa(d)}))};function Vl(a,b,c,d,e,f){K(this,\"type\",\"recaptcha\");this.b=this.c=null;this.o=!1;this.l=b;this.a=c||{theme:\"light\",type:\"image\"};this.g=[];if(this.a[Wl])throw new M(\"argument-error\",\"sitekey should not be provided for reCAPTCHA as one is automatically provisioned for the current project.\");this.h=\"invisible\"===this.a[Xl];if(!k.document)throw new M(\"operation-not-supported-in-this-environment\",\"RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment with DOM support.\");if(!Hd(b)||!this.h&&\nHd(b).hasChildNodes())throw new M(\"argument-error\",\"reCAPTCHA container is either not found or already contains inner elements!\");this.u=new xh(a,f||null,e||null);this.s=d||function(){return null};var h=this;this.j=[];var m=this.a[Yl];this.a[Yl]=function(a){Zl(h,a);if(\"function\"===typeof m)m(a);else if(\"string\"===typeof m){var b=J(m,k);\"function\"===typeof b&&b(a)}};var p=this.a[$l];this.a[$l]=function(){Zl(h,null);if(\"function\"===typeof p)p();else if(\"string\"===typeof p){var a=J(p,k);\"function\"===\ntypeof a&&a()}}}var Yl=\"callback\",$l=\"expired-callback\",Wl=\"sitekey\",Xl=\"size\";function Zl(a,b){for(var c=0;c<a.j.length;c++)try{a.j[c](b)}catch(d){}}function am(a,b){w(a.j,function(a){return a==b})}function bm(a,b){a.g.push(b);b.ha(function(){Ga(a.g,b)});return b}g=Vl.prototype;\ng.ya=function(){var a=this;return this.c?this.c:this.c=bm(this,A().then(function(){if(se()&&!ke())return fe();throw new M(\"operation-not-supported-in-this-environment\",\"RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment.\");}).then(function(){return cm(dm(),a.s())}).then(function(){return P(a.u,ri,{})}).then(function(b){a.a[Wl]=b.recaptchaSiteKey}).m(function(b){a.c=null;throw b;}))};\ng.render=function(){em(this);var a=this;return bm(this,this.ya().then(function(){if(null===a.b){var b=a.l;if(!a.h){var c=Hd(b);b=Kd(\"DIV\");c.appendChild(b)}a.b=grecaptcha.render(b,a.a)}return a.b}))};g.verify=function(){em(this);var a=this;return bm(this,this.render().then(function(b){return new z(function(c){var d=grecaptcha.getResponse(b);if(d)c(d);else{var e=function(b){b&&(am(a,e),c(b))};a.j.push(e);a.h&&grecaptcha.execute(a.b)}})}))};g.reset=function(){em(this);null!==this.b&&grecaptcha.reset(this.b)};\nfunction em(a){if(a.o)throw new M(\"internal-error\",\"RecaptchaVerifier instance has been destroyed.\");}g.clear=function(){em(this);this.o=!0;dm().b--;for(var a=0;a<this.g.length;a++)this.g[a].cancel(\"RecaptchaVerifier instance has been destroyed.\");if(!this.h){a=Hd(this.l);for(var b;b=a.firstChild;)a.removeChild(b)}};var fm=pd(\"https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit&hl=%{hl}\");\nfunction gm(){this.b=k.grecaptcha?Infinity:0;this.c=null;this.a=\"__rcb\"+Math.floor(1E6*Math.random()).toString()}var hm=new ze(3E4,6E4);\nfunction cm(a,b){return new z(function(c,d){var e=setTimeout(function(){d(new M(\"network-request-failed\"))},hm.get());if(!k.grecaptcha||b!==a.c&&!a.b){k[a.a]=function(){if(k.grecaptcha){a.c=b;var f=k.grecaptcha.render;k.grecaptcha.render=function(b,c){b=f(b,c);a.b++;return b};clearTimeout(e);c()}else clearTimeout(e),d(new M(\"internal-error\"));delete k[a.a]};var f=td(fm,{onload:a.a,hl:b||\"\"});A(ph(f)).m(function(){clearTimeout(e);d(new M(\"internal-error\",\"Unable to load external reCAPTCHA dependencies!\"))})}else clearTimeout(e),\nc()})}var im=null;function dm(){im||(im=new gm);return im}\nfunction jm(a,b,c){try{this.f=c||firebase.app()}catch(f){throw new M(\"argument-error\",\"No firebase.app.App instance is currently initialized.\");}if(this.f.options&&this.f.options.apiKey)c=this.f.options.apiKey;else throw new M(\"invalid-api-key\");var d=this,e=null;try{e=this.f.auth().Ka()}catch(f){}e=firebase.SDK_VERSION?oe(firebase.SDK_VERSION,e):null;Vl.call(this,c,a,b,function(){try{var a=d.f.auth().ca()}catch(h){a=null}return a},e,ui(vi))}t(jm,Vl);function km(a,b,c,d){a:{c=Array.prototype.slice.call(c);var e=0;for(var f=!1,h=0;h<b.length;h++)if(b[h].optional)f=!0;else{if(f)throw new M(\"internal-error\",\"Argument validator encountered a required argument after an optional argument.\");e++}f=b.length;if(c.length<e||f<c.length)d=\"Expected \"+(e==f?1==e?\"1 argument\":e+\" arguments\":e+\"-\"+f+\" arguments\")+\" but got \"+c.length+\".\";else{for(e=0;e<c.length;e++)if(f=b[e].optional&&void 0===c[e],!b[e].M(c[e])&&!f){b=b[e];if(0>e||e>=lm.length)throw new M(\"internal-error\",\n\"Argument validator received an unsupported number of arguments.\");c=lm[e];d=(d?\"\":c+\" argument \")+(b.name?'\"'+b.name+'\" ':\"\")+\"must be \"+b.K+\".\";break a}d=null}}if(d)throw new M(\"argument-error\",a+\" failed: \"+d);}var lm=\"First Second Third Fourth Fifth Sixth Seventh Eighth Ninth\".split(\" \");function V(a,b){return{name:a||\"\",K:\"a valid string\",optional:!!b,M:l}}function mm(){return{name:\"opt_forceRefresh\",K:\"a boolean\",optional:!0,M:ba}}\nfunction W(a,b){return{name:a||\"\",K:\"a valid object\",optional:!!b,M:q}}function nm(a,b){return{name:a||\"\",K:\"a function\",optional:!!b,M:n}}function om(a,b){return{name:a||\"\",K:\"null\",optional:!!b,M:ea}}function pm(){return{name:\"\",K:\"an HTML element\",optional:!1,M:function(a){return!!(a&&a instanceof Element)}}}function qm(){return{name:\"auth\",K:\"an instance of Firebase Auth\",optional:!0,M:function(a){return!!(a&&a instanceof Gl)}}}\nfunction rm(){return{name:\"app\",K:\"an instance of Firebase App\",optional:!0,M:function(a){return!!(a&&a instanceof firebase.app.App)}}}function sm(a){return{name:a?a+\"Credential\":\"credential\",K:a?\"a valid \"+a+\" credential\":\"a valid credential\",optional:!1,M:function(b){if(!b)return!1;var c=!a||b.providerId===a;return!(!b.xa||!c)}}}\nfunction tm(){return{name:\"authProvider\",K:\"a valid Auth provider\",optional:!1,M:function(a){return!!(a&&a.providerId&&a.hasOwnProperty&&a.hasOwnProperty(\"isOAuthProvider\"))}}}function um(){return{name:\"applicationVerifier\",K:\"an implementation of firebase.auth.ApplicationVerifier\",optional:!1,M:function(a){return!!(a&&l(a.type)&&n(a.verify))}}}function X(a,b,c,d){return{name:c||\"\",K:a.K+\" or \"+b.K,optional:!!d,M:function(c){return a.M(c)||b.M(c)}}};function Y(a,b){for(var c in b){var d=b[c].name;a[d]=vm(d,a[c],b[c].i)}}function Z(a,b,c,d){a[b]=vm(b,c,d)}function vm(a,b,c){function d(){var a=Array.prototype.slice.call(arguments);km(e,c,a);return b.apply(this,a)}if(!c)return b;var e=wm(a),f;for(f in b)d[f]=b[f];for(f in b.prototype)d.prototype[f]=b.prototype[f];return d}function wm(a){a=a.split(\".\");return a[a.length-1]};Y(Gl.prototype,{Ua:{name:\"applyActionCode\",i:[V(\"code\")]},Ia:{name:\"checkActionCode\",i:[V(\"code\")]},Wa:{name:\"confirmPasswordReset\",i:[V(\"code\"),V(\"newPassword\")]},Sb:{name:\"createUserWithEmailAndPassword\",i:[V(\"email\"),V(\"password\")]},sb:{name:\"createUserAndRetrieveDataWithEmailAndPassword\",i:[V(\"email\"),V(\"password\")]},Vb:{name:\"fetchProvidersForEmail\",i:[V(\"email\")]},Wb:{name:\"fetchSignInMethodsForEmail\",i:[V(\"email\")]},da:{name:\"getRedirectResult\",i:[]},kc:{name:\"isSignInWithEmailLink\",i:[V(\"emailLink\")]},\nrc:{name:\"onAuthStateChanged\",i:[X(W(),nm(),\"nextOrObserver\"),nm(\"opt_error\",!0),nm(\"opt_completed\",!0)]},sc:{name:\"onIdTokenChanged\",i:[X(W(),nm(),\"nextOrObserver\"),nm(\"opt_error\",!0),nm(\"opt_completed\",!0)]},gb:{name:\"sendPasswordResetEmail\",i:[V(\"email\"),X(W(\"opt_actionCodeSettings\",!0),om(null,!0),\"opt_actionCodeSettings\",!0)]},hb:{name:\"sendSignInLinkToEmail\",i:[V(\"email\"),W(\"actionCodeSettings\")]},ib:{name:\"setPersistence\",i:[V(\"persistence\")]},Oa:{name:\"signInAndRetrieveDataWithCredential\",\ni:[sm()]},jb:{name:\"signInAnonymously\",i:[]},Jb:{name:\"signInAnonymouslyAndRetrieveData\",i:[]},Bc:{name:\"signInWithCredential\",i:[sm()]},Cc:{name:\"signInWithCustomToken\",i:[V(\"token\")]},Hb:{name:\"signInAndRetrieveDataWithCustomToken\",i:[V(\"token\")]},Dc:{name:\"signInWithEmailAndPassword\",i:[V(\"email\"),V(\"password\")]},Ec:{name:\"signInWithEmailLink\",i:[V(\"email\"),V(\"emailLink\",!0)]},Ib:{name:\"signInAndRetrieveDataWithEmailAndPassword\",i:[V(\"email\"),V(\"password\")]},Fc:{name:\"signInWithPhoneNumber\",i:[V(\"phoneNumber\"),\num()]},Gc:{name:\"signInWithPopup\",i:[tm()]},Hc:{name:\"signInWithRedirect\",i:[tm()]},kb:{name:\"signOut\",i:[]},toJSON:{name:\"toJSON\",i:[V(null,!0)]},Oc:{name:\"useDeviceLanguage\",i:[]},Pc:{name:\"verifyPasswordResetCode\",i:[V(\"code\")]}});(function(a,b){for(var c in b){var d=b[c].name;if(d!==c){var e=b[c].Rb;Object.defineProperty(a,d,{get:function(){return this[c]},set:function(a){km(d,[e],[a],!0);this[c]=a},enumerable:!0})}}})(Gl.prototype,{lc:{name:\"languageCode\",Rb:X(V(),om(),\"languageCode\")}});\nGl.Persistence=oj;Gl.Persistence.LOCAL=\"local\";Gl.Persistence.SESSION=\"session\";Gl.Persistence.NONE=\"none\";\nY(Lk.prototype,{\"delete\":{name:\"delete\",i:[]},ac:{name:\"getIdTokenResult\",i:[mm()]},F:{name:\"getIdToken\",i:[mm()]},getToken:{name:\"getToken\",i:[mm()]},$a:{name:\"linkAndRetrieveDataWithCredential\",i:[sm()]},mc:{name:\"linkWithCredential\",i:[sm()]},nc:{name:\"linkWithPhoneNumber\",i:[V(\"phoneNumber\"),um()]},oc:{name:\"linkWithPopup\",i:[tm()]},pc:{name:\"linkWithRedirect\",i:[tm()]},bb:{name:\"reauthenticateAndRetrieveDataWithCredential\",i:[sm()]},vc:{name:\"reauthenticateWithCredential\",i:[sm()]},wc:{name:\"reauthenticateWithPhoneNumber\",\ni:[V(\"phoneNumber\"),um()]},xc:{name:\"reauthenticateWithPopup\",i:[tm()]},yc:{name:\"reauthenticateWithRedirect\",i:[tm()]},reload:{name:\"reload\",i:[]},fb:{name:\"sendEmailVerification\",i:[X(W(\"opt_actionCodeSettings\",!0),om(null,!0),\"opt_actionCodeSettings\",!0)]},toJSON:{name:\"toJSON\",i:[V(null,!0)]},Mc:{name:\"unlink\",i:[V(\"provider\")]},mb:{name:\"updateEmail\",i:[V(\"email\")]},nb:{name:\"updatePassword\",i:[V(\"password\")]},Nc:{name:\"updatePhoneNumber\",i:[sm(\"phone\")]},ob:{name:\"updateProfile\",i:[W(\"profile\")]}});\nY(z.prototype,{ha:{name:\"finally\"},m:{name:\"catch\"},then:{name:\"then\"}});Y(xk.prototype,{confirm:{name:\"confirm\",i:[V(\"verificationCode\")]}});Z(O,\"credential\",function(a,b){return new Vf(a,b)},[V(\"email\"),V(\"password\")]);Y(Nf.prototype,{ta:{name:\"addScope\",i:[V(\"scope\")]},Ca:{name:\"setCustomParameters\",i:[W(\"customOAuthParameters\")]}});Z(Nf,\"credential\",Of,[X(V(),W(),\"token\")]);Z(O,\"credentialWithLink\",$f,[V(\"email\"),V(\"emailLink\")]);\nY(Pf.prototype,{ta:{name:\"addScope\",i:[V(\"scope\")]},Ca:{name:\"setCustomParameters\",i:[W(\"customOAuthParameters\")]}});Z(Pf,\"credential\",Qf,[X(V(),W(),\"token\")]);Y(Rf.prototype,{ta:{name:\"addScope\",i:[V(\"scope\")]},Ca:{name:\"setCustomParameters\",i:[W(\"customOAuthParameters\")]}});Z(Rf,\"credential\",Sf,[X(V(),X(W(),om()),\"idToken\"),X(V(),om(),\"accessToken\",!0)]);Y(Tf.prototype,{Ca:{name:\"setCustomParameters\",i:[W(\"customOAuthParameters\")]}});Z(Tf,\"credential\",Uf,[X(V(),W(),\"token\"),V(\"secret\",!0)]);\nY(N.prototype,{ta:{name:\"addScope\",i:[V(\"scope\")]},credential:{name:\"credential\",i:[X(V(),om(),\"idToken\",!0),X(V(),om(),\"accessToken\",!0)]},Ca:{name:\"setCustomParameters\",i:[W(\"customOAuthParameters\")]}});Z(fg,\"credential\",hg,[V(\"verificationId\"),V(\"verificationCode\")]);Y(fg.prototype,{Sa:{name:\"verifyPhoneNumber\",i:[V(\"phoneNumber\"),um()]}});Y(M.prototype,{toJSON:{name:\"toJSON\",i:[V(null,!0)]}});Y(pg.prototype,{toJSON:{name:\"toJSON\",i:[V(null,!0)]}});\nY(og.prototype,{toJSON:{name:\"toJSON\",i:[V(null,!0)]}});Y(jm.prototype,{clear:{name:\"clear\",i:[]},render:{name:\"render\",i:[]},verify:{name:\"verify\",i:[]}});\n(function(){if(\"undefined\"!==typeof firebase&&firebase.INTERNAL&&firebase.INTERNAL.registerService){var a={Auth:Gl,Error:M};Z(a,\"EmailAuthProvider\",O,[]);Z(a,\"FacebookAuthProvider\",Nf,[]);Z(a,\"GithubAuthProvider\",Pf,[]);Z(a,\"GoogleAuthProvider\",Rf,[]);Z(a,\"TwitterAuthProvider\",Tf,[]);Z(a,\"OAuthProvider\",N,[V(\"providerId\")]);Z(a,\"PhoneAuthProvider\",fg,[qm()]);Z(a,\"RecaptchaVerifier\",jm,[X(V(),pm(),\"recaptchaContainer\"),W(\"recaptchaParameters\",!0),rm()]);firebase.INTERNAL.registerService(\"auth\",function(a,\nc){a=new Gl(a);c({INTERNAL:{getUid:r(a.getUid,a),getToken:r(a.$b,a),addAuthTokenListener:r(a.Qb,a),removeAuthTokenListener:r(a.zc,a)}});return a},a,function(a,c){if(\"create\"===a)try{c.auth()}catch(d){}});firebase.INTERNAL.extendNamespace({User:Lk})}else throw Error(\"Cannot find the firebase namespace; be sure to include firebase-app.js before this library.\");})();\n}).call(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {});\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"h6ac\")))\n\n/***/ }),\n\n/***/ \"SloY\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"registerMessaging\", function() { return registerMessaging; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_util__ = __webpack_require__(\"58xA\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_util___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__firebase_util__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(\"7tE5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__firebase_app__ = __webpack_require__(\"VxYX\");\n\n\n\n\n/**\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ERROR_CODES = {\r\n    AVAILABLE_IN_WINDOW: 'only-available-in-window',\r\n    AVAILABLE_IN_SW: 'only-available-in-sw',\r\n    SHOULD_BE_INHERITED: 'should-be-overriden',\r\n    BAD_SENDER_ID: 'bad-sender-id',\r\n    INCORRECT_GCM_SENDER_ID: 'incorrect-gcm-sender-id',\r\n    PERMISSION_DEFAULT: 'permission-default',\r\n    PERMISSION_BLOCKED: 'permission-blocked',\r\n    UNSUPPORTED_BROWSER: 'unsupported-browser',\r\n    NOTIFICATIONS_BLOCKED: 'notifications-blocked',\r\n    FAILED_DEFAULT_REGISTRATION: 'failed-serviceworker-registration',\r\n    SW_REGISTRATION_EXPECTED: 'sw-registration-expected',\r\n    GET_SUBSCRIPTION_FAILED: 'get-subscription-failed',\r\n    INVALID_SAVED_TOKEN: 'invalid-saved-token',\r\n    SW_REG_REDUNDANT: 'sw-reg-redundant',\r\n    TOKEN_SUBSCRIBE_FAILED: 'token-subscribe-failed',\r\n    TOKEN_SUBSCRIBE_NO_TOKEN: 'token-subscribe-no-token',\r\n    TOKEN_SUBSCRIBE_NO_PUSH_SET: 'token-subscribe-no-push-set',\r\n    TOKEN_UNSUBSCRIBE_FAILED: 'token-unsubscribe-failed',\r\n    TOKEN_UPDATE_FAILED: 'token-update-failed',\r\n    TOKEN_UPDATE_NO_TOKEN: 'token-update-no-token',\r\n    USE_SW_BEFORE_GET_TOKEN: 'use-sw-before-get-token',\r\n    INVALID_DELETE_TOKEN: 'invalid-delete-token',\r\n    DELETE_TOKEN_NOT_FOUND: 'delete-token-not-found',\r\n    DELETE_SCOPE_NOT_FOUND: 'delete-scope-not-found',\r\n    BG_HANDLER_FUNCTION_EXPECTED: 'bg-handler-function-expected',\r\n    NO_WINDOW_CLIENT_TO_MSG: 'no-window-client-to-msg',\r\n    UNABLE_TO_RESUBSCRIBE: 'unable-to-resubscribe',\r\n    NO_FCM_TOKEN_FOR_RESUBSCRIBE: 'no-fcm-token-for-resubscribe',\r\n    FAILED_TO_DELETE_TOKEN: 'failed-to-delete-token',\r\n    NO_SW_IN_REG: 'no-sw-in-reg',\r\n    BAD_SCOPE: 'bad-scope',\r\n    BAD_VAPID_KEY: 'bad-vapid-key',\r\n    BAD_SUBSCRIPTION: 'bad-subscription',\r\n    BAD_TOKEN: 'bad-token',\r\n    BAD_PUSH_SET: 'bad-push-set',\r\n    FAILED_DELETE_VAPID_KEY: 'failed-delete-vapid-key',\r\n    INVALID_PUBLIC_VAPID_KEY: 'invalid-public-vapid-key',\r\n    USE_PUBLIC_KEY_BEFORE_GET_TOKEN: 'use-public-key-before-get-token',\r\n    PUBLIC_KEY_DECRYPTION_FAILED: 'public-vapid-key-decryption-failed'\r\n};\r\nvar ERROR_MAP = (_a = {}, _a[ERROR_CODES.AVAILABLE_IN_WINDOW] = 'This method is available in a Window context.', _a[ERROR_CODES.AVAILABLE_IN_SW] = 'This method is available in a service worker ' + 'context.', _a[ERROR_CODES.SHOULD_BE_INHERITED] = 'This method should be overriden by ' + 'extended classes.', _a[ERROR_CODES.BAD_SENDER_ID] = \"Please ensure that 'messagingSenderId' is set \" +\r\n        'correctly in the options passed into firebase.initializeApp().', _a[ERROR_CODES.PERMISSION_DEFAULT] = 'The required permissions were not granted and ' + 'dismissed instead.', _a[ERROR_CODES.PERMISSION_BLOCKED] = 'The required permissions were not granted and ' + 'blocked instead.', _a[ERROR_CODES.UNSUPPORTED_BROWSER] = \"This browser doesn't support the API's \" +\r\n        'required to use the firebase SDK.', _a[ERROR_CODES.NOTIFICATIONS_BLOCKED] = 'Notifications have been blocked.', _a[ERROR_CODES.FAILED_DEFAULT_REGISTRATION] = 'We are unable to register the ' +\r\n        'default service worker. {$browserErrorMessage}', _a[ERROR_CODES.SW_REGISTRATION_EXPECTED] = 'A service worker registration was the ' + 'expected input.', _a[ERROR_CODES.GET_SUBSCRIPTION_FAILED] = 'There was an error when trying to get ' +\r\n        'any existing Push Subscriptions.', _a[ERROR_CODES.INVALID_SAVED_TOKEN] = 'Unable to access details of the saved token.', _a[ERROR_CODES.SW_REG_REDUNDANT] = 'The service worker being used for push was made ' + 'redundant.', _a[ERROR_CODES.TOKEN_SUBSCRIBE_FAILED] = 'A problem occured while subscribing the ' + 'user to FCM: {$message}', _a[ERROR_CODES.TOKEN_SUBSCRIBE_NO_TOKEN] = 'FCM returned no token when subscribing ' + 'the user to push.', _a[ERROR_CODES.TOKEN_SUBSCRIBE_NO_PUSH_SET] = 'FCM returned an invalid response ' + 'when getting an FCM token.', _a[ERROR_CODES.TOKEN_UNSUBSCRIBE_FAILED] = 'A problem occured while unsubscribing the ' + 'user from FCM: {$message}', _a[ERROR_CODES.TOKEN_UPDATE_FAILED] = 'A problem occured while updating the ' + 'user from FCM: {$message}', _a[ERROR_CODES.TOKEN_UPDATE_NO_TOKEN] = 'FCM returned no token when updating ' + 'the user to push.', _a[ERROR_CODES.USE_SW_BEFORE_GET_TOKEN] = 'The useServiceWorker() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your service worker is used.', _a[ERROR_CODES.INVALID_DELETE_TOKEN] = 'You must pass a valid token into ' +\r\n        'deleteToken(), i.e. the token from getToken().', _a[ERROR_CODES.DELETE_TOKEN_NOT_FOUND] = 'The deletion attempt for token could not ' +\r\n        'be performed as the token was not found.', _a[ERROR_CODES.DELETE_SCOPE_NOT_FOUND] = 'The deletion attempt for service worker ' +\r\n        'scope could not be performed as the scope was not found.', _a[ERROR_CODES.BG_HANDLER_FUNCTION_EXPECTED] = 'The input to ' + 'setBackgroundMessageHandler() must be a function.', _a[ERROR_CODES.NO_WINDOW_CLIENT_TO_MSG] = 'An attempt was made to message a ' + 'non-existant window client.', _a[ERROR_CODES.UNABLE_TO_RESUBSCRIBE] = 'There was an error while re-subscribing ' +\r\n        'the FCM token for push messaging. Will have to resubscribe the ' +\r\n        'user on next visit. {$message}', _a[ERROR_CODES.NO_FCM_TOKEN_FOR_RESUBSCRIBE] = 'Could not find an FCM token ' +\r\n        'and as a result, unable to resubscribe. Will have to resubscribe the ' +\r\n        'user on next visit.', _a[ERROR_CODES.FAILED_TO_DELETE_TOKEN] = 'Unable to delete the currently saved token.', _a[ERROR_CODES.NO_SW_IN_REG] = 'Even though the service worker registration was ' +\r\n        'successful, there was a problem accessing the service worker itself.', _a[ERROR_CODES.INCORRECT_GCM_SENDER_ID] = \"Please change your web app manifest's \" +\r\n        \"'gcm_sender_id' value to '103953800507' to use Firebase messaging.\", _a[ERROR_CODES.BAD_SCOPE] = 'The service worker scope must be a string with at ' +\r\n        'least one character.', _a[ERROR_CODES.BAD_VAPID_KEY] = 'The public VAPID key is not a Uint8Array with 65 bytes.', _a[ERROR_CODES.BAD_SUBSCRIPTION] = 'The subscription must be a valid ' + 'PushSubscription.', _a[ERROR_CODES.BAD_TOKEN] = 'The FCM Token used for storage / lookup was not ' +\r\n        'a valid token string.', _a[ERROR_CODES.BAD_PUSH_SET] = 'The FCM push set used for storage / lookup was not ' +\r\n        'not a valid push set string.', _a[ERROR_CODES.FAILED_DELETE_VAPID_KEY] = 'The VAPID key could not be deleted.', _a[ERROR_CODES.INVALID_PUBLIC_VAPID_KEY] = 'The public VAPID key must be a string.', _a[ERROR_CODES.PUBLIC_KEY_DECRYPTION_FAILED] = 'The public VAPID key did not equal ' + '65 bytes when decrypted.', _a);\r\nvar errorFactory = new __WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"ErrorFactory\"]('messaging', 'Messaging', ERROR_MAP);\r\nvar _a;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_PUBLIC_VAPID_KEY = new Uint8Array([\r\n    0x04,\r\n    0x33,\r\n    0x94,\r\n    0xf7,\r\n    0xdf,\r\n    0xa1,\r\n    0xeb,\r\n    0xb1,\r\n    0xdc,\r\n    0x03,\r\n    0xa2,\r\n    0x5e,\r\n    0x15,\r\n    0x71,\r\n    0xdb,\r\n    0x48,\r\n    0xd3,\r\n    0x2e,\r\n    0xed,\r\n    0xed,\r\n    0xb2,\r\n    0x34,\r\n    0xdb,\r\n    0xb7,\r\n    0x47,\r\n    0x3a,\r\n    0x0c,\r\n    0x8f,\r\n    0xc4,\r\n    0xcc,\r\n    0xe1,\r\n    0x6f,\r\n    0x3c,\r\n    0x8c,\r\n    0x84,\r\n    0xdf,\r\n    0xab,\r\n    0xb6,\r\n    0x66,\r\n    0x3e,\r\n    0xf2,\r\n    0x0c,\r\n    0xd4,\r\n    0x8b,\r\n    0xfe,\r\n    0xe3,\r\n    0xf9,\r\n    0x76,\r\n    0x2f,\r\n    0x14,\r\n    0x1c,\r\n    0x63,\r\n    0x08,\r\n    0x6a,\r\n    0x6f,\r\n    0x2d,\r\n    0xb1,\r\n    0x1a,\r\n    0x95,\r\n    0xb0,\r\n    0xce,\r\n    0x37,\r\n    0xc0,\r\n    0x9c,\r\n    0x6e\r\n]);\r\nvar ENDPOINT = 'https://fcm.googleapis.com';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MessageParameter;\r\n(function (MessageParameter) {\r\n    MessageParameter[\"TYPE_OF_MSG\"] = \"firebase-messaging-msg-type\";\r\n    MessageParameter[\"DATA\"] = \"firebase-messaging-msg-data\";\r\n})(MessageParameter || (MessageParameter = {}));\r\nvar MessageType;\r\n(function (MessageType) {\r\n    MessageType[\"PUSH_MSG_RECEIVED\"] = \"push-msg-received\";\r\n    MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\r\n})(MessageType || (MessageType = {}));\n\n/**\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isArrayBufferEqual(a, b) {\r\n    if (a == null || b == null) {\r\n        return false;\r\n    }\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    if (a.byteLength !== b.byteLength) {\r\n        return false;\r\n    }\r\n    var viewA = new DataView(a);\r\n    var viewB = new DataView(b);\r\n    for (var i = 0; i < a.byteLength; i++) {\r\n        if (viewA.getUint8(i) !== viewB.getUint8(i)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction toBase64(arrayBuffer) {\r\n    var uint8Version = new Uint8Array(arrayBuffer);\r\n    return btoa(String.fromCharCode.apply(null, uint8Version));\r\n}\r\nfunction arrayBufferToBase64(arrayBuffer) {\r\n    var base64String = toBase64(arrayBuffer);\r\n    return base64String\r\n        .replace(/=/g, '')\r\n        .replace(/\\+/g, '-')\r\n        .replace(/\\//g, '_');\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar IIDModel = /** @class */ (function () {\r\n    function IIDModel() {\r\n    }\r\n    IIDModel.prototype.getToken = function (senderId, subscription, publicVapidKey) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var p256dh, auth, fcmSubscribeBody, applicationPubKey, headers, subscribeOptions, responseData, response, err_1, message;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        p256dh = arrayBufferToBase64(subscription.getKey('p256dh'));\r\n                        auth = arrayBufferToBase64(subscription.getKey('auth'));\r\n                        fcmSubscribeBody = \"authorized_entity=\" + senderId + \"&\" +\r\n                            (\"endpoint=\" + subscription.endpoint + \"&\") +\r\n                            (\"encryption_key=\" + p256dh + \"&\") +\r\n                            (\"encryption_auth=\" + auth);\r\n                        if (publicVapidKey !== DEFAULT_PUBLIC_VAPID_KEY) {\r\n                            applicationPubKey = arrayBufferToBase64(publicVapidKey);\r\n                            fcmSubscribeBody += \"&application_pub_key=\" + applicationPubKey;\r\n                        }\r\n                        headers = new Headers();\r\n                        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n                        subscribeOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: fcmSubscribeBody\r\n                        };\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, fetch(ENDPOINT + '/fcm/connect/subscribe', subscribeOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        responseData = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        err_1 = _a.sent();\r\n                        throw errorFactory.create(ERROR_CODES.TOKEN_SUBSCRIBE_FAILED);\r\n                    case 5:\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_SUBSCRIBE_FAILED, {\r\n                                message: message\r\n                            });\r\n                        }\r\n                        if (!responseData.token) {\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_SUBSCRIBE_NO_TOKEN);\r\n                        }\r\n                        if (!responseData.pushSet) {\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_SUBSCRIBE_NO_PUSH_SET);\r\n                        }\r\n                        return [2 /*return*/, {\r\n                                token: responseData.token,\r\n                                pushSet: responseData.pushSet\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Update the underlying token details for fcmToken.\r\n     */\r\n    IIDModel.prototype.updateToken = function (senderId, fcmToken, fcmPushSet, subscription, publicVapidKey) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var p256dh, auth, fcmUpdateBody, applicationPubKey, headers, updateOptions, responseData, response, err_2, message;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        p256dh = arrayBufferToBase64(subscription.getKey('p256dh'));\r\n                        auth = arrayBufferToBase64(subscription.getKey('auth'));\r\n                        fcmUpdateBody = \"push_set=\" + fcmPushSet + \"&\" +\r\n                            (\"token=\" + fcmToken + \"&\") +\r\n                            (\"authorized_entity=\" + senderId + \"&\") +\r\n                            (\"endpoint=\" + subscription.endpoint + \"&\") +\r\n                            (\"encryption_key=\" + p256dh + \"&\") +\r\n                            (\"encryption_auth=\" + auth);\r\n                        if (publicVapidKey !== DEFAULT_PUBLIC_VAPID_KEY) {\r\n                            applicationPubKey = arrayBufferToBase64(publicVapidKey);\r\n                            fcmUpdateBody += \"&application_pub_key=\" + applicationPubKey;\r\n                        }\r\n                        headers = new Headers();\r\n                        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n                        updateOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: fcmUpdateBody\r\n                        };\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, fetch(ENDPOINT + '/fcm/connect/subscribe', updateOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        responseData = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        err_2 = _a.sent();\r\n                        throw errorFactory.create(ERROR_CODES.TOKEN_UPDATE_FAILED);\r\n                    case 5:\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_UPDATE_FAILED, {\r\n                                message: message\r\n                            });\r\n                        }\r\n                        if (!responseData.token) {\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_UPDATE_NO_TOKEN);\r\n                        }\r\n                        return [2 /*return*/, responseData.token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Given a fcmToken, pushSet and messagingSenderId, delete an FCM token.\r\n     */\r\n    IIDModel.prototype.deleteToken = function (senderId, fcmToken, fcmPushSet) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var fcmUnsubscribeBody, headers, unsubscribeOptions, response, responseData, message, err_3;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        fcmUnsubscribeBody = \"authorized_entity=\" + senderId + \"&\" +\r\n                            (\"token=\" + fcmToken + \"&\") +\r\n                            (\"pushSet=\" + fcmPushSet);\r\n                        headers = new Headers();\r\n                        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n                        unsubscribeOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: fcmUnsubscribeBody\r\n                        };\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, fetch(ENDPOINT + '/fcm/connect/unsubscribe', unsubscribeOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        responseData = _a.sent();\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_UNSUBSCRIBE_FAILED, {\r\n                                message: message\r\n                            });\r\n                        }\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        err_3 = _a.sent();\r\n                        throw errorFactory.create(ERROR_CODES.TOKEN_UNSUBSCRIBE_FAILED);\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return IIDModel;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction base64ToArrayBuffer(base64String) {\r\n    var padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n    var base64 = (base64String + padding)\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n    var rawData = window.atob(base64);\r\n    var outputArray = new Uint8Array(rawData.length);\r\n    for (var i = 0; i < rawData.length; ++i) {\r\n        outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OLD_DB_NAME = 'undefined';\r\nvar OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\r\nfunction handleDb(db) {\r\n    if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\r\n        // We found a database with the name 'undefined', but our expected object\r\n        // store isn't defined.\r\n        return;\r\n    }\r\n    var transaction = db.transaction(OLD_OBJECT_STORE_NAME);\r\n    var objectStore = transaction.objectStore(OLD_OBJECT_STORE_NAME);\r\n    var iidModel = new IIDModel();\r\n    var openCursorRequest = objectStore.openCursor();\r\n    openCursorRequest.onerror = function (event) {\r\n        // NOOP - Nothing we can do.\r\n        console.warn('Unable to cleanup old IDB.', event);\r\n    };\r\n    openCursorRequest.onsuccess = function () {\r\n        var cursor = openCursorRequest.result;\r\n        if (cursor) {\r\n            // cursor.value contains the current record being iterated through\r\n            // this is where you'd do something with the result\r\n            var tokenDetails = cursor.value;\r\n            iidModel.deleteToken(tokenDetails.fcmSenderId, tokenDetails.fcmToken, tokenDetails.fcmPushSet);\r\n            cursor.continue();\r\n        }\r\n        else {\r\n            db.close();\r\n            indexedDB.deleteDatabase(OLD_DB_NAME);\r\n        }\r\n    };\r\n}\r\nfunction cleanV1() {\r\n    var request = indexedDB.open(OLD_DB_NAME);\r\n    request.onerror = function (event) {\r\n        // NOOP - Nothing we can do.\r\n    };\r\n    request.onsuccess = function (event) {\r\n        var db = request.result;\r\n        handleDb(db);\r\n    };\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DBInterface = /** @class */ (function () {\r\n    function DBInterface() {\r\n        this.dbPromise = null;\r\n    }\r\n    /** Gets record(s) from the objectStore that match the given key. */\r\n    DBInterface.prototype.get = function (key) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.get(key); });\r\n    };\r\n    /** Gets record(s) from the objectStore that match the given index. */\r\n    DBInterface.prototype.getIndex = function (index, key) {\r\n        function runRequest(objectStore) {\r\n            var idbIndex = objectStore.index(index);\r\n            return idbIndex.get(key);\r\n        }\r\n        return this.createTransaction(runRequest);\r\n    };\r\n    /** Assigns or overwrites the record for the given value. */\r\n    // tslint:disable-next-line:no-any IndexedDB values are of type \"any\"\r\n    DBInterface.prototype.put = function (value) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.put(value); }, 'readwrite');\r\n    };\r\n    /** Deletes record(s) from the objectStore that match the given key. */\r\n    DBInterface.prototype.delete = function (key) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.delete(key); }, 'readwrite');\r\n    };\r\n    /**\r\n     * Close the currently open database.\r\n     */\r\n    DBInterface.prototype.closeDatabase = function () {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var db;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.dbPromise) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.dbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        db.close();\r\n                        this.dbPromise = null;\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates an IndexedDB Transaction and passes its objectStore to the\r\n     * runRequest function, which runs the database request.\r\n     *\r\n     * @return Promise that resolves with the result of the runRequest function\r\n     */\r\n    DBInterface.prototype.createTransaction = function (runRequest, mode) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var db, transaction, request, result;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getDb()];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        transaction = db.transaction(this.objectStoreName, mode);\r\n                        request = transaction.objectStore(this.objectStoreName);\r\n                        return [4 /*yield*/, promisify(runRequest(request))];\r\n                    case 2:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                transaction.oncomplete = function () {\r\n                                    resolve(result);\r\n                                };\r\n                                transaction.onerror = function () {\r\n                                    reject(transaction.error);\r\n                                };\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** Gets the cached db connection or opens a new one. */\r\n    DBInterface.prototype.getDb = function () {\r\n        var _this = this;\r\n        if (!this.dbPromise) {\r\n            this.dbPromise = new Promise(function (resolve, reject) {\r\n                var request = indexedDB.open(_this.dbName, _this.dbVersion);\r\n                request.onsuccess = function () {\r\n                    resolve(request.result);\r\n                };\r\n                request.onerror = function () {\r\n                    _this.dbPromise = null;\r\n                    reject(request.error);\r\n                };\r\n                request.onupgradeneeded = function (event) { return _this.onDbUpgrade(request, event); };\r\n            });\r\n        }\r\n        return this.dbPromise;\r\n    };\r\n    return DBInterface;\r\n}());\r\n/** Promisifies an IDBRequest. Resolves with the IDBRequest's result. */\r\nfunction promisify(request) {\r\n    return new Promise(function (resolve, reject) {\r\n        request.onsuccess = function () {\r\n            resolve(request.result);\r\n        };\r\n        request.onerror = function () {\r\n            reject(request.error);\r\n        };\r\n    });\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TokenDetailsModel = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"c\" /* __extends */])(TokenDetailsModel, _super);\r\n    function TokenDetailsModel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.dbName = 'fcm_token_details_db';\r\n        _this.dbVersion = 3;\r\n        _this.objectStoreName = 'fcm_token_object_Store';\r\n        return _this;\r\n    }\r\n    TokenDetailsModel.prototype.onDbUpgrade = function (request, event) {\r\n        var db = request.result;\r\n        // Lack of 'break' statements is intentional.\r\n        switch (event.oldVersion) {\r\n            case 0: {\r\n                // New IDB instance\r\n                var objectStore = db.createObjectStore(this.objectStoreName, {\r\n                    keyPath: 'swScope'\r\n                });\r\n                // Make sure the sender ID can be searched\r\n                objectStore.createIndex('fcmSenderId', 'fcmSenderId', {\r\n                    unique: false\r\n                });\r\n                objectStore.createIndex('fcmToken', 'fcmToken', { unique: true });\r\n            }\r\n            case 1: {\r\n                // Prior to version 2, we were using either 'fcm_token_details_db'\r\n                // or 'undefined' as the database name due to bug in the SDK\r\n                // So remove the old tokens and databases.\r\n                cleanV1();\r\n            }\r\n            case 2: {\r\n                var objectStore = request.transaction.objectStore(this.objectStoreName);\r\n                var cursorRequest_1 = objectStore.openCursor();\r\n                cursorRequest_1.onsuccess = function () {\r\n                    var cursor = cursorRequest_1.result;\r\n                    if (cursor) {\r\n                        var value = cursor.value;\r\n                        var newValue = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __assign */])({}, value);\r\n                        if (!value.createTime) {\r\n                            newValue.createTime = Date.now();\r\n                        }\r\n                        if (typeof value.vapidKey === 'string') {\r\n                            newValue.vapidKey = base64ToArrayBuffer(value.vapidKey);\r\n                        }\r\n                        if (typeof value.auth === 'string') {\r\n                            newValue.auth = base64ToArrayBuffer(value.auth).buffer;\r\n                        }\r\n                        if (typeof value.auth === 'string') {\r\n                            newValue.p256dh = base64ToArrayBuffer(value.p256dh).buffer;\r\n                        }\r\n                        cursor.update(newValue);\r\n                        cursor.continue();\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Given a token, this method will look up the details in indexedDB.\r\n     */\r\n    TokenDetailsModel.prototype.getTokenDetailsFromToken = function (fcmToken) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                if (!fcmToken) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_TOKEN);\r\n                }\r\n                validateInputs({ fcmToken: fcmToken });\r\n                return [2 /*return*/, this.getIndex('fcmToken', fcmToken)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Given a service worker scope, this method will look up the details in\r\n     * indexedDB.\r\n     * @return The details associated with that token.\r\n     */\r\n    TokenDetailsModel.prototype.getTokenDetailsFromSWScope = function (swScope) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                if (!swScope) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n                }\r\n                validateInputs({ swScope: swScope });\r\n                return [2 /*return*/, this.get(swScope)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Save the details for the fcm token for re-use at a later date.\r\n     * @param input A plain js object containing args to save.\r\n     */\r\n    TokenDetailsModel.prototype.saveTokenDetails = function (tokenDetails) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                if (!tokenDetails.swScope) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n                }\r\n                if (!tokenDetails.vapidKey) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_VAPID_KEY);\r\n                }\r\n                if (!tokenDetails.endpoint || !tokenDetails.auth || !tokenDetails.p256dh) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SUBSCRIPTION);\r\n                }\r\n                if (!tokenDetails.fcmSenderId) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SENDER_ID);\r\n                }\r\n                if (!tokenDetails.fcmToken) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_TOKEN);\r\n                }\r\n                if (!tokenDetails.fcmPushSet) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_PUSH_SET);\r\n                }\r\n                validateInputs(tokenDetails);\r\n                return [2 /*return*/, this.put(tokenDetails)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes details of the current FCM token.\r\n     * It's returning a promise in case we need to move to an async\r\n     * method for deleting at a later date.\r\n     *\r\n     * @return Resolves once the FCM token details have been deleted and returns\r\n     * the deleted details.\r\n     */\r\n    TokenDetailsModel.prototype.deleteToken = function (token) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var details;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof token !== 'string' || token.length === 0) {\r\n                            return [2 /*return*/, Promise.reject(errorFactory.create(ERROR_CODES.INVALID_DELETE_TOKEN))];\r\n                        }\r\n                        return [4 /*yield*/, this.getTokenDetailsFromToken(token)];\r\n                    case 1:\r\n                        details = _a.sent();\r\n                        if (!details) {\r\n                            throw errorFactory.create(ERROR_CODES.DELETE_TOKEN_NOT_FOUND);\r\n                        }\r\n                        return [4 /*yield*/, this.delete(details.swScope)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, details];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return TokenDetailsModel;\r\n}(DBInterface));\r\n/**\r\n * This method takes an object and will check for known arguments and\r\n * validate the input.\r\n * @return Promise that resolves if input is valid, rejects otherwise.\r\n */\r\nfunction validateInputs(input) {\r\n    if (input.fcmToken) {\r\n        if (typeof input.fcmToken !== 'string' || input.fcmToken.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_TOKEN);\r\n        }\r\n    }\r\n    if (input.swScope) {\r\n        if (typeof input.swScope !== 'string' || input.swScope.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n        }\r\n    }\r\n    if (input.vapidKey) {\r\n        if (!(input.vapidKey instanceof Uint8Array) ||\r\n            input.vapidKey.length !== 65) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_VAPID_KEY);\r\n        }\r\n    }\r\n    if (input.endpoint) {\r\n        if (typeof input.endpoint !== 'string' || input.endpoint.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SUBSCRIPTION);\r\n        }\r\n    }\r\n    if (input.auth) {\r\n        if (!(input.auth instanceof ArrayBuffer)) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SUBSCRIPTION);\r\n        }\r\n    }\r\n    if (input.p256dh) {\r\n        if (!(input.p256dh instanceof ArrayBuffer)) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SUBSCRIPTION);\r\n        }\r\n    }\r\n    if (input.fcmSenderId) {\r\n        if (typeof input.fcmSenderId !== 'string' ||\r\n            input.fcmSenderId.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SENDER_ID);\r\n        }\r\n    }\r\n    if (input.fcmPushSet) {\r\n        if (typeof input.fcmPushSet !== 'string' || input.fcmPushSet.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_PUSH_SET);\r\n        }\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UNCOMPRESSED_PUBLIC_KEY_SIZE = 65;\r\nvar VapidDetailsModel = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"c\" /* __extends */])(VapidDetailsModel, _super);\r\n    function VapidDetailsModel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.dbName = 'fcm_vapid_details_db';\r\n        _this.dbVersion = 1;\r\n        _this.objectStoreName = 'fcm_vapid_object_Store';\r\n        return _this;\r\n    }\r\n    VapidDetailsModel.prototype.onDbUpgrade = function (request) {\r\n        var db = request.result;\r\n        db.createObjectStore(this.objectStoreName, { keyPath: 'swScope' });\r\n    };\r\n    /**\r\n     * Given a service worker scope, this method will look up the vapid key\r\n     * in indexedDB.\r\n     */\r\n    VapidDetailsModel.prototype.getVapidFromSWScope = function (swScope) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var result;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof swScope !== 'string' || swScope.length === 0) {\r\n                            throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n                        }\r\n                        return [4 /*yield*/, this.get(swScope)];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result ? result.vapidKey : undefined];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Save a vapid key against a swScope for later date.\r\n     */\r\n    VapidDetailsModel.prototype.saveVapidDetails = function (swScope, vapidKey) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var details;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                if (typeof swScope !== 'string' || swScope.length === 0) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n                }\r\n                if (vapidKey === null || vapidKey.length !== UNCOMPRESSED_PUBLIC_KEY_SIZE) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_VAPID_KEY);\r\n                }\r\n                details = {\r\n                    swScope: swScope,\r\n                    vapidKey: vapidKey\r\n                };\r\n                return [2 /*return*/, this.put(details)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes details of the current FCM VAPID key for a SW scope.\r\n     * Resolves once the scope/vapid details have been deleted and returns the\r\n     * deleted vapid key.\r\n     */\r\n    VapidDetailsModel.prototype.deleteVapidDetails = function (swScope) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var vapidKey;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getVapidFromSWScope(swScope)];\r\n                    case 1:\r\n                        vapidKey = _a.sent();\r\n                        if (!vapidKey) {\r\n                            throw errorFactory.create(ERROR_CODES.DELETE_SCOPE_NOT_FOUND);\r\n                        }\r\n                        return [4 /*yield*/, this.delete(swScope)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, vapidKey];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return VapidDetailsModel;\r\n}(DBInterface));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SENDER_ID_OPTION_NAME = 'messagingSenderId';\r\n// Database cache should be invalidated once a week.\r\nvar TOKEN_EXPIRATION_MILLIS = 7 * 24 * 60 * 60 * 1000; // 7 days\r\nvar ControllerInterface = /** @class */ (function () {\r\n    /**\r\n     * An interface of the Messaging Service API\r\n     */\r\n    function ControllerInterface(app) {\r\n        var _this = this;\r\n        if (!app.options[SENDER_ID_OPTION_NAME] ||\r\n            typeof app.options[SENDER_ID_OPTION_NAME] !== 'string') {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SENDER_ID);\r\n        }\r\n        this.messagingSenderId = app.options[SENDER_ID_OPTION_NAME];\r\n        this.tokenDetailsModel = new TokenDetailsModel();\r\n        this.vapidDetailsModel = new VapidDetailsModel();\r\n        this.iidModel = new IIDModel();\r\n        this.app = app;\r\n        this.INTERNAL = {\r\n            delete: function () { return _this.delete(); }\r\n        };\r\n    }\r\n    /**\r\n     * @export\r\n     */\r\n    ControllerInterface.prototype.getToken = function () {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var currentPermission, swReg, publicVapidKey, pushSubscription, tokenDetails;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        currentPermission = this.getNotificationPermission_();\r\n                        if (currentPermission !== 'granted') {\r\n                            if (currentPermission === 'denied') {\r\n                                return [2 /*return*/, Promise.reject(errorFactory.create(ERROR_CODES.NOTIFICATIONS_BLOCKED))];\r\n                            }\r\n                            // We must wait for permission to be granted\r\n                            return [2 /*return*/, Promise.resolve(null)];\r\n                        }\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        swReg = _a.sent();\r\n                        return [4 /*yield*/, this.getPublicVapidKey_()];\r\n                    case 2:\r\n                        publicVapidKey = _a.sent();\r\n                        return [4 /*yield*/, this.getPushSubscription(swReg, publicVapidKey)];\r\n                    case 3:\r\n                        pushSubscription = _a.sent();\r\n                        return [4 /*yield*/, this.tokenDetailsModel.getTokenDetailsFromSWScope(swReg.scope)];\r\n                    case 4:\r\n                        tokenDetails = _a.sent();\r\n                        if (tokenDetails) {\r\n                            return [2 /*return*/, this.manageExistingToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\r\n                        }\r\n                        return [2 /*return*/, this.getNewToken(swReg, pushSubscription, publicVapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * manageExistingToken is triggered if there's an existing FCM token in the\r\n     * database and it can take 3 different actions:\r\n     * 1) Retrieve the existing FCM token from the database.\r\n     * 2) If VAPID details have changed: Delete the existing token and create a\r\n     * new one with the new VAPID key.\r\n     * 3) If the database cache is invalidated: Send a request to FCM to update\r\n     * the token, and to check if the token is still valid on FCM-side.\r\n     */\r\n    ControllerInterface.prototype.manageExistingToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var isTokenValid, now;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        isTokenValid = isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails);\r\n                        if (isTokenValid) {\r\n                            now = Date.now();\r\n                            if (now < tokenDetails.createTime + TOKEN_EXPIRATION_MILLIS) {\r\n                                return [2 /*return*/, tokenDetails.fcmToken];\r\n                            }\r\n                            else {\r\n                                return [2 /*return*/, this.updateToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\r\n                            }\r\n                        }\r\n                        // If the token is no longer valid (for example if the VAPID details\r\n                        // have changed), delete the existing token from the FCM client and server\r\n                        // database. No need to unsubscribe from the Service Worker as we have a\r\n                        // good push subscription that we'd like to use in getNewToken.\r\n                        return [4 /*yield*/, this.deleteTokenFromDB(tokenDetails.fcmToken)];\r\n                    case 1:\r\n                        // If the token is no longer valid (for example if the VAPID details\r\n                        // have changed), delete the existing token from the FCM client and server\r\n                        // database. No need to unsubscribe from the Service Worker as we have a\r\n                        // good push subscription that we'd like to use in getNewToken.\r\n                        _a.sent();\r\n                        return [2 /*return*/, this.getNewToken(swReg, pushSubscription, publicVapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ControllerInterface.prototype.updateToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var updatedToken, allDetails, e_1;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 4, , 6]);\r\n                        return [4 /*yield*/, this.iidModel.updateToken(this.messagingSenderId, tokenDetails.fcmToken, tokenDetails.fcmPushSet, pushSubscription, publicVapidKey)];\r\n                    case 1:\r\n                        updatedToken = _a.sent();\r\n                        allDetails = {\r\n                            swScope: swReg.scope,\r\n                            vapidKey: publicVapidKey,\r\n                            fcmSenderId: this.messagingSenderId,\r\n                            fcmToken: updatedToken,\r\n                            fcmPushSet: tokenDetails.fcmPushSet,\r\n                            createTime: Date.now(),\r\n                            endpoint: pushSubscription.endpoint,\r\n                            auth: pushSubscription.getKey('auth'),\r\n                            p256dh: pushSubscription.getKey('p256dh')\r\n                        };\r\n                        return [4 /*yield*/, this.tokenDetailsModel.saveTokenDetails(allDetails)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, updatedToken];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        return [4 /*yield*/, this.deleteToken(tokenDetails.fcmToken)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        throw e_1;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ControllerInterface.prototype.getNewToken = function (swReg, pushSubscription, publicVapidKey) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var tokenDetails, allDetails;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.iidModel.getToken(this.messagingSenderId, pushSubscription, publicVapidKey)];\r\n                    case 1:\r\n                        tokenDetails = _a.sent();\r\n                        allDetails = {\r\n                            swScope: swReg.scope,\r\n                            vapidKey: publicVapidKey,\r\n                            fcmSenderId: this.messagingSenderId,\r\n                            fcmToken: tokenDetails.token,\r\n                            fcmPushSet: tokenDetails.pushSet,\r\n                            createTime: Date.now(),\r\n                            endpoint: pushSubscription.endpoint,\r\n                            auth: pushSubscription.getKey('auth'),\r\n                            p256dh: pushSubscription.getKey('p256dh')\r\n                        };\r\n                        return [4 /*yield*/, this.tokenDetailsModel.saveTokenDetails(allDetails)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, tokenDetails.token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes tokens that the token manager looks after,\r\n     * unsubscribes the token from FCM  and then unregisters the push\r\n     * subscription if it exists. It returns a promise that indicates\r\n     * whether or not the unsubscribe request was processed successfully.\r\n     * @export\r\n     */\r\n    ControllerInterface.prototype.deleteToken = function (token) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var registration, pushSubscription;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: \r\n                    // Delete the token details from the database.\r\n                    return [4 /*yield*/, this.deleteTokenFromDB(token)];\r\n                    case 1:\r\n                        // Delete the token details from the database.\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 2:\r\n                        registration = _a.sent();\r\n                        if (!registration) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, registration.pushManager.getSubscription()];\r\n                    case 3:\r\n                        pushSubscription = _a.sent();\r\n                        if (pushSubscription) {\r\n                            return [2 /*return*/, pushSubscription.unsubscribe()];\r\n                        }\r\n                        _a.label = 4;\r\n                    case 4: \r\n                    // If there's no SW, consider it a success.\r\n                    return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method will delete the token from the client database, and make a\r\n     * call to FCM to remove it from the server DB. Does not temper with the\r\n     * push subscription.\r\n     */\r\n    ControllerInterface.prototype.deleteTokenFromDB = function (token) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var details;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.tokenDetailsModel.deleteToken(token)];\r\n                    case 1:\r\n                        details = _a.sent();\r\n                        return [4 /*yield*/, this.iidModel.deleteToken(details.fcmSenderId, details.fcmToken, details.fcmPushSet)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a PushSubscription for the current user.\r\n     */\r\n    ControllerInterface.prototype.getPushSubscription = function (swRegistration, publicVapidKey) {\r\n        return swRegistration.pushManager.getSubscription().then(function (subscription) {\r\n            if (subscription) {\r\n                return subscription;\r\n            }\r\n            return swRegistration.pushManager.subscribe({\r\n                userVisibleOnly: true,\r\n                applicationServerKey: publicVapidKey\r\n            });\r\n        });\r\n    };\r\n    //\r\n    // The following methods should only be available in the window.\r\n    //\r\n    ControllerInterface.prototype.requestPermission = function () {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    ControllerInterface.prototype.useServiceWorker = function (registration) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    ControllerInterface.prototype.usePublicVapidKey = function (b64PublicKey) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    ControllerInterface.prototype.onMessage = function (nextOrObserver, error, completed) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    ControllerInterface.prototype.onTokenRefresh = function (nextOrObserver, error, completed) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    //\r\n    // The following methods are used by the service worker only.\r\n    //\r\n    ControllerInterface.prototype.setBackgroundMessageHandler = function (callback) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_SW);\r\n    };\r\n    //\r\n    // The following methods are used by the service themselves and not exposed\r\n    // publicly or not expected to be used by developers.\r\n    //\r\n    /**\r\n     * This method is required to adhere to the Firebase interface.\r\n     * It closes any currently open indexdb database connections.\r\n     */\r\n    ControllerInterface.prototype.delete = function () {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.tokenDetailsModel.closeDatabase(),\r\n                            this.vapidDetailsModel.closeDatabase()\r\n                        ])];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns the current Notification Permission state.\r\n     */\r\n    ControllerInterface.prototype.getNotificationPermission_ = function () {\r\n        // TODO: Remove the cast when this issue is fixed:\r\n        // https://github.com/Microsoft/TypeScript/issues/14701\r\n        // tslint:disable-next-line no-any\r\n        return Notification.permission;\r\n    };\r\n    ControllerInterface.prototype.getTokenDetailsModel = function () {\r\n        return this.tokenDetailsModel;\r\n    };\r\n    ControllerInterface.prototype.getVapidDetailsModel = function () {\r\n        return this.vapidDetailsModel;\r\n    };\r\n    // Visible for testing\r\n    // TODO: make protected\r\n    ControllerInterface.prototype.getIIDModel = function () {\r\n        return this.iidModel;\r\n    };\r\n    return ControllerInterface;\r\n}());\r\n/**\r\n * Checks if the tokenDetails match the details provided in the clients.\r\n */\r\nfunction isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails) {\r\n    if (!isArrayBufferEqual(publicVapidKey.buffer, tokenDetails.vapidKey.buffer)) {\r\n        return false;\r\n    }\r\n    var isEndpointEqual = pushSubscription.endpoint === tokenDetails.endpoint;\r\n    var isAuthEqual = isArrayBufferEqual(pushSubscription.getKey('auth'), tokenDetails.auth);\r\n    var isP256dhEqual = isArrayBufferEqual(pushSubscription.getKey('p256dh'), tokenDetails.p256dh);\r\n    return isEndpointEqual && isAuthEqual && isP256dhEqual;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FCM_MSG = 'FCM_MSG';\r\nvar SWController = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"c\" /* __extends */])(SWController, _super);\r\n    function SWController(app) {\r\n        var _this = _super.call(this, app) || this;\r\n        _this.bgMessageHandler = null;\r\n        self.addEventListener('push', function (e) {\r\n            _this.onPush(e);\r\n        });\r\n        self.addEventListener('pushsubscriptionchange', function (e) {\r\n            _this.onSubChange(e);\r\n        });\r\n        self.addEventListener('notificationclick', function (e) {\r\n            _this.onNotificationClick(e);\r\n        });\r\n        return _this;\r\n    }\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SWController.prototype.onPush = function (event) {\r\n        event.waitUntil(this.onPush_(event));\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SWController.prototype.onSubChange = function (event) {\r\n        event.waitUntil(this.onSubChange_(event));\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SWController.prototype.onNotificationClick = function (event) {\r\n        event.waitUntil(this.onNotificationClick_(event));\r\n    };\r\n    /**\r\n     * A handler for push events that shows notifications based on the content of\r\n     * the payload.\r\n     *\r\n     * The payload must be a JSON-encoded Object with a `notification` key. The\r\n     * value of the `notification` property will be used as the NotificationOptions\r\n     * object passed to showNotification. Additionally, the `title` property of the\r\n     * notification object will be used as the title.\r\n     *\r\n     * If there is no notification data in the payload then no notification will be\r\n     * shown.\r\n     */\r\n    SWController.prototype.onPush_ = function (event) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var msgPayload, hasVisibleClients, notificationDetails, notificationTitle, reg;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!event.data) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        try {\r\n                            msgPayload = event.data.json();\r\n                        }\r\n                        catch (err) {\r\n                            // Not JSON so not an FCM message\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, this.hasVisibleClients_()];\r\n                    case 1:\r\n                        hasVisibleClients = _a.sent();\r\n                        if (hasVisibleClients) {\r\n                            // Do not need to show a notification.\r\n                            if (msgPayload.notification || this.bgMessageHandler) {\r\n                                // Send to page\r\n                                return [2 /*return*/, this.sendMessageToWindowClients_(msgPayload)];\r\n                            }\r\n                            return [2 /*return*/];\r\n                        }\r\n                        notificationDetails = this.getNotificationData_(msgPayload);\r\n                        if (!notificationDetails) return [3 /*break*/, 3];\r\n                        notificationTitle = notificationDetails.title || '';\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 2:\r\n                        reg = _a.sent();\r\n                        return [2 /*return*/, reg.showNotification(notificationTitle, notificationDetails)];\r\n                    case 3:\r\n                        if (!this.bgMessageHandler) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.bgMessageHandler(msgPayload)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SWController.prototype.onSubChange_ = function (event) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var registration, err_1, err_2, tokenDetailsModel, tokenDetails;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        registration = _a.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        err_1 = _a.sent();\r\n                        throw errorFactory.create(ERROR_CODES.UNABLE_TO_RESUBSCRIBE, {\r\n                            message: err_1\r\n                        });\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 8]);\r\n                        return [4 /*yield*/, registration.pushManager.getSubscription()];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 5:\r\n                        err_2 = _a.sent();\r\n                        tokenDetailsModel = this.getTokenDetailsModel();\r\n                        return [4 /*yield*/, tokenDetailsModel.getTokenDetailsFromSWScope(registration.scope)];\r\n                    case 6:\r\n                        tokenDetails = _a.sent();\r\n                        if (!tokenDetails) {\r\n                            // This should rarely occure, but could if indexedDB\r\n                            // is corrupted or wiped\r\n                            throw err_2;\r\n                        }\r\n                        // Attempt to delete the token if we know it's bad\r\n                        return [4 /*yield*/, this.deleteToken(tokenDetails.fcmToken)];\r\n                    case 7:\r\n                        // Attempt to delete the token if we know it's bad\r\n                        _a.sent();\r\n                        throw err_2;\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SWController.prototype.onNotificationClick_ = function (event) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var msgPayload, clickAction, windowClient, internalMsg;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!event.notification ||\r\n                            !event.notification.data ||\r\n                            !event.notification.data[FCM_MSG]) {\r\n                            // Not an FCM notification, do nothing.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // Prevent other listeners from receiving the event\r\n                        event.stopImmediatePropagation();\r\n                        event.notification.close();\r\n                        msgPayload = event.notification.data[FCM_MSG];\r\n                        if (!msgPayload.notification) {\r\n                            // Nothing to do.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        clickAction = msgPayload.notification.click_action;\r\n                        if (!clickAction) {\r\n                            // Nothing to do.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, this.getWindowClient_(clickAction)];\r\n                    case 1:\r\n                        windowClient = _a.sent();\r\n                        if (!!windowClient) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, self.clients.openWindow(clickAction)];\r\n                    case 2:\r\n                        // Unable to find window client so need to open one.\r\n                        windowClient = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 3: return [4 /*yield*/, windowClient.focus()];\r\n                    case 4:\r\n                        windowClient = _a.sent();\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        if (!windowClient) {\r\n                            // Window Client will not be returned if it's for a third party origin.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // Delete notification data from payload before sending to the page.\r\n                        delete msgPayload.notification;\r\n                        internalMsg = createNewMsg(MessageType.NOTIFICATION_CLICKED, msgPayload);\r\n                        // Attempt to send a message to the client to handle the data\r\n                        // Is affected by: https://github.com/slightlyoff/ServiceWorker/issues/728\r\n                        return [2 /*return*/, this.attemptToMessageClient_(windowClient, internalMsg)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SWController.prototype.getNotificationData_ = function (msgPayload) {\r\n        if (!msgPayload) {\r\n            return;\r\n        }\r\n        if (typeof msgPayload.notification !== 'object') {\r\n            return;\r\n        }\r\n        var notificationInformation = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __assign */])({}, msgPayload.notification);\r\n        // Put the message payload under FCM_MSG name so we can identify the\r\n        // notification as being an FCM notification vs a notification from\r\n        // somewhere else (i.e. normal web push or developer generated\r\n        // notification).\r\n        notificationInformation.data = (_a = {}, _a[FCM_MSG] = msgPayload, _a);\r\n        return notificationInformation;\r\n        var _a;\r\n    };\r\n    /**\r\n     * Calling setBackgroundMessageHandler will opt in to some specific\r\n     * behaviours.\r\n     * 1.) If a notification doesn't need to be shown due to a window already\r\n     * being visible, then push messages will be sent to the page.\r\n     * 2.) If a notification needs to be shown, and the message contains no\r\n     * notification data this method will be called\r\n     * and the promise it returns will be passed to event.waitUntil.\r\n     * If you do not set this callback then all push messages will let and the\r\n     * developer can handle them in a their own 'push' event callback\r\n     *\r\n     * @param callback The callback to be called when a push message is received\r\n     * and a notification must be shown. The callback will be given the data from\r\n     * the push message.\r\n     */\r\n    SWController.prototype.setBackgroundMessageHandler = function (callback) {\r\n        if (!callback || typeof callback !== 'function') {\r\n            throw errorFactory.create(ERROR_CODES.BG_HANDLER_FUNCTION_EXPECTED);\r\n        }\r\n        this.bgMessageHandler = callback;\r\n    };\r\n    /**\r\n     * @param url The URL to look for when focusing a client.\r\n     * @return Returns an existing window client or a newly opened WindowClient.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SWController.prototype.getWindowClient_ = function (url) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var parsedURL, clientList, suitableClient, i, parsedClientUrl;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        parsedURL = new URL(url, self.location.href).href;\r\n                        return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        suitableClient = null;\r\n                        for (i = 0; i < clientList.length; i++) {\r\n                            parsedClientUrl = new URL(clientList[i].url, self.location.href)\r\n                                .href;\r\n                            if (parsedClientUrl === parsedURL) {\r\n                                suitableClient = clientList[i];\r\n                                break;\r\n                            }\r\n                        }\r\n                        return [2 /*return*/, suitableClient];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This message will attempt to send the message to a window client.\r\n     * @param client The WindowClient to send the message to.\r\n     * @param message The message to send to the client.\r\n     * @returns Returns a promise that resolves after sending the message. This\r\n     * does not guarantee that the message was successfully received.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SWController.prototype.attemptToMessageClient_ = function (client, message) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                // NOTE: This returns a promise in case this API is abstracted later on to\r\n                // do additional work\r\n                if (!client) {\r\n                    throw errorFactory.create(ERROR_CODES.NO_WINDOW_CLIENT_TO_MSG);\r\n                }\r\n                client.postMessage(message);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @returns If there is currently a visible WindowClient, this method will\r\n     * resolve to true, otherwise false.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SWController.prototype.hasVisibleClients_ = function () {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var clientList;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        return [2 /*return*/, clientList.some(function (client) { return client.visibilityState === 'visible'; })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param msgPayload The data from the push event that should be sent to all\r\n     * available pages.\r\n     * @returns Returns a promise that resolves once the message has been sent to\r\n     * all WindowClients.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SWController.prototype.sendMessageToWindowClients_ = function (msgPayload) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var clientList, internalMsg;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        internalMsg = createNewMsg(MessageType.PUSH_MSG_RECEIVED, msgPayload);\r\n                        return [4 /*yield*/, Promise.all(clientList.map(function (client) {\r\n                                return _this.attemptToMessageClient_(client, internalMsg);\r\n                            }))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will register the default service worker and return the registration.\r\n     * @return he service worker registration to be used for the push service.\r\n     */\r\n    SWController.prototype.getSWRegistration_ = function () {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                return [2 /*return*/, self.registration];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will return the default VAPID key or the uint8array version of the\r\n     * public VAPID key provided by the developer.\r\n     */\r\n    SWController.prototype.getPublicVapidKey_ = function () {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var swReg, vapidKeyFromDatabase;\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        swReg = _a.sent();\r\n                        if (!swReg) {\r\n                            throw errorFactory.create(ERROR_CODES.SW_REGISTRATION_EXPECTED);\r\n                        }\r\n                        return [4 /*yield*/, this.getVapidDetailsModel().getVapidFromSWScope(swReg.scope)];\r\n                    case 2:\r\n                        vapidKeyFromDatabase = _a.sent();\r\n                        if (vapidKeyFromDatabase == null) {\r\n                            return [2 /*return*/, DEFAULT_PUBLIC_VAPID_KEY];\r\n                        }\r\n                        return [2 /*return*/, vapidKeyFromDatabase];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SWController;\r\n}(ControllerInterface));\r\nfunction getClientList() {\r\n    return self.clients.matchAll({\r\n        type: 'window',\r\n        includeUncontrolled: true\r\n        // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\r\n    });\r\n}\r\nfunction createNewMsg(msgType, msgData) {\r\n    return _a = {}, _a[MessageParameter.TYPE_OF_MSG] = msgType, _a[MessageParameter.DATA] = msgData, _a;\r\n    var _a;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\r\nvar DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WindowController = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"c\" /* __extends */])(WindowController, _super);\r\n    /**\r\n     * A service that provides a MessagingService instance.\r\n     */\r\n    function WindowController(app) {\r\n        var _this = _super.call(this, app) || this;\r\n        _this.registrationToUse = null;\r\n        _this.publicVapidKeyToUse = null;\r\n        _this.manifestCheckPromise = null;\r\n        _this.messageObserver = null;\r\n        // @ts-ignore: Unused variable error, this is not implemented yet.\r\n        _this.tokenRefreshObserver = null;\r\n        _this.onMessageInternal = Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"createSubscribe\"])(function (observer) {\r\n            _this.messageObserver = observer;\r\n        });\r\n        _this.onTokenRefreshInternal = Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"createSubscribe\"])(function (observer) {\r\n            _this.tokenRefreshObserver = observer;\r\n        });\r\n        _this.setupSWMessageListener_();\r\n        return _this;\r\n    }\r\n    /**\r\n     * This method returns an FCM token if it can be generated.\r\n     * The return promise will reject if the browser doesn't support\r\n     * FCM, if permission is denied for notifications or it's not\r\n     * possible to generate a token.\r\n     *\r\n     * @return Returns a promise that resolves to an FCM token or null if\r\n     * permission isn't granted.\r\n     */\r\n    WindowController.prototype.getToken = function () {\r\n        var _this = this;\r\n        // Check that the required API's are available\r\n        if (!this.isSupported_()) {\r\n            return Promise.reject(errorFactory.create(ERROR_CODES.UNSUPPORTED_BROWSER));\r\n        }\r\n        return this.manifestCheck_().then(function () {\r\n            return _super.prototype.getToken.call(_this);\r\n        });\r\n    };\r\n    /**\r\n     * The method checks that a manifest is defined and has the correct GCM\r\n     * sender ID.\r\n     * @return Returns a promise that resolves if the manifest matches\r\n     * our required sender ID\r\n     */\r\n    // Visible for testing\r\n    // TODO: make private\r\n    WindowController.prototype.manifestCheck_ = function () {\r\n        if (this.manifestCheckPromise) {\r\n            return this.manifestCheckPromise;\r\n        }\r\n        var manifestTag = document.querySelector('link[rel=\"manifest\"]');\r\n        if (!manifestTag) {\r\n            this.manifestCheckPromise = Promise.resolve();\r\n        }\r\n        else {\r\n            this.manifestCheckPromise = fetch(manifestTag.href)\r\n                .then(function (response) {\r\n                return response.json();\r\n            })\r\n                .catch(function () {\r\n                // If the download or parsing fails allow check.\r\n                // We only want to error if we KNOW that the gcm_sender_id is incorrect.\r\n            })\r\n                .then(function (manifestContent) {\r\n                if (!manifestContent) {\r\n                    return;\r\n                }\r\n                if (!manifestContent['gcm_sender_id']) {\r\n                    return;\r\n                }\r\n                if (manifestContent['gcm_sender_id'] !== '103953800507') {\r\n                    throw errorFactory.create(ERROR_CODES.INCORRECT_GCM_SENDER_ID);\r\n                }\r\n            });\r\n        }\r\n        return this.manifestCheckPromise;\r\n    };\r\n    /**\r\n     * Request permission if it is not currently granted\r\n     *\r\n     * @return Resolves if the permission was granted, otherwise rejects\r\n     */\r\n    WindowController.prototype.requestPermission = function () {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"d\" /* __generator */])(this, function (_a) {\r\n                if (\r\n                // TODO: Remove the cast when this issue is fixed:\r\n                // https://github.com/Microsoft/TypeScript/issues/14701\r\n                // tslint:disable-next-line no-any\r\n                Notification.permission === 'granted') {\r\n                    return [2 /*return*/];\r\n                }\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var managePermissionResult = function (result) {\r\n                            if (result === 'granted') {\r\n                                return resolve();\r\n                            }\r\n                            else if (result === 'denied') {\r\n                                return reject(errorFactory.create(ERROR_CODES.PERMISSION_BLOCKED));\r\n                            }\r\n                            else {\r\n                                return reject(errorFactory.create(ERROR_CODES.PERMISSION_DEFAULT));\r\n                            }\r\n                        };\r\n                        // The Notification.requestPermission API was changed to\r\n                        // return a promise so now have to handle both in case\r\n                        // browsers stop support callbacks for promised version\r\n                        var permissionPromise = Notification.requestPermission(managePermissionResult);\r\n                        if (permissionPromise) {\r\n                            // Prefer the promise version as it's the future API.\r\n                            permissionPromise.then(managePermissionResult);\r\n                        }\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method allows a developer to override the default service worker and\r\n     * instead use a custom service worker.\r\n     *\r\n     * @param registration The service worker registration that should be used to\r\n     * receive the push messages.\r\n     */\r\n    WindowController.prototype.useServiceWorker = function (registration) {\r\n        if (!(registration instanceof ServiceWorkerRegistration)) {\r\n            throw errorFactory.create(ERROR_CODES.SW_REGISTRATION_EXPECTED);\r\n        }\r\n        if (this.registrationToUse != null) {\r\n            throw errorFactory.create(ERROR_CODES.USE_SW_BEFORE_GET_TOKEN);\r\n        }\r\n        this.registrationToUse = registration;\r\n    };\r\n    /**\r\n     * This method allows a developer to override the default vapid key\r\n     * and instead use a custom VAPID public key.\r\n     *\r\n     * @param publicKey A URL safe base64 encoded string.\r\n     */\r\n    WindowController.prototype.usePublicVapidKey = function (publicKey) {\r\n        if (typeof publicKey !== 'string') {\r\n            throw errorFactory.create(ERROR_CODES.INVALID_PUBLIC_VAPID_KEY);\r\n        }\r\n        if (this.publicVapidKeyToUse != null) {\r\n            throw errorFactory.create(ERROR_CODES.USE_PUBLIC_KEY_BEFORE_GET_TOKEN);\r\n        }\r\n        var parsedKey = base64ToArrayBuffer(publicKey);\r\n        if (parsedKey.length !== 65) {\r\n            throw errorFactory.create(ERROR_CODES.PUBLIC_KEY_DECRYPTION_FAILED);\r\n        }\r\n        this.publicVapidKeyToUse = parsedKey;\r\n    };\r\n    /**\r\n     * @export\r\n     * @param nextOrObserver An observer object or a function triggered on\r\n     * message.\r\n     * @param error A function triggered on message error.\r\n     * @param completed function triggered when the observer is removed.\r\n     * @return The unsubscribe function for the observer.\r\n     */\r\n    WindowController.prototype.onMessage = function (nextOrObserver, error, completed) {\r\n        if (typeof nextOrObserver === 'function') {\r\n            return this.onMessageInternal(nextOrObserver, error, completed);\r\n        }\r\n        else {\r\n            return this.onMessageInternal(nextOrObserver);\r\n        }\r\n    };\r\n    /**\r\n     * @param nextOrObserver An observer object or a function triggered on token\r\n     * refresh.\r\n     * @param error A function triggered on token refresh error.\r\n     * @param completed function triggered when the observer is removed.\r\n     * @return The unsubscribe function for the observer.\r\n     */\r\n    WindowController.prototype.onTokenRefresh = function (nextOrObserver, error, completed) {\r\n        if (typeof nextOrObserver === 'function') {\r\n            return this.onTokenRefreshInternal(nextOrObserver, error, completed);\r\n        }\r\n        else {\r\n            return this.onTokenRefreshInternal(nextOrObserver);\r\n        }\r\n    };\r\n    /**\r\n     * Given a registration, wait for the service worker it relates to\r\n     * become activer\r\n     * @param registration Registration to wait for service worker to become active\r\n     * @return Wait for service worker registration to become active\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    WindowController.prototype.waitForRegistrationToActivate_ = function (registration) {\r\n        var serviceWorker = registration.installing || registration.waiting || registration.active;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!serviceWorker) {\r\n                // This is a rare scenario but has occured in firefox\r\n                reject(errorFactory.create(ERROR_CODES.NO_SW_IN_REG));\r\n                return;\r\n            }\r\n            // Because the Promise function is called on next tick there is a\r\n            // small chance that the worker became active or redundant already.\r\n            if (serviceWorker.state === 'activated') {\r\n                resolve(registration);\r\n                return;\r\n            }\r\n            if (serviceWorker.state === 'redundant') {\r\n                reject(errorFactory.create(ERROR_CODES.SW_REG_REDUNDANT));\r\n                return;\r\n            }\r\n            var stateChangeListener = function () {\r\n                if (serviceWorker.state === 'activated') {\r\n                    resolve(registration);\r\n                }\r\n                else if (serviceWorker.state === 'redundant') {\r\n                    reject(errorFactory.create(ERROR_CODES.SW_REG_REDUNDANT));\r\n                }\r\n                else {\r\n                    // Return early and wait to next state change\r\n                    return;\r\n                }\r\n                serviceWorker.removeEventListener('statechange', stateChangeListener);\r\n            };\r\n            serviceWorker.addEventListener('statechange', stateChangeListener);\r\n        });\r\n    };\r\n    /**\r\n     * This will register the default service worker and return the registration\r\n     * @return The service worker registration to be used for the push service.\r\n     */\r\n    WindowController.prototype.getSWRegistration_ = function () {\r\n        var _this = this;\r\n        if (this.registrationToUse) {\r\n            return this.waitForRegistrationToActivate_(this.registrationToUse);\r\n        }\r\n        // Make the registration null so we know useServiceWorker will not\r\n        // use a new service worker as registrationToUse is no longer undefined\r\n        this.registrationToUse = null;\r\n        return navigator.serviceWorker\r\n            .register(DEFAULT_SW_PATH, {\r\n            scope: DEFAULT_SW_SCOPE\r\n        })\r\n            .catch(function (err) {\r\n            throw errorFactory.create(ERROR_CODES.FAILED_DEFAULT_REGISTRATION, {\r\n                browserErrorMessage: err.message\r\n            });\r\n        })\r\n            .then(function (registration) {\r\n            return _this.waitForRegistrationToActivate_(registration).then(function () {\r\n                _this.registrationToUse = registration;\r\n                // We update after activation due to an issue with Firefox v49 where\r\n                // a race condition occassionally causes the service work to not\r\n                // install\r\n                registration.update();\r\n                return registration;\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will return the default VAPID key or the uint8array version of the public VAPID key\r\n     * provided by the developer.\r\n     */\r\n    WindowController.prototype.getPublicVapidKey_ = function () {\r\n        if (this.publicVapidKeyToUse) {\r\n            return Promise.resolve(this.publicVapidKeyToUse);\r\n        }\r\n        return Promise.resolve(DEFAULT_PUBLIC_VAPID_KEY);\r\n    };\r\n    /**\r\n     * This method will set up a message listener to handle\r\n     * events from the service worker that should trigger\r\n     * events in the page.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    WindowController.prototype.setupSWMessageListener_ = function () {\r\n        var _this = this;\r\n        if (!('serviceWorker' in navigator)) {\r\n            return;\r\n        }\r\n        navigator.serviceWorker.addEventListener('message', function (event) {\r\n            if (!event.data || !event.data[MessageParameter.TYPE_OF_MSG]) {\r\n                // Not a message from FCM\r\n                return;\r\n            }\r\n            var workerPageMessage = event.data;\r\n            switch (workerPageMessage[MessageParameter.TYPE_OF_MSG]) {\r\n                case MessageType.PUSH_MSG_RECEIVED:\r\n                case MessageType.NOTIFICATION_CLICKED:\r\n                    var pushMessage = workerPageMessage[MessageParameter.DATA];\r\n                    if (_this.messageObserver) {\r\n                        _this.messageObserver.next(pushMessage);\r\n                    }\r\n                    break;\r\n                default:\r\n                    // Noop.\r\n                    break;\r\n            }\r\n        }, false);\r\n    };\r\n    /**\r\n     * Checks to see if the required API's are valid or not.\r\n     * @return Returns true if the desired APIs are available.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    WindowController.prototype.isSupported_ = function () {\r\n        return ('serviceWorker' in navigator &&\r\n            'PushManager' in window &&\r\n            'Notification' in window &&\r\n            'fetch' in window &&\r\n            ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n            PushSubscription.prototype.hasOwnProperty('getKey'));\r\n    };\r\n    return WindowController;\r\n}(ControllerInterface));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerMessaging(instance) {\r\n    var messagingName = 'messaging';\r\n    var factoryMethod = function (app) {\r\n        if (self && 'ServiceWorkerGlobalScope' in self) {\r\n            return new SWController(app);\r\n        }\r\n        // Assume we are in the window context.\r\n        return new WindowController(app);\r\n    };\r\n    var namespaceExports = {\r\n        // no-inline\r\n        Messaging: WindowController\r\n    };\r\n    instance.INTERNAL.registerService(messagingName, factoryMethod, namespaceExports);\r\n}\r\nregisterMessaging(__WEBPACK_IMPORTED_MODULE_2__firebase_app__[\"default\"]);\n\n\n\n\n/***/ }),\n\n/***/ \"TUpU\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setLogLevel\", function() { return setLogLevel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Logger\", function() { return Logger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LogLevel\", function() { return LogLevel; });\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel)\r\n        return;\r\n    var now = new Date().toISOString();\r\n    switch (logType) {\r\n        /**\r\n         * By default, `console.debug` is not displayed in the developer console (in\r\n         * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n         * logs to the `console.log` function.\r\n         */\r\n        case LogLevel.DEBUG:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.VERBOSE:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.INFO:\r\n            console.info.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.WARN:\r\n            console.warn.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.ERROR:\r\n            console.error.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        default:\r\n            throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The log handler for the Logger instance.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError('Invalid value assigned to `logLevel`');\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));\r\n    };\r\n    return Logger;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.logLevel = level;\r\n    });\r\n}\n\n\n\n\n/***/ }),\n\n/***/ \"V7bb\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _firebase = __webpack_require__(\"YiEk\");\n\nvar _firebase2 = _interopRequireDefault(_firebase);\n\nvar _upload_progress = __webpack_require__(\"h6rB\");\n\nvar _messages = __webpack_require__(\"tHnM\");\n\nvar _photos_db = __webpack_require__(\"N5iS\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar camera = function camera() {\n  var d = document,\n      n = navigator,\n      c = console.log;\n  /*Todo el codigo de programacion asincrono y que interactue con\n  codigo html dinamico cono el retur , va a cargar\n  10 milisegundos despues de que carge el DOM*/\n\n  var cameraScripts = setInterval(function () {\n    if (d.readyState === 'complete') {\n      var cameraInit = function cameraInit() {\n        n.getMedia = n.getUserMedia || n.webkitGetUserMedia || n.mozGetUserMedia || n.msGetUserMedia;\n\n        if (!n.getMedia) {\n          output.innerHTML = (0, _messages.errorMsg)('Tu navegador NO soporta el uso de la cámara de tu dispositivo', null);\n        } else {\n          //recibe 3 parametros\n          //un objeto de los elementos que voy a utilizar\n          //una funcion para poder activar la camara\n          //manejar un error en caso de que la camara no se ative\n          n.getMedia({ video: true }, function (stream) {\n            //video.src = window.URL.createObjectURL(stream)\n            //Este error se debe a que la función createObjectURLestá obsoleta para Google Chrome.\n            //https://stackoverflow.com/questions/27120757/failed-to-execute-createobjecturl-on-url\n            video.srcObject = stream;\n            video.play();\n          }, function (err) {\n            return output.innerHTML = (0, _messages.errorMsg)('Hubo un error al acceder a la c\\xE1mara de tu dispositivo: ' + err.mesagge, err);\n          });\n        }\n      };\n\n      var takeSnapshot = function takeSnapshot() {\n        //ancho del videov\n        var width = video.videoWidth,\n            height = video.videoHeight;\n        //el canvas sirve para generar la imagen\n        canvas.width = width;\n        canvas.height = height;\n        //ppoder dibujar una imagen\n        context.drawImage(video, 10, 10);\n\n        return canvas.toDataURL('image/png');\n      };\n\n      var cameraRest = function cameraRest() {\n        //Volver a mostrar y reproducir el video\n        video.style.display = 'block';\n        video.play();\n        //Limpiar el snapshot de la imagen dinamica\n        photo.style.display = 'none';\n        photo.setAttribute('src', '');\n        //Limpiar el enlace de descarga\n        downloadPhotoBtn.querySelector('a').href = '#';\n        //Habilitar botones\n        deletePhotoBtn.classList.add('u-disabled');\n        uploadPhotoBtn.classList.add('u-disabled');\n        downloadPhotoBtn.classList.add('u-disabled');\n      };\n\n      //Para limpiar\n      clearInterval(cameraScripts);\n      var cameraApp = d.querySelector('.Camera'),\n          video = d.getElementById('camera-stream'),\n          photo = d.getElementById('photo'),\n          startCameraBtn = d.getElementById('start-camera'),\n          output = d.querySelector('.Camera').querySelector('.Progress-output'),\n          controls = d.querySelector('.Camera-menu'),\n\n      //takePhotoBtn toma la foto\n      takePhotoBtn = d.getElementById('take-photo'),\n          deletePhotoBtn = d.getElementById('delete-photo'),\n          uploadPhotoBtn = d.getElementById('upload-photo'),\n          downloadPhotoBtn = d.getElementById('download-photo'),\n          canvas = d.getElementById('canvas-snap'),\n          context = canvas.getContext('2d');\n\n      //cuando yo tome de nuevo la foto es un nuevo bloque de datos\n      var snapshot = void 0;\n\n      cameraInit();\n      //para ocultar el canvas\n      canvas.style.display = 'none';\n      photo.style.display = 'none';\n      //para encender la camara\n      startCameraBtn.addEventListener('click', function (e) {\n        e.preventDefault();\n        video.play();\n        video.style.display = 'block';\n        photo.style.display = 'none';\n      });\n\n      takePhotoBtn.addEventListener('click', function (e) {\n        e.preventDefault();\n        //Pausamos y Ocultamos el video\n        video.style.display = 'none';\n        video.pause();\n        //Mostramos la captura de la cámara en una imágen\n        snapshot = takeSnapshot();\n        photo.style.display = 'block';\n        photo.setAttribute('src', snapshot);\n        //Asignar la imagen capturada al enlace de descarga\n        downloadPhotoBtn.querySelector('a').href = snapshot;\n        //Habilitar botones de eliminar, subir y descargar\n        deletePhotoBtn.classList.remove('u-disabled');\n        uploadPhotoBtn.classList.remove('u-disabled');\n        downloadPhotoBtn.classList.remove('u-disabled');\n      });\n\n      deletePhotoBtn.addEventListener('click', function (e) {\n        e.preventDefault;\n        cameraRest();\n      });\n\n      uploadPhotoBtn.addEventListener('click', function (e) {\n        e.preventDefault();\n        var storageRef = _firebase2.default.storage().ref().child('edgram/photos'),\n            dbRef = _firebase2.default.database().ref().child('edgram/photos'),\n            user = _firebase2.default.auth().currentUser;\n        /*nombre d la imagen que toy subiendo\n        subir la imagen putString sube archivos en formato URL\n        parametro donde almaceno la iagen dataURL -> snapshot*/\n        var photoName = 'photo_' + Math.floor(Math.random() * 10000000),\n            uploadTask = storageRef.child(photoName).putString(snapshot, 'data_url');\n\n        uploadTask.on('state_changed', function (data) {\n          //c(data)\n          //Muestra el progreso\n          (0, _upload_progress.showProgress)();\n          //Conversion de que esta subiendo la imagen y que la barra va aumentando\n          (0, _upload_progress.progressStatus)(data);\n        }, function (err) {\n          //c(err, err.code, err.mesagge)\n          output.innerHTML = (0, _messages.errorMsg)('' + err.mesagge, err);\n        }, function () {\n          storageRef.child(photoName).getDownloadURL().then(function (url) {\n            //c(url)\n            output.innerHTML = (0, _messages.successMsg)('Tu foto se ha subido');\n            //Guardar la foto en la BD\n            (0, _photos_db.savePhotoInDB)(url, user);\n            //Ocultar el progreso\n            (0, _upload_progress.hideProgress)();\n            //Para que despues de tres segunos borre el contendio del html pa poder tomar otra foto\n            setTimeout(function () {\n              return output.innerHTML = '';\n            }, 3000);\n            //Vuelva a tener acceso al video\n            cameraRest();\n          }).catch(function (err) {\n            return output.innerHTML = (0, _messages.errorMsg)('' + err.mesagge, err);\n          });\n        });\n      });\n    }\n    /*img pra mostrar la captura del video, para generar\n    una captura de un video se usa una Api de canvas\n    canvas es el source que almacenara <img>*/\n    /*download con esta propiedad se puede descargarel contenido que se tenga es decir\n    guardar la imagen generar una imagen unica se uso ramdon y\n    cada vez que se descarge una imgane sera selfie1234 */\n  }, 100);\n  return '\\n  <article id=\"camera-app\" class=\"Camera  Content-section  u-hide\">\\n  <video muted id=\"camera-stream\" class=\"Camera-video\" ></video>\\n  <img id=\"photo\" class=\"Camera-photo\"  >\\n  <nav class=\"Camera-menu\">\\n    <button id=\"start-camera\" title=\"Iniciar C\\xE1mara\"><i class=\"fa fa-power-off\"></i></button>\\n    <button id=\"take-photo\" title=\"Tomar Foto\"><i class=\"fa fa-camera\"></i></button>\\n    <button class=\"u-disabled\" id=\"delete-photo\" title=\"Borrar Foto\"><i class=\"fa fa-trash\"></i></button>\\n    <button class=\"u-disabled\" id=\"upload-photo\" title=\"Subir Foto\"><i class=\"fa fa-upload\"></i></button>\\n    <button class=\"u-disabled\" id=\"download-photo\" title=\"Guardar Foto\"><a href=\"#\" download=\"selfie_' + Math.floor(Math.random() * 10000000) + '.png\"><i class=\"fa fa-download\"></i></a></button>\\n  </nav>\\n  <canvas id=\"canvas-snap\" ></canvas>\\n  ' + (0, _upload_progress.progressBar)() + '\\n</article>\\n  ';\n};\n\nexports.default = camera;\n\n/***/ }),\n\n/***/ \"VxYX\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"firebase\", function() { return firebase; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_util__ = __webpack_require__(\"58xA\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_util___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__firebase_util__);\n\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\n// An array to capture listeners before the true auth functions\r\n// exist\r\nvar tokenListeners = [];\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.services_ = {};\r\n        this.name_ = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"deepCopy\"])(options);\r\n        this.INTERNAL = {\r\n            getUid: function () { return null; },\r\n            getToken: function () { return Promise.resolve(null); },\r\n            addAuthTokenListener: function (callback) {\r\n                tokenListeners.push(callback);\r\n                // Make sure callback is called, asynchronously, in the absence of the auth module\r\n                setTimeout(function () { return callback(null); }, 0);\r\n            },\r\n            removeAuthTokenListener: function (callback) {\r\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this._automaticDataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this._automaticDataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            var services = [];\r\n            Object.keys(_this.services_).forEach(function (serviceKey) {\r\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\r\n                    services.push(_this.services_[serviceKey][instanceKey]);\r\n                });\r\n            });\r\n            return Promise.all(services.map(function (service) {\r\n                return service.INTERNAL.delete();\r\n            }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n            _this.services_ = {};\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage is the only one that is leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        if (!this.services_[name]) {\r\n            this.services_[name] = {};\r\n        }\r\n        if (!this.services_[name][instanceIdentifier]) {\r\n            /**\r\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n             * then we will pass that instance on, otherwise we pass `null`\r\n             */\r\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\r\n                ? instanceIdentifier\r\n                : undefined;\r\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\r\n            this.services_[name][instanceIdentifier] = service;\r\n        }\r\n        return this.services_[name][instanceIdentifier];\r\n    };\r\n    /**\r\n     * Callback function used to extend an App instance at the time\r\n     * of service instance creation.\r\n     */\r\n    FirebaseAppImpl.prototype.extendApp = function (props) {\r\n        var _this = this;\r\n        // Copy the object onto the FirebaseAppImpl prototype\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"deepExtend\"])(this, props);\r\n        /**\r\n         * If the app has overwritten the addAuthTokenListener stub, forward\r\n         * the active token listeners on to the true fxn.\r\n         *\r\n         * TODO: This function is required due to our current module\r\n         * structure. Once we are able to rely strictly upon a single module\r\n         * implementation, this code should be refactored and Auth should\r\n         * provide these stubs and the upgrade logic\r\n         */\r\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\r\n            tokenListeners.forEach(function (listener) {\r\n                _this.INTERNAL.addAuthTokenListener(listener);\r\n            });\r\n            tokenListeners = [];\r\n        }\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            error('app-deleted', { name: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var apps_ = {};\r\n    var factories = {};\r\n    var appHooks = {};\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        app: app,\r\n        apps: null,\r\n        Promise: Promise,\r\n        SDK_VERSION: '4.13.0',\r\n        INTERNAL: {\r\n            registerService: registerService,\r\n            createFirebaseNamespace: createFirebaseNamespace,\r\n            extendNamespace: extendNamespace,\r\n            createSubscribe: __WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"createSubscribe\"],\r\n            ErrorFactory: __WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"ErrorFactory\"],\r\n            removeApp: removeApp,\r\n            factories: factories,\r\n            useAsService: useAsService,\r\n            Promise: Promise,\r\n            deepExtend: __WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"deepExtend\"]\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"patchProperty\"])(namespace, 'default', namespace);\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        var app = apps_[name];\r\n        callAppHooks(app, 'delete');\r\n        delete apps_[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps_, name)) {\r\n            error('no-app', { name: name });\r\n        }\r\n        return apps_[name];\r\n    }\r\n    Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"patchProperty\"])(app, 'App', FirebaseAppImpl);\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            error('bad-app-name', { name: name + '' });\r\n        }\r\n        if (contains(apps_, name)) {\r\n            error('duplicate-app', { name: name });\r\n        }\r\n        var app = new FirebaseAppImpl(options, config, namespace);\r\n        apps_[name] = app;\r\n        callAppHooks(app, 'create');\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\r\n    }\r\n    /*\r\n     * Register a Firebase Service.\r\n     *\r\n     * firebase.INTERNAL.registerService()\r\n     *\r\n     * TODO: Implement serviceProperties.\r\n     */\r\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\r\n        // Cannot re-register a service that already exists\r\n        if (factories[name]) {\r\n            error('duplicate-service', { name: name });\r\n        }\r\n        // Capture the service factory for later service instantiation\r\n        factories[name] = createService;\r\n        // Capture the appHook, if passed\r\n        if (appHook) {\r\n            appHooks[name] = appHook;\r\n            // Run the **new** app hook on all existing apps\r\n            getApps().forEach(function (app) {\r\n                appHook('create', app);\r\n            });\r\n        }\r\n        // The Service namespace is an accessor function ...\r\n        var serviceNamespace = function (appArg) {\r\n            if (appArg === void 0) { appArg = app(); }\r\n            if (typeof appArg[name] !== 'function') {\r\n                // Invalid argument.\r\n                // This happens in the following case: firebase.storage('gs:/')\r\n                error('invalid-app-argument', { name: name });\r\n            }\r\n            // Forward service instance lookup to the FirebaseApp.\r\n            return appArg[name]();\r\n        };\r\n        // ... and a container for service-level properties.\r\n        if (serviceProperties !== undefined) {\r\n            Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"deepExtend\"])(serviceNamespace, serviceProperties);\r\n        }\r\n        // Monkey-patch the serviceNamespace onto the firebase namespace\r\n        namespace[name] = serviceNamespace;\r\n        // Patch the FirebaseAppImpl prototype\r\n        FirebaseAppImpl.prototype[name] = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var serviceFxn = this._getService.bind(this, name);\r\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\r\n        };\r\n        return serviceNamespace;\r\n    }\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"deepExtend\"])(namespace, props);\r\n    }\r\n    function callAppHooks(app, eventName) {\r\n        Object.keys(factories).forEach(function (serviceName) {\r\n            // Ignore virtual services\r\n            var factoryName = useAsService(app, serviceName);\r\n            if (factoryName === null) {\r\n                return;\r\n            }\r\n            if (appHooks[factoryName]) {\r\n                appHooks[factoryName](eventName, app);\r\n            }\r\n        });\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        var options = app.options;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\r\nfunction error(code, args) {\r\n    throw appErrors.create(code, args);\r\n}\r\n// TypeScript does not support non-string indexes!\r\n// let errors: {[code: AppError: string} = {\r\nvar errors = {\r\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    'bad-app-name': \"Illegal App name: '{$name}\",\r\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\r\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\r\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\r\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\r\n        'account is only allowed in a Node.js environment. On client ' +\r\n        'devices, you should instead initialize the SDK with an api key and ' +\r\n        'auth domain',\r\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nvar appErrors = new __WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"ErrorFactory\"]('app', 'Firebase', errors);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar firebase = createFirebaseNamespace();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (firebase);\n\n\n\n/***/ }),\n\n/***/ \"YiEk\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar firebase = __webpack_require__(\"niZR\");\n__webpack_require__(\"RFlV\");\n__webpack_require__(\"fsyv\");\n__webpack_require__(\"u48Y\");\n__webpack_require__(\"bvzA\");\n\nmodule.exports = firebase;\n\n\n/***/ }),\n\n/***/ \"ZRi6\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar header = function header() {\n  return \"\\n  <header class=\\\"Header u-fixed\\\">\\n  <h1 class=\\\"Header-logo\\\">EDgram</h1>\\n  </header>\\n  \";\n};\n\nexports.default = header;\n\n// u-fiexd es una clase auxiliar\n\n/***/ }),\n\n/***/ \"aC8z\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isAuth = exports.signOut = undefined;\n\nvar _firebase = __webpack_require__(\"YiEk\");\n\nvar _firebase2 = _interopRequireDefault(_firebase);\n\nvar _app = __webpack_require__(\"qLaj\");\n\nvar _app2 = _interopRequireDefault(_app);\n\nvar _init = __webpack_require__(\"jx8D\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar d = document,\n    c = console.log;\n\n//Codigo para logguearme\nvar githubSignIn = function githubSignIn() {\n  var provider = new _firebase2.default.auth.GithubAuthProvider();\n  _firebase2.default.auth().signInWithPopup(provider).then(function (result) {\n    return c(result.user.email + ' ha iniciado sesi\\xF3n con GitHub', result);\n  }).catch(function (err) {\n    return c('Error: ' + err.code + ': ' + err.message);\n  });\n};\n\n//Codigo para desconectarme de github\nvar githubSignOut = function githubSignOut() {\n  _firebase2.default.auth().signOut().then(function () {\n    return c('Te has desconectado correctamente de GitHub');\n  }).catch(function () {\n    return c('Ocurrió un error al desconectarse de GitHub');\n  });\n};\n\n//Permite conectarse\nvar signIn = function signIn() {\n  //busca un selector valido\n  d.addEventListener('click', function (e) {\n    if (e.target.matches('.Sign-button'))\n      //alert(\"Solicitando permiso github\")\n      githubSignIn();\n  });\n  //retorna un codigo html y se activa la clase app\n  return '\\n    <div class=\"Sign\">\\n      <h1 class=\"Sign-title\">EDgram</h1>\\n      <button class=\"Sign-button\">\\n        <i class=\"fa fa-sign-in\"></i>\\n        Entra con\\n        <i class=\"fa fa-github\"></i>\\n      </button>\\n    </div>\\n  ';\n};\n\n//Permite desconectarme\nvar signOut = exports.signOut = function signOut() {\n  d.addEventListener('click', function (e) {\n    if (e.target.matches('.logout')) githubSignOut();\n  });\n\n  return '\\n    <button class=\"logout\" title=\"Salir\">\\n      <i class=\"logout fa fa-sign-out\"></i>\\n    </button>\\n  ';\n};\n\n/*va a revisar el estado de la conexion\nEvalua si el usuario esta activo y tiene credenciales validas*/\nvar isAuth = exports.isAuth = function isAuth() {\n  _firebase2.default.auth().onAuthStateChanged(function (user) {\n    var EDgram = d.querySelector('.EDgram');\n    // c(user)\n\n    if (user) {\n      EDgram.innerHTML = (0, _app2.default)();\n      EDgram.classList.add('u-jc-flex-start');\n      (0, _init.pwa)();\n      //c('Usuario Autenticado')\n    } else {\n      EDgram.innerHTML = signIn();\n      EDgram.classList.remove('u-jc-flex-start');\n      //c('Usuario NO Autenticado')\n    }\n\n    (0, _init.isOnLine)();\n  });\n};\n\n/***/ }),\n\n/***/ \"bvzA\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n__webpack_require__(\"wU43\");\n\n\n/***/ }),\n\n/***/ \"cpTA\":\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n\n/***/ \"fsyv\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = __webpack_require__(\"2vmM\");\n\n\n/***/ }),\n\n/***/ \"h6ac\":\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n\n/***/ \"h6rB\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar progressBar = exports.progressBar = function progressBar() {\n  return '\\n<div class=\"Progress  u-hide\">\\n<progress value=\"0\" max=\"100\" class=\"Progress-bar\"></progress>\\n<span class=\"Progress-advance\"></span>\\n</div>\\n<div class=\"Progress-output\"></div>\\n';\n};\n\n/*Progress-output Impirmir en pantalla las imagenes o\nlos errores*/\n\n//Recibe datos del snapshock de firebase\nvar progressStatus = exports.progressStatus = function progressStatus(data) {\n  var d = document,\n      c = console.log,\n      progress = d.querySelectorAll('.Progress'),\n      progressBar = d.querySelectorAll('.Progress-bar'),\n      progressAdvance = d.querySelectorAll('.Progress-advance'),\n      progressOutPut = d.querySelectorAll('.Progress-output');\n\n  progress.forEach(function (progress) {\n    var advance = Math.floor(data.bytesTransferred / data.totalBytes * 100);\n    progress.querySelector('.Progress-bar').value = advance;\n    progress.querySelector('.Progress-advance').innerHTML = advance + ' %';\n    //c(advance)\n  });\n};\n\nvar showProgress = exports.showProgress = function showProgress() {\n  return document.querySelectorAll('.Progress').forEach(function (bar) {\n    return bar.classList.remove('u-hide');\n  });\n};\n\n//Para limpiar el proceso la barra\nvar hideProgress = exports.hideProgress = function hideProgress() {\n  return document.querySelectorAll('.Progress').forEach(function (bar) {\n    return bar.classList.add('u-hide');\n  });\n};\n//Para resetear el proceso\nvar cleanProgress = exports.cleanProgress = function cleanProgress() {\n  var d = document;\n  d.querySelectorAll('.Progress-output').forEach(function (output) {\n    return output.innerHTML = \"\";\n  });\n  d.querySelectorAll('.Progress-bar').forEach(function (bar) {\n    return bar.value = 0;\n  });\n  d.querySelectorAll('.Progress-advance').forEach(function (advance) {\n    return advance.innerHTML = \"\";\n  });\n};\n\n/***/ }),\n\n/***/ \"jnwl\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar firebase = __webpack_require__(\"IxUF\");\n__webpack_require__(\"PHi2\");\n__webpack_require__(\"NohU\");\n__webpack_require__(\"OJYo\");\n__webpack_require__(\"k+HB\");\n\nmodule.exports = firebase;\n\n\n/***/ }),\n\n/***/ \"jx8D\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ga = exports.isOnLine = exports.pwa = exports.init = undefined;\n\nvar _firebase = __webpack_require__(\"YiEk\");\n\nvar _firebase2 = _interopRequireDefault(_firebase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar config = {\n  apiKey: \"AIzaSyCRd5uXBz9IrBl6LGfCexOqgFfbShpr0sc\",\n  authDomain: \"edgram-224016.firebaseapp.com\",\n  databaseURL: \"https://edgram-224016.firebaseio.com\",\n  projectId: \"edgram-224016\",\n  storageBucket: \"edgram-224016.appspot.com\",\n  messagingSenderId: \"1011889377331\"\n},\n    d = document,\n    w = window,\n    n = navigator,\n    c = console.log;\n\nvar init = exports.init = function init() {\n  return _firebase2.default.initializeApp(config);\n};\n\nvar pwa = exports.pwa = function pwa() {\n  //Aqui va a contener todas las validaciones\n  //Registro de SW\n  if ('serviceWorker' in n) {\n    n.serviceWorker.register('./sw.js').then(function (registration) {\n      c(registration);\n      c('Service Worker registrado con éxito', registration.scope);\n    }).catch(function (err) {\n      return c(\"Registro de Service Worker fallido\", err);\n    });\n  }\n\n  //Activar Notificaciones\n  if (w.Notification && Notification.permission !== 'denied') {\n    Notification.requestPermission(function (status) {\n      console.log(status);\n      var n = new Notification('EDgram', {\n        body: 'Bienvenid@ :)',\n        icon: './icon_192x192.png'\n      });\n    });\n  }\n\n  //Activar Sincronización de Fondo\n  if ('serviceWorker' in n && 'SyncManager' in w) {\n    var registerBGSync = function registerBGSync() {\n      n.serviceWorker.ready.then(function (registration) {\n        return registration.sync.register('github').then(function () {\n          return c('Sincronización de Fondo Registrada');\n        }).catch(function (err) {\n          return c('Fallo la Sincronización de Fondo', err);\n        });\n      });\n    };\n\n    registerBGSync();\n  }\n};\n\nvar isOnLine = exports.isOnLine = function isOnLine() {\n  //Detección del Estado de la Conexión\n  var header = d.querySelector('.Header'),\n      footer = d.querySelector('.Footer'),\n      metaTagTheme = d.querySelector('meta[name=theme-color]');\n\n  function networkStatus(e) {\n    c(e, e.type);\n\n    if (n.onLine) {\n      metaTagTheme.setAttribute('content', '#F7DF1E');\n      header.classList.remove('u-offline');\n      footer.classList.remove('u-offline');\n      alert('Conexión Recuperada :)');\n    } else {\n      metaTagTheme.setAttribute('content', '#666');\n      header.classList.add('u-offline');\n      footer.classList.add('u-offline');\n      alert('Conexión Perdida :(');\n    }\n  }\n\n  w.addEventListener('online', networkStatus);\n  w.addEventListener('offline', networkStatus);\n};\n\nvar ga = exports.ga = function ga() {\n  var _gaq = _gaq || [];\n  _gaq.push(['_setAccount', 'UA-XXXXXXXX-X']);\n  _gaq.push(['_setDomainName', 'jonmircha.github.io/edgram']);\n  _gaq.push(['_trackPageview']);\n  (function () {\n    var ga = document.createElement('script');ga.type = 'text/javascript';ga.async = true;\n    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n    var s = document.getElementsByTagName('script')[0];s.parentNode.insertBefore(ga, s);\n  })();\n};\n\n/***/ }),\n\n/***/ \"k+HB\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n__webpack_require__(\"wU43\");\n\n\n/***/ }),\n\n/***/ \"niZR\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n__webpack_require__(\"wGjj\");\nmodule.exports = __webpack_require__(\"VxYX\").default;\n\n\n/***/ }),\n\n/***/ \"o5Um\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _firebase = __webpack_require__(\"YiEk\");\n\nvar _firebase2 = _interopRequireDefault(_firebase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar profile = function profile() {\n  var d = document,\n      c = console.log,\n      user = _firebase2.default.auth().currentUser,\n      dbRef = _firebase2.default.database().ref().child('photos');\n  var profilePhotos = '';\n\n  /*Todo el codigo de programacion asincrono y que interactue con\n  codigo html dinamico cono el retur , va a cargar\n  10 milisegundos despues de que carge el DOM*/\n\n  var profileScripts = setInterval(function () {\n    if (d.readyState === 'complete') {\n      //Para limpiar\n      clearInterval(profileScripts);\n      //esto es una coll back  para ver como estan los datos en la BD en tiempo real\n      //solo al momento de cargar es decir solo una vez\n      dbRef.once('value', function (data) {\n        //once extraela foto por la primera vez\n        //valor de la propiedad de los datos key\n        //Ver los valores val()\n        //c(data, data.key, data.val())\n        //Por cada dato que traiga la bd\n        /*comparar  va a ser comparado con el uid de el usuario con el que\n        se loogeo*/\n        data.forEach(function (photo) {\n          if (photo.val().uid === user.uid) {\n            //concateno una img\n            profilePhotos += '<img src=\"' + photo.val().photoURL + '\">';\n          }\n        });\n        /*Que en el selector de profile photo guarde el valor\n         de dicha foto profilePhotos*/\n        d.querySelector(\".Profile-photos\").innerHTML = profilePhotos;\n      });\n      //Cada vez que tome una nueva foto lo detecte y lo envie al timeline del profile\n      dbRef.on('child_added', function (data) {\n        /*va agregando al elemento de las fotos las imagenes\n        deacuerdo a como se va tomando*/\n        if (data.val().uid === user.uid) {\n          //Cuando se detecte un contenido nuevo se agrege la imagen que se esta obteniendoo\n          d.querySelector(\".Profile-photos\").innerHTML += '<img src=\"' + data.val().photoURL + '\">';\n        }\n      });\n    }\n  }, 100);\n  return '\\n  <article class=\"Profile  Content-section  u-hide\">\\n  <h2 class=\"Profile-name\">' + user.displayName + '</h2>\\n  <p class=\"Profile-email\">' + user.email + '</p>\\n  <img class=\"Profile-avatar\" src=\"' + user.photoURL + '\"></img>\\n  <h3 class=\\'u-title\\'>Tus Fotos</h3>\\n  <aside class=\"Profile-photos\"></aside>\\n\\n  </article>\\n  ';\n};\n\nexports.default = profile;\n//<p>${user.uid}</p> con este muestras el id de la foto\n\n/***/ }),\n\n/***/ \"pBGv\":\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n\n/***/ \"qLaj\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _header = __webpack_require__(\"ZRi6\");\n\nvar _header2 = _interopRequireDefault(_header);\n\nvar _footer = __webpack_require__(\"Ahgo\");\n\nvar _footer2 = _interopRequireDefault(_footer);\n\nvar _profile = __webpack_require__(\"o5Um\");\n\nvar _profile2 = _interopRequireDefault(_profile);\n\nvar _timeline = __webpack_require__(\"FgbG\");\n\nvar _timeline2 = _interopRequireDefault(_timeline);\n\nvar _uploader = __webpack_require__(\"uufy\");\n\nvar _uploader2 = _interopRequireDefault(_uploader);\n\nvar _camera = __webpack_require__(\"V7bb\");\n\nvar _camera2 = _interopRequireDefault(_camera);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//Retorno implicito cuando ahi poco codigo\nvar app = function app() {\n  return '\\n' + (0, _header2.default)() + '\\n  <section class=\"Content\">\\n    ' + (0, _profile2.default)() + '\\n    ' + (0, _timeline2.default)() + '\\n    ' + (0, _camera2.default)() + '\\n    ' + (0, _uploader2.default)() + '\\n  </section>\\n  ' + (0, _footer2.default)() + '\\n';\n};\n\nexports.default = app;\n\n/***/ }),\n\n/***/ \"qrAv\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"h6ac\"), __webpack_require__(\"pBGv\")))\n\n/***/ }),\n\n/***/ \"rjHE\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"__extends\"] = __extends;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (immutable) */ __webpack_exports__[\"__rest\"] = __rest;\n/* harmony export (immutable) */ __webpack_exports__[\"__decorate\"] = __decorate;\n/* harmony export (immutable) */ __webpack_exports__[\"__param\"] = __param;\n/* harmony export (immutable) */ __webpack_exports__[\"__metadata\"] = __metadata;\n/* harmony export (immutable) */ __webpack_exports__[\"__awaiter\"] = __awaiter;\n/* harmony export (immutable) */ __webpack_exports__[\"__generator\"] = __generator;\n/* harmony export (immutable) */ __webpack_exports__[\"__exportStar\"] = __exportStar;\n/* harmony export (immutable) */ __webpack_exports__[\"__values\"] = __values;\n/* harmony export (immutable) */ __webpack_exports__[\"__read\"] = __read;\n/* harmony export (immutable) */ __webpack_exports__[\"__spread\"] = __spread;\n/* harmony export (immutable) */ __webpack_exports__[\"__await\"] = __await;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncGenerator\"] = __asyncGenerator;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncDelegator\"] = __asyncDelegator;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncValues\"] = __asyncValues;\n/* harmony export (immutable) */ __webpack_exports__[\"__makeTemplateObject\"] = __makeTemplateObject;\n/* harmony export (immutable) */ __webpack_exports__[\"__importStar\"] = __importStar;\n/* harmony export (immutable) */ __webpack_exports__[\"__importDefault\"] = __importDefault;\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n/***/ }),\n\n/***/ \"tHnM\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar errorMsg = exports.errorMsg = function errorMsg(msg, err) {\n  console.log(err);\n  return \"\\n  <div class=\\\"Message-error\\\">\\n  <p>Error:<b>\" + msg + \"</b><i class=\\\"fa fa-frown-o\\\"></i></p>\\n  </div>\\n  \";\n};\n\nvar successMsg = exports.successMsg = function successMsg(msg) {\n\n  return \"\\n  <div class=\\\"Message-success\\\">\\n  <p>Exito:<b>\" + msg + \"</b><i class=\\\"fa fa-smile-o\\\"></i></p>\\n  </div>\\n  \";\n};\n\n/***/ }),\n\n/***/ \"u48Y\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n__webpack_require__(\"SloY\");\n\n\n/***/ }),\n\n/***/ \"uufy\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _firebase = __webpack_require__(\"YiEk\");\n\nvar _firebase2 = _interopRequireDefault(_firebase);\n\nvar _upload_progress = __webpack_require__(\"h6rB\");\n\nvar _messages = __webpack_require__(\"tHnM\");\n\nvar _photos_db = __webpack_require__(\"N5iS\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar uploader = function uploader() {\n  var d = document,\n      c = console.log;\n  /*Todo el codigo de programacion asincrono y que interactue con\n  codigo html dinamico cono el retur , va a cargar\n  10 milisegundos despues de que carge el DOM*/\n\n  var uploaderScripts = setInterval(function () {\n    if (d.readyState === 'complete') {\n      //Para limpiar\n      clearInterval(uploaderScripts);\n\n      var storageRef = _firebase2.default.storage().ref().child('photos'),\n          dbRef = _firebase2.default.database().ref().child('photo'),\n\n      //Solicita el servicio de firebase auth, currenUser es el usuario actual\n      user = _firebase2.default.auth().currentUser,\n\n      //Guardar en una variable el formulario\n      form = d.getElementById('upload'),\n          _uploader = d.getElementById('uploader'),\n          output = d.querySelector('.Uploader').querySelector('.Progress-output');\n\n      _uploader.addEventListener('change', function (e) {\n        //alert('funciona')\n        //Muestra en formato JSON los archivos de las fotos que subo\n        //c(e.target.files)\n        //Aqui donde imprimire los mensajes o imagenes que se vallan subiendo\n        output.innerHTML = '';\n\n        Array.from(e.target.files).forEach(function (file) {\n          //c(e.target.files, file)\n          //Valida que se suba una imagen con elformato correcto\n          if (file.type.match('image.*')) {\n            //c('Subimos')\n            //output.innerHTML=successMsg('Tu archivo si es una imagen')\n            var uploadTask = storageRef.child(file.name).put(file);\n\n            uploadTask.on('state_changed', function (data) {\n              //Envia datos  c(data)\n              (0, _upload_progress.showProgress)();\n              (0, _upload_progress.progressStatus)(data);\n            }, function (err) {\n              //Si desactivo el serviceWorked se desconecta el firebase tabn\n              //c(err, err.code,err.message)\n              output.innerHTML = (0, _messages.errorMsg)(err.message + '%', err);\n            }, function () {\n              //visualizar la foto\n              //obtiene la URL getDownloadURL y es unapromesa y nos devuelve una url\n              storageRef.child(file.name).getDownloadURL().then(function (url) {\n                c(url);\n                //Insertar  codigo html insertAdjacentHTML\n                output.insertAdjacentHTML('afterbegin', (0, _messages.successMsg)('Tu Foto se ah subido') + '\\n              <img src=\"' + url + '\">');\n                //user se crear al momento de indicar la autenticacion\n                (0, _photos_db.savePhotoInDB)(url, user);\n\n                //Limpiar la pantalla cuando se sube una imagen\n                (0, _upload_progress.hideProgress)();\n              }).catch(function (err) {\n                return output.innerHTML = (0, _messages.errorMsg)('' + err.message, err);\n              });\n            });\n            //output.innerHTML=successMsg('Tu archivo si es una imagen')\n          } else {\n            //c('No subimos')\n            output.innerHTML = (0, _messages.errorMsg)('Tu archivo debe ser una imagen', null);\n          }\n        });\n        form.reset();\n      });\n      //c(user)\n\n\n      /*Otro MODO\n      //storage manda a llamar el servicio de lamacenamento de storage\n      const storage= firebase.storage(),\n      //bucket va a ser la referencia a mi careta virtual de mi servico de firebase\n      bucket=storage.ref(),\n      //photosRef va a ser la referencia crear un hijo que se llame photos\n      photosRef=bucket.child('photo'),\n      Referencia al servicio de mi sevicio, luego a la referencia,luego al objeto Json crea unn\n      objeto que se llame foto y ahi guarda la descripcion de las photos\n      fileRef=firebase.database().ref().child('photo'),\n      user= firebase.auth().currentUser\n      */\n    }\n  }, 100);\n\n  return '\\n  <article class=\"Uploader  Content-section  u-hide\">\\n  <h2 class=\"u-title\">Sube tus Fotos</h2>\\n  <form name=\"upload\" id=\"upload\">\\n    <input type=\"file\" id=\"uploader\" multiple>\\n    <label for=\"uploader\">\\n      <i class=\"fa fa-cloud-upload\" title =\"Subir Foto(s)\"></i>\\n    </label>\\n  </form>\\n  ' + (0, _upload_progress.progressBar)() + '\\n</article>\\n  ';\n};\n\nexports.default = uploader;\n\n/***/ }),\n\n/***/ \"wGjj\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(setImmediate, global) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_whatwg_fetch__ = __webpack_require__(\"cpTA\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_whatwg_fetch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_whatwg_fetch__);\n\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  this._state = 0;\n  this._handled = false;\n  this._value = undefined;\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = function(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n};\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\nif (!globalNS.Promise) {\n  globalNS.Promise = Promise;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar _global = createCommonjsModule(function (module) {\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n});\n\nvar _core = createCommonjsModule(function (module) {\nvar core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n});\nvar _core_1 = _core.version;\n\nvar _isObject = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\nvar _anObject = function (it) {\n  if (!_isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\nvar _fails = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n// Thank's IE8 for his funny defineProperty\nvar _descriptors = !_fails(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\nvar document = _global.document;\n// typeof document.createElement is 'object' in old IE\nvar is = _isObject(document) && _isObject(document.createElement);\nvar _domCreate = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\nvar _ie8DomDefine = !_descriptors && !_fails(function () {\n  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\n\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nvar _toPrimitive = function (it, S) {\n  if (!_isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\nvar dP = Object.defineProperty;\n\nvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  _anObject(O);\n  P = _toPrimitive(P, true);\n  _anObject(Attributes);\n  if (_ie8DomDefine) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\nvar _objectDp = {\n\tf: f\n};\n\nvar _propertyDesc = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\nvar _hide = _descriptors ? function (object, key, value) {\n  return _objectDp.f(object, key, _propertyDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\nvar hasOwnProperty = {}.hasOwnProperty;\nvar _has = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\nvar id = 0;\nvar px = Math.random();\nvar _uid = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\nvar _redefine = createCommonjsModule(function (module) {\nvar SRC = _uid('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\n_core.inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) _has(val, 'name') || _hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === _global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    _hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    _hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n});\n\nvar _aFunction = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n// optional / simple context binding\n\nvar _ctx = function (fn, that, length) {\n  _aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\n    // extend global\n    if (target) _redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) _hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\n_global.core = _core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nvar _export = $export;\n\nvar toString = {}.toString;\n\nvar _cof = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\n// eslint-disable-next-line no-prototype-builtins\nvar _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return _cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n// 7.2.1 RequireObjectCoercible(argument)\nvar _defined = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n// 7.1.13 ToObject(argument)\n\nvar _toObject = function (it) {\n  return Object(_defined(it));\n};\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nvar _toInteger = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n// 7.1.15 ToLength\n\nvar min = Math.min;\nvar _toLength = function (it) {\n  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n// 7.2.2 IsArray(argument)\n\nvar _isArray = Array.isArray || function isArray(arg) {\n  return _cof(arg) == 'Array';\n};\n\nvar SHARED = '__core-js_shared__';\nvar store = _global[SHARED] || (_global[SHARED] = {});\nvar _shared = function (key) {\n  return store[key] || (store[key] = {});\n};\n\nvar _wks = createCommonjsModule(function (module) {\nvar store = _shared('wks');\n\nvar Symbol = _global.Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n});\n\nvar SPECIES = _wks('species');\n\nvar _arraySpeciesConstructor = function (original) {\n  var C;\n  if (_isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || _isArray(C.prototype))) C = undefined;\n    if (_isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\n\n\nvar _arraySpeciesCreate = function (original, length) {\n  return new (_arraySpeciesConstructor(original))(length);\n};\n\n// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\n\n\n\n\n\nvar _arrayMethods = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || _arraySpeciesCreate;\n  return function ($this, callbackfn, that) {\n    var O = _toObject($this);\n    var self = _iobject(O);\n    var f = _ctx(callbackfn, that, 3);\n    var length = _toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = _wks('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) _hide(ArrayProto, UNSCOPABLES, {});\nvar _addToUnscopables = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\n\nvar $find = _arrayMethods(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n_export(_export.P + _export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY);\n\nvar find = _core.Array.find;\n\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\n\nvar $find$1 = _arrayMethods(6);\nvar KEY$1 = 'findIndex';\nvar forced$1 = true;\n// Shouldn't skip holes\nif (KEY$1 in []) Array(1)[KEY$1](function () { forced$1 = false; });\n_export(_export.P + _export.F * forced$1, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY$1);\n\nvar findIndex = _core.Array.findIndex;\n\n// 7.2.8 IsRegExp(argument)\n\n\nvar MATCH = _wks('match');\nvar _isRegexp = function (it) {\n  var isRegExp;\n  return _isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : _cof(it) == 'RegExp');\n};\n\n// helper for String#{startsWith, endsWith, includes}\n\n\n\nvar _stringContext = function (that, searchString, NAME) {\n  if (_isRegexp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(_defined(that));\n};\n\nvar MATCH$1 = _wks('match');\nvar _failsIsRegexp = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH$1] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n_export(_export.P + _export.F * _failsIsRegexp(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = _stringContext(this, searchString, STARTS_WITH);\n    var index = _toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n\nvar startsWith = _core.String.startsWith;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"6orE\").setImmediate, __webpack_require__(\"h6ac\")))\n\n/***/ }),\n\n/***/ \"wU43\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"registerStorage\", function() { return registerStorage; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_app__ = __webpack_require__(\"VxYX\");\n\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain and scheme for API calls.\r\n */\r\nvar domainBase = 'https://firebasestorage.googleapis.com';\r\n/**\r\n * Domain and scheme for object downloads.\r\n */\r\nvar downloadBase = 'https://firebasestorage.googleapis.com';\r\n/**\r\n * Base URL for non-upload calls to the API.\r\n */\r\nvar apiBaseUrl = '/v0';\r\n/**\r\n * Base URL for upload calls to the API.\r\n */\r\nvar apiUploadBaseUrl = '/v0';\r\nvar configOption = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n */\r\nvar defaultMaxOperationRetryTime = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n */\r\nvar defaultMaxUploadRetryTime = 10 * 60 * 100;\r\n/**\r\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\r\n * enough for us to use it directly.\r\n */\r\nvar minSafeInteger = -9007199254740991;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FirebaseStorageError = /** @class */ (function () {\r\n    function FirebaseStorageError(code, message) {\r\n        this.code_ = prependCode(code);\r\n        this.message_ = 'Firebase Storage: ' + message;\r\n        this.serverResponse_ = null;\r\n        this.name_ = 'FirebaseError';\r\n    }\r\n    FirebaseStorageError.prototype.codeProp = function () {\r\n        return this.code;\r\n    };\r\n    FirebaseStorageError.prototype.codeEquals = function (code) {\r\n        return prependCode(code) === this.codeProp();\r\n    };\r\n    FirebaseStorageError.prototype.serverResponseProp = function () {\r\n        return this.serverResponse_;\r\n    };\r\n    FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\r\n        this.serverResponse_ = serverResponse;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\r\n        get: function () {\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\r\n        get: function () {\r\n            return this.code_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\r\n        get: function () {\r\n            return this.message_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        get: function () {\r\n            return this.serverResponse_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}());\r\nvar Code = {\r\n    // Shared between all platforms\r\n    UNKNOWN: 'unknown',\r\n    OBJECT_NOT_FOUND: 'object-not-found',\r\n    BUCKET_NOT_FOUND: 'bucket-not-found',\r\n    PROJECT_NOT_FOUND: 'project-not-found',\r\n    QUOTA_EXCEEDED: 'quota-exceeded',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    UNAUTHORIZED: 'unauthorized',\r\n    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\r\n    INVALID_CHECKSUM: 'invalid-checksum',\r\n    CANCELED: 'canceled',\r\n    // JS specific\r\n    INVALID_EVENT_NAME: 'invalid-event-name',\r\n    INVALID_URL: 'invalid-url',\r\n    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\r\n    NO_DEFAULT_BUCKET: 'no-default-bucket',\r\n    CANNOT_SLICE_BLOB: 'cannot-slice-blob',\r\n    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\r\n    NO_DOWNLOAD_URL: 'no-download-url',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\r\n    APP_DELETED: 'app-deleted',\r\n    INVALID_ROOT_OPERATION: 'invalid-root-operation',\r\n    INVALID_FORMAT: 'invalid-format',\r\n    INTERNAL_ERROR: 'internal-error'\r\n};\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new FirebaseStorageError(Code.UNKNOWN, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\r\n}\r\nfunction unauthorized(path) {\r\n    return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(index, fnName, message) {\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\r\n}\r\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\r\n    var countPart;\r\n    var plural;\r\n    if (argMin === argMax) {\r\n        countPart = argMin;\r\n        plural = argMin === 1 ? 'argument' : 'arguments';\r\n    }\r\n    else {\r\n        countPart = 'between ' + argMin + ' and ' + argMax;\r\n        plural = 'arguments';\r\n    }\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' +\r\n        fnName +\r\n        '`: Expected ' +\r\n        countPart +\r\n        ' ' +\r\n        plural +\r\n        ', received ' +\r\n        real +\r\n        '.');\r\n}\r\nfunction appDeleted() {\r\n    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StringFormat = {\r\n    RAW: 'raw',\r\n    BASE64: 'base64',\r\n    BASE64URL: 'base64url',\r\n    DATA_URL: 'data_url'\r\n};\r\nfunction formatValidator(stringFormat) {\r\n    switch (stringFormat) {\r\n        case StringFormat.RAW:\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n        case StringFormat.DATA_URL:\r\n            return;\r\n        default:\r\n            throw 'Expected one of the event types: [' +\r\n                StringFormat.RAW +\r\n                ', ' +\r\n                StringFormat.BASE64 +\r\n                ', ' +\r\n                StringFormat.BASE64URL +\r\n                ', ' +\r\n                StringFormat.DATA_URL +\r\n                '].';\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, opt_contentType) {\r\n        this.data = data;\r\n        this.contentType = opt_contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, string) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(string));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, string));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(string), dataURLContentType_(string));\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(string) {\r\n    var b = [];\r\n    for (var i = 0; i < string.length; i++) {\r\n        var c = string.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) == 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < string.length - 1 &&\r\n                        (string.charCodeAt(i + 1) & 64512) == 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = string.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) == 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(string) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(string);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, string) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = string.indexOf('-') !== -1;\r\n            var hasUnder = string.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = string.indexOf('+') !== -1;\r\n            var hasSlash = string.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            string = string.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = atob(string);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(string) {\r\n    var parts = new DataURLParts(string);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(string) {\r\n    var parts = new DataURLParts(string);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TaskEvent = {\r\n    /** Triggered whenever the task changes or progress is updated. */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\nvar InternalTaskState = {\r\n    RUNNING: 'running',\r\n    PAUSING: 'pausing',\r\n    PAUSED: 'paused',\r\n    SUCCESS: 'success',\r\n    CANCELING: 'canceling',\r\n    CANCELED: 'canceled',\r\n    ERROR: 'error'\r\n};\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case InternalTaskState.RUNNING:\r\n        case InternalTaskState.PAUSING:\r\n        case InternalTaskState.CANCELING:\r\n            return TaskState.RUNNING;\r\n        case InternalTaskState.PAUSED:\r\n            return TaskState.PAUSED;\r\n        case InternalTaskState.SUCCESS:\r\n            return TaskState.SUCCESS;\r\n        case InternalTaskState.CANCELED:\r\n            return TaskState.CANCELED;\r\n        case InternalTaskState.ERROR:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains methods for working with objects.\r\n */\r\nfunction contains(obj, prop) {\r\n    return Object.prototype.hasOwnProperty.call(obj, prop);\r\n}\r\nfunction forEach(obj, f) {\r\n    for (var key in obj) {\r\n        if (contains(obj, key)) {\r\n            f(key, obj[key]);\r\n        }\r\n    }\r\n}\r\nfunction clone(obj) {\r\n    if (obj == null) {\r\n        return {};\r\n    }\r\n    var c = {};\r\n    forEach(obj, function (key, val) {\r\n        c[key] = val;\r\n    });\r\n    return c;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Implements the promise abstraction interface for external\r\n * (public SDK) packaging, which just passes through to the firebase-app impl.\r\n */\r\n/**\r\n * @template T\r\n * @param {function((function(T): void),\r\n *                  (function(!Error): void))} resolver\r\n */\r\nfunction make(resolver) {\r\n    return new Promise(resolver);\r\n}\r\n/**\r\n * @template T\r\n */\r\nfunction resolve(value) {\r\n    return Promise.resolve(value);\r\n}\r\nfunction reject(error) {\r\n    return Promise.reject(error);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\r\nfunction isDef(p) {\r\n    return p != null;\r\n}\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isObject(p) {\r\n    return typeof p === 'object';\r\n}\r\nfunction isNonNullObject(p) {\r\n    return isObject(p) && p !== null;\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return isObject(p) && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isNumber(p) {\r\n    return typeof p === 'number' || p instanceof Number;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @enum{number}\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\r\nvar NetworkXhrIo = /** @class */ (function () {\r\n    function NetworkXhrIo() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = make(function (resolve$$1, reject$$1) {\r\n            _this.xhr_.addEventListener('abort', function (event) {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve$$1(_this);\r\n            });\r\n            _this.xhr_.addEventListener('error', function (event) {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve$$1(_this);\r\n            });\r\n            _this.xhr_.addEventListener('load', function (event) {\r\n                resolve$$1(_this);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.send = function (url, method, opt_body, opt_headers) {\r\n        var _this = this;\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (isDef(opt_headers)) {\r\n            var headers = opt_headers;\r\n            forEach(headers, function (key, val) {\r\n                _this.xhr_.setRequestHeader(key, val.toString());\r\n            });\r\n        }\r\n        if (isDef(opt_body)) {\r\n            this.xhr_.send(opt_body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return NetworkXhrIo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar XhrIoPool = /** @class */ (function () {\r\n    function XhrIoPool() {\r\n    }\r\n    XhrIoPool.prototype.createXhrIo = function () {\r\n        return new NetworkXhrIo();\r\n    };\r\n    return XhrIoPool;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var path = '(/([^?#]*).*)?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var httpRegex = new RegExp('^https?://firebasestorage\\\\.googleapis\\\\.com/' +\r\n            version +\r\n            '/b/' +\r\n            bucketDomain +\r\n            '/o' +\r\n            path, 'i');\r\n        var httpIndices = { bucket: 1, path: 3 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            { regex: httpRegex, indices: httpIndices, postModify: httpModify }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length == 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) {\r\n        return component.length > 0;\r\n    })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeNormalUrl(urlPart) {\r\n    return domainBase + apiBaseUrl + urlPart;\r\n}\r\nfunction makeDownloadUrl(urlPart) {\r\n    return downloadBase + apiBaseUrl + urlPart;\r\n}\r\nfunction makeUploadUrl(urlPart) {\r\n    return domainBase + apiUploadBaseUrl + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    forEach(params, function (key, val) {\r\n        var nextPart = encode(key) + '=' + encode(val);\r\n        queryPart = queryPart + nextPart + '&';\r\n    });\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, opt_local, opt_writable, opt_xform) {\r\n        this.server = server;\r\n        this.local = opt_local || server;\r\n        this.writable = !!opt_writable;\r\n        this.xform = opt_xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    var valid = isString(fullPath);\r\n    if (!valid || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        fullPath = fullPath;\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(metadata, size) {\r\n        if (isDef(size)) {\r\n            return +size;\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    /**\r\n     * Transforms a comma-separated string of tokens into a list of download\r\n     * URLs.\r\n     */\r\n    function xformTokens(metadata, tokens) {\r\n        var valid = isString(tokens) && tokens.length > 0;\r\n        if (!valid) {\r\n            // This can happen if objects are uploaded through GCS and retrieved\r\n            // through list, so we don't want to throw an Error.\r\n            return [];\r\n        }\r\n        var encode = encodeURIComponent;\r\n        var tokensList = tokens.split(',');\r\n        var urls = tokensList.map(function (token) {\r\n            var bucket = metadata['bucket'];\r\n            var path = metadata['fullPath'];\r\n            var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n            var base = makeDownloadUrl(urlPart);\r\n            var queryString = makeQueryString({\r\n                alt: 'media',\r\n                token: token\r\n            });\r\n            return base + queryString;\r\n        });\r\n        return urls;\r\n    }\r\n    mappings.push(new Mapping('downloadTokens', 'downloadURLs', false, xformTokens));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, authWrapper) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return authWrapper.makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(authWrapper, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, authWrapper);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(authWrapper, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(authWrapper, resource, mappings);\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\r\nfunction metadataValidator(p) {\r\n    var validType = p && isObject(p);\r\n    if (!validType) {\r\n        throw 'Expected Metadata object.';\r\n    }\r\n    for (var key in p) {\r\n        var val = p[key];\r\n        if (key === 'customMetadata') {\r\n            if (!isObject(val)) {\r\n                throw 'Expected object for \\'customMetadata\\' mapping.';\r\n            }\r\n        }\r\n        else {\r\n            if (isNonNullObject(val)) {\r\n                throw \"Mapping for '\" + key + \"' cannot be an object.\";\r\n            }\r\n        }\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\r\nfunction validate(name, specs, passed) {\r\n    var minArgs = specs.length;\r\n    var maxArgs = specs.length;\r\n    for (var i = 0; i < specs.length; i++) {\r\n        if (specs[i].optional) {\r\n            minArgs = i;\r\n            break;\r\n        }\r\n    }\r\n    var validLength = minArgs <= passed.length && passed.length <= maxArgs;\r\n    if (!validLength) {\r\n        throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\r\n    }\r\n    for (var i = 0; i < passed.length; i++) {\r\n        try {\r\n            specs[i].validator(passed[i]);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof Error) {\r\n                throw invalidArgument(i, name, e.message);\r\n            }\r\n            else {\r\n                throw invalidArgument(i, name, e);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar ArgSpec = /** @class */ (function () {\r\n    function ArgSpec(validator, opt_optional) {\r\n        var self = this;\r\n        this.validator = function (p) {\r\n            if (self.optional && !isJustDef(p)) {\r\n                return;\r\n            }\r\n            validator(p);\r\n        };\r\n        this.optional = !!opt_optional;\r\n    }\r\n    return ArgSpec;\r\n}());\r\nfunction and_(v1, v2) {\r\n    return function (p) {\r\n        v1(p);\r\n        v2(p);\r\n    };\r\n}\r\nfunction stringSpec(opt_validator, opt_optional) {\r\n    function stringValidator(p) {\r\n        if (!isString(p)) {\r\n            throw 'Expected string.';\r\n        }\r\n    }\r\n    var validator;\r\n    if (opt_validator) {\r\n        validator = and_(stringValidator, opt_validator);\r\n    }\r\n    else {\r\n        validator = stringValidator;\r\n    }\r\n    return new ArgSpec(validator, opt_optional);\r\n}\r\nfunction uploadDataSpec() {\r\n    function validator(p) {\r\n        var valid = p instanceof Uint8Array ||\r\n            p instanceof ArrayBuffer ||\r\n            (isNativeBlobDefined() && p instanceof Blob);\r\n        if (!valid) {\r\n            throw 'Expected Blob or File.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction metadataSpec(opt_optional) {\r\n    return new ArgSpec(metadataValidator, opt_optional);\r\n}\r\nfunction nonNegativeNumberSpec() {\r\n    function validator(p) {\r\n        var valid = isNumber(p) && p >= 0;\r\n        if (!valid) {\r\n            throw 'Expected a number 0 or greater.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction looseObjectSpec(opt_validator, opt_optional) {\r\n    function validator(p) {\r\n        var isLooseObject = p === null || (isDef(p) && p instanceof Object);\r\n        if (!isLooseObject) {\r\n            throw 'Expected an Object.';\r\n        }\r\n        if (opt_validator !== undefined && opt_validator !== null) {\r\n            opt_validator(p);\r\n        }\r\n    }\r\n    return new ArgSpec(validator, opt_optional);\r\n}\r\nfunction nullFunctionSpec(opt_optional) {\r\n    function validator(p) {\r\n        var valid = p === null || isFunction(p);\r\n        if (!valid) {\r\n            throw 'Expected a Function.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator, opt_optional);\r\n}\n\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param var_args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < var_args.length; i++) {\r\n            bb.append(var_args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(var_args);\r\n        }\r\n        else {\r\n            throw Error(\"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, opt_elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (opt_elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (opt_elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = var_args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = var_args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns true if the object is contained in the array (compared with ===).\r\n * @template T\r\n */\r\nfunction contains$1(array, elem) {\r\n    return array.indexOf(elem) !== -1;\r\n}\r\n/**\r\n * Returns a shallow copy of the array or array-like object (e.g. arguments).\r\n * @template T\r\n */\r\nfunction clone$1(arraylike) {\r\n    return Array.prototype.slice.call(arraylike);\r\n}\r\n/**\r\n * Removes the given element from the given array, if it is contained.\r\n * Directly modifies the passed-in array.\r\n * @template T\r\n */\r\nfunction remove(array, elem) {\r\n    var i = array.indexOf(elem);\r\n    if (i !== -1) {\r\n        array.splice(i, 1);\r\n    }\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(authWrapper, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(authWrapper, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            newErr = unauthenticated();\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata(authWrapper, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeNormalUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata(authWrapper, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeNormalUrl(urlPart);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject(authWrapper, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeNormalUrl(urlPart);\r\n    var method = 'DELETE';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    function handler(xhr, text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, opt_metadata) {\r\n    var metadata = clone(opt_metadata);\r\n    metadata['fullPath'] = location.path;\r\n    metadata['size'] = blob.size();\r\n    if (!metadata['contentType']) {\r\n        metadata['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadata;\r\n}\r\nfunction multipartUpload(authWrapper, location, mappings, blob, opt_metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str =\r\n                str +\r\n                    Math.random()\r\n                        .toString()\r\n                        .slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata = metadataForUpload_(location, blob, opt_metadata);\r\n    var metadataString = toResourceString(metadata, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata['fullPath'] };\r\n    var url = makeUploadUrl(urlPart);\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, opt_allowed) {\r\n    var status;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowed = opt_allowed || ['active'];\r\n    handlerCheck(contains$1(allowed, status));\r\n    return status;\r\n}\r\nfunction createResumableUpload(authWrapper, location, mappings, blob, opt_metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadata = metadataForUpload_(location, blob, opt_metadata);\r\n    var urlParams = { name: metadata['fullPath'] };\r\n    var url = makeUploadUrl(urlPart);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadata['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadata, mappings);\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    function handler(xhr, text) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(authWrapper, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr, text) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        var size = parseInt(sizeString, 10);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar resumableUploadChunkSize = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param opt_status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, opt_status, opt_progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status = new ResumableUploadStatus(0, 0);\r\n    if (opt_status) {\r\n        status.current = opt_status.current;\r\n        status.total = opt_status.total;\r\n    }\r\n    else {\r\n        status.current = 0;\r\n        status.total = blob.size();\r\n    }\r\n    if (blob.size() !== status.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status.total - status.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': status.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(authWrapper, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = opt_progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, opt_error, opt_complete) {\r\n        var asFunctions = isFunction(nextOrObserver) ||\r\n            isDef(opt_error) ||\r\n            isDef(opt_complete);\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = opt_error || null;\r\n            this.complete = opt_complete || null;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next || null;\r\n            this.error = observer.error || null;\r\n            this.complete = observer.complete || null;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\nvar UploadTaskSnapshot = /** @class */ (function () {\r\n    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\r\n        this.bytesTransferred = bytesTransferred;\r\n        this.totalBytes = totalBytes;\r\n        this.state = state;\r\n        this.metadata = metadata;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    Object.defineProperty(UploadTaskSnapshot.prototype, \"downloadURL\", {\r\n        get: function () {\r\n            if (this.metadata !== null) {\r\n                var urls = this.metadata['downloadURLs'];\r\n                if (urls != null && urls[0] != null) {\r\n                    return urls[0];\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return UploadTaskSnapshot;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\nfunction async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        resolve(true).then(function () {\r\n            f.apply(null, argsToForward);\r\n        });\r\n    };\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob The blob to upload.\r\n     */\r\n    function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {\r\n        if (metadata === void 0) { metadata = null; }\r\n        var _this = this;\r\n        this.transferred_ = 0;\r\n        this.needToFetchStatus_ = false;\r\n        this.needToFetchMetadata_ = false;\r\n        this.observers_ = [];\r\n        this.error_ = null;\r\n        this.uploadUrl_ = null;\r\n        this.request_ = null;\r\n        this.chunkMultiplier_ = 1;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.ref_ = ref;\r\n        this.authWrapper_ = authWrapper;\r\n        this.location_ = location;\r\n        this.blob_ = blob;\r\n        this.metadata_ = metadata;\r\n        this.mappings_ = mappings;\r\n        this.resumable_ = this.shouldDoResumable_(this.blob_);\r\n        this.state_ = InternalTaskState.RUNNING;\r\n        this.errorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            _this.chunkMultiplier_ = 1;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.needToFetchStatus_ = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.metadataErrorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.promise_ = make(function (resolve$$1, reject$$1) {\r\n            _this.resolve_ = resolve$$1;\r\n            _this.reject_ = reject$$1;\r\n            _this.start_();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this.promise_.then(null, function () { });\r\n    }\r\n    UploadTask.prototype.makeProgressCallback_ = function () {\r\n        var _this = this;\r\n        var sizeBefore = this.transferred_;\r\n        return function (loaded, total) {\r\n            _this.updateProgress_(sizeBefore + loaded);\r\n        };\r\n    };\r\n    UploadTask.prototype.shouldDoResumable_ = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype.start_ = function () {\r\n        if (this.state_ !== InternalTaskState.RUNNING) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this.request_ !== null) {\r\n            return;\r\n        }\r\n        if (this.resumable_) {\r\n            if (this.uploadUrl_ === null) {\r\n                this.createResumable_();\r\n            }\r\n            else {\r\n                if (this.needToFetchStatus_) {\r\n                    this.fetchStatus_();\r\n                }\r\n                else {\r\n                    if (this.needToFetchMetadata_) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this.fetchMetadata_();\r\n                    }\r\n                    else {\r\n                        this.continueUpload_();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.oneShotUpload_();\r\n        }\r\n    };\r\n    UploadTask.prototype.resolveToken_ = function (callback) {\r\n        var _this = this;\r\n        this.authWrapper_.getAuthToken().then(function (authToken) {\r\n            switch (_this.state_) {\r\n                case InternalTaskState.RUNNING:\r\n                    callback(authToken);\r\n                    break;\r\n                case InternalTaskState.CANCELING:\r\n                    _this.transition_(InternalTaskState.CANCELED);\r\n                    break;\r\n                case InternalTaskState.PAUSING:\r\n                    _this.transition_(InternalTaskState.PAUSED);\r\n                    break;\r\n                default:\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype.createResumable_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this.request_ = null;\r\n                _this.uploadUrl_ = url;\r\n                _this.needToFetchStatus_ = false;\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.fetchStatus_ = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);\r\n            var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this.request_ = null;\r\n                _this.updateProgress_(status.current);\r\n                _this.needToFetchStatus_ = false;\r\n                if (status.finalized) {\r\n                    _this.needToFetchMetadata_ = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.continueUpload_ = function () {\r\n        var _this = this;\r\n        var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        var status = new ResumableUploadStatus(this.transferred_, this.blob_.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\r\n            }\r\n            catch (e) {\r\n                _this.error_ = e;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n                return;\r\n            }\r\n            var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = uploadRequest;\r\n            uploadRequest\r\n                .getPromise()\r\n                .then(function (newStatus) {\r\n                _this.increaseMultiplier_();\r\n                _this.request_ = null;\r\n                _this.updateProgress_(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this.metadata_ = newStatus.metadata;\r\n                    _this.transition_(InternalTaskState.SUCCESS);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.increaseMultiplier_ = function () {\r\n        var currentSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this.chunkMultiplier_ *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype.fetchMetadata_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);\r\n            var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.metadataErrorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.oneShotUpload_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.updateProgress_(_this.blob_.size());\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.updateProgress_ = function (transferred) {\r\n        var old = this.transferred_;\r\n        this.transferred_ = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this.transferred_ !== old) {\r\n            this.notifyObservers_();\r\n        }\r\n    };\r\n    UploadTask.prototype.transition_ = function (state) {\r\n        if (this.state_ === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case InternalTaskState.CANCELING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this.state_ === InternalTaskState.PAUSED;\r\n                this.state_ = state;\r\n                if (wasPaused) {\r\n                    this.notifyObservers_();\r\n                    this.start_();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.CANCELED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.error_ = canceled();\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.ERROR:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.SUCCESS:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this.state_) {\r\n            case InternalTaskState.PAUSING:\r\n                this.transition_(InternalTaskState.PAUSED);\r\n                break;\r\n            case InternalTaskState.CANCELING:\r\n                this.transition_(InternalTaskState.CANCELED);\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                this.start_();\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this.state_);\r\n            return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type The type of event to listen for.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        if (nextOrObserver === void 0) { nextOrObserver = undefined; }\r\n        if (error === void 0) { error = undefined; }\r\n        if (completed === void 0) { completed = undefined; }\r\n        function typeValidator(_p) {\r\n            if (type !== TaskEvent.STATE_CHANGED) {\r\n                throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\r\n            }\r\n        }\r\n        var nextOrObserverMessage = 'Expected a function or an Object with one of ' +\r\n            '`next`, `error`, `complete` properties.';\r\n        var nextValidator = nullFunctionSpec(true).validator;\r\n        var observerValidator = looseObjectSpec(null, true).validator;\r\n        function nextOrObserverValidator(p) {\r\n            try {\r\n                nextValidator(p);\r\n                return;\r\n            }\r\n            catch (e) { }\r\n            try {\r\n                observerValidator(p);\r\n                var anyDefined = isJustDef(p['next']) ||\r\n                    isJustDef(p['error']) ||\r\n                    isJustDef(p['complete']);\r\n                if (!anyDefined) {\r\n                    throw '';\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n        }\r\n        var specs = [\r\n            stringSpec(typeValidator),\r\n            looseObjectSpec(nextOrObserverValidator, true),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        validate('on', specs, arguments);\r\n        var self = this;\r\n        function makeBinder(specs) {\r\n            function binder(nextOrObserver, error, opt_complete) {\r\n                if (specs !== null) {\r\n                    validate('on', specs, arguments);\r\n                }\r\n                var observer = new Observer(nextOrObserver, error, completed);\r\n                self.addObserver_(observer);\r\n                return function () {\r\n                    self.removeObserver_(observer);\r\n                };\r\n            }\r\n            return binder;\r\n        }\r\n        function binderNextOrObserverValidator(p) {\r\n            if (p === null) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n            nextOrObserverValidator(p);\r\n        }\r\n        var binderSpecs = [\r\n            looseObjectSpec(binderNextOrObserverValidator),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        var typeOnly = !(isJustDef(nextOrObserver) ||\r\n            isJustDef(error) ||\r\n            isJustDef(completed));\r\n        if (typeOnly) {\r\n            return makeBinder(binderSpecs);\r\n        }\r\n        else {\r\n            return makeBinder(null)(nextOrObserver, error, completed);\r\n        }\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this.promise_.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype.addObserver_ = function (observer) {\r\n        this.observers_.push(observer);\r\n        this.notifyObserver_(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype.removeObserver_ = function (observer) {\r\n        remove(this.observers_, observer);\r\n    };\r\n    UploadTask.prototype.notifyObservers_ = function () {\r\n        var _this = this;\r\n        this.finishPromise_();\r\n        var observers = clone$1(this.observers_);\r\n        observers.forEach(function (observer) {\r\n            _this.notifyObserver_(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype.finishPromise_ = function () {\r\n        if (this.resolve_ !== null) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this.state_)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this.resolve_.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this.reject_;\r\n                    async(toCall.bind(null, this.error_))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this.resolve_ = null;\r\n                this.reject_ = null;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype.notifyObserver_ = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this.state_);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next !== null) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete !== null) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error !== null) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error !== null) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        validate('resume', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.PAUSED ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.RUNNING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        validate('pause', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.PAUSING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        validate('cancel', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.CANCELING);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(authWrapper, location) {\r\n        this.authWrapper = authWrapper;\r\n        if (location instanceof Location) {\r\n            this.location = location;\r\n        }\r\n        else {\r\n            this.location = Location.makeFromUrl(location);\r\n        }\r\n    }\r\n    /**\r\n     * @return The URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        validate('toString', [], arguments);\r\n        return 'gs://' + this.location.bucket + '/' + this.location.path;\r\n    };\r\n    Reference.prototype.newRef = function (authWrapper, location) {\r\n        return new Reference(authWrapper, location);\r\n    };\r\n    Reference.prototype.mappings = function () {\r\n        return getMappings();\r\n    };\r\n    /**\r\n     * @return A reference to the object obtained by\r\n     *     appending childPath, removing any duplicate, beginning, or trailing\r\n     *     slashes.\r\n     */\r\n    Reference.prototype.child = function (childPath) {\r\n        validate('child', [stringSpec()], arguments);\r\n        var newPath = child(this.location.path, childPath);\r\n        var location = new Location(this.location.bucket, newPath);\r\n        return this.newRef(this.authWrapper, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        /**\r\n         * @return A reference to the parent of the\r\n         *     current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var newPath = parent(this.location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this.location.bucket, newPath);\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * @return An reference to the root of this\r\n         *     object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this.location.bucket, '');\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this.location.bucket;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this.location.path;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        get: function () {\r\n            return lastComponent(this.location.path);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        get: function () {\r\n            return this.authWrapper.service();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data The blob to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.put = function (data, metadata) {\r\n        if (metadata === void 0) { metadata = null; }\r\n        validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\r\n        this.throwIfRoot_('put');\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data), metadata);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param string The string to upload.\r\n     * @param opt_format The format of the string to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.putString = function (string, format, opt_metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        validate('putString', [\r\n            stringSpec(),\r\n            stringSpec(formatValidator, true),\r\n            metadataSpec(true)\r\n        ], arguments);\r\n        this.throwIfRoot_('putString');\r\n        var data = dataFromString(format, string);\r\n        var metadata = clone(opt_metadata);\r\n        if (!isDef(metadata['contentType']) && isDef(data.contentType)) {\r\n            metadata['contentType'] = data.contentType;\r\n        }\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data.data, true), metadata);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @return A promise that resolves if the deletion succeeds.\r\n     */\r\n    Reference.prototype.delete = function () {\r\n        validate('delete', [], arguments);\r\n        this.throwIfRoot_('delete');\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = deleteObject(self.authWrapper, self.location);\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     *     A promise that resolves with the metadata for this object. If this\r\n     *     object doesn't exist or metadata cannot be retreived, the promise is\r\n     *     rejected.\r\n     */\r\n    Reference.prototype.getMetadata = function () {\r\n        validate('getMetadata', [], arguments);\r\n        this.throwIfRoot_('getMetadata');\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getMetadata(self.authWrapper, self.location, self.mappings());\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata The new metadata for the object.\r\n     *     Only values that have been explicitly set will be changed. Explicitly\r\n     *     setting a value to null will remove the metadata.\r\n     * @return A promise that resolves\r\n     *     with the new metadata for this object.\r\n     *     @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    Reference.prototype.updateMetadata = function (metadata) {\r\n        validate('updateMetadata', [metadataSpec()], arguments);\r\n        this.throwIfRoot_('updateMetadata');\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = updateMetadata(self.authWrapper, self.location, metadata, self.mappings());\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * @return A promise that resolves with the download\r\n     *     URL for this object.\r\n     */\r\n    Reference.prototype.getDownloadURL = function () {\r\n        validate('getDownloadURL', [], arguments);\r\n        this.throwIfRoot_('getDownloadURL');\r\n        return this.getMetadata().then(function (metadata) {\r\n            var url = metadata['downloadURLs'][0];\r\n            if (isDef(url)) {\r\n                return url;\r\n            }\r\n            else {\r\n                throw noDownloadURL();\r\n            }\r\n        });\r\n    };\r\n    Reference.prototype.throwIfRoot_ = function (name) {\r\n        if (this.location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (appDelete) {\r\n        if (appDelete === void 0) { appDelete = false; }\r\n    };\r\n    return FailRequest;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar RequestMap = /** @class */ (function () {\r\n    function RequestMap() {\r\n        this.map_ = {};\r\n        this.id_ = minSafeInteger;\r\n    }\r\n    /**\r\n     * Registers the given request with this map.\r\n     * The request is unregistered when it completes.\r\n     * @param r The request to register.\r\n     */\r\n    RequestMap.prototype.addRequest = function (r) {\r\n        var id = this.id_;\r\n        this.id_++;\r\n        this.map_[id] = r;\r\n        var self = this;\r\n        function unmap() {\r\n            delete self.map_[id];\r\n        }\r\n        r.getPromise().then(unmap, unmap);\r\n    };\r\n    /**\r\n     * Cancels all registered requests.\r\n     */\r\n    RequestMap.prototype.clear = function () {\r\n        forEach(this.map_, function (key, val) {\r\n            if (val) {\r\n                val.cancel(true);\r\n            }\r\n        });\r\n        this.map_ = {};\r\n    };\r\n    return RequestMap;\r\n}());\n\n/**\r\n * @param app If null, getAuthToken always resolves with null.\r\n * @param service The storage service associated with this auth wrapper.\r\n *     Untyped to avoid circular type dependencies.\r\n * @struct\r\n */\r\nvar AuthWrapper = /** @class */ (function () {\r\n    function AuthWrapper(app, maker, requestMaker, service, pool) {\r\n        this.bucket_ = null;\r\n        this.deleted_ = false;\r\n        this.app_ = app;\r\n        if (this.app_ !== null) {\r\n            var options = this.app_.options;\r\n            if (isDef(options)) {\r\n                this.bucket_ = AuthWrapper.extractBucket_(options);\r\n            }\r\n        }\r\n        this.storageRefMaker_ = maker;\r\n        this.requestMaker_ = requestMaker;\r\n        this.pool_ = pool;\r\n        this.service_ = service;\r\n        this.maxOperationRetryTime_ = defaultMaxOperationRetryTime;\r\n        this.maxUploadRetryTime_ = defaultMaxUploadRetryTime;\r\n        this.requestMap_ = new RequestMap();\r\n    }\r\n    AuthWrapper.extractBucket_ = function (config) {\r\n        var bucketString = config[configOption] || null;\r\n        if (bucketString == null) {\r\n            return null;\r\n        }\r\n        var loc = Location.makeFromBucketSpec(bucketString);\r\n        return loc.bucket;\r\n    };\r\n    AuthWrapper.prototype.getAuthToken = function () {\r\n        // TODO(andysoto): remove ifDef checks after firebase-app implements stubs\r\n        // (b/28673818).\r\n        if (this.app_ !== null &&\r\n            isDef(this.app_.INTERNAL) &&\r\n            isDef(this.app_.INTERNAL.getToken)) {\r\n            return this.app_.INTERNAL.getToken().then(function (response) {\r\n                if (response !== null) {\r\n                    return response.accessToken;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }, function (_error) {\r\n                return null;\r\n            });\r\n        }\r\n        else {\r\n            return resolve(null);\r\n        }\r\n    };\r\n    AuthWrapper.prototype.bucket = function () {\r\n        if (this.deleted_) {\r\n            throw appDeleted();\r\n        }\r\n        else {\r\n            return this.bucket_;\r\n        }\r\n    };\r\n    /**\r\n     * The service associated with this auth wrapper. Untyped to avoid circular\r\n     * type dependencies.\r\n     */\r\n    AuthWrapper.prototype.service = function () {\r\n        return this.service_;\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\r\n     * at the given Location.\r\n     * @param loc The Location.\r\n     * @return Actually a firebaseStorage.Reference, typing not allowed\r\n     *     because of circular dependency problems.\r\n     */\r\n    AuthWrapper.prototype.makeStorageReference = function (loc) {\r\n        return this.storageRefMaker_(this, loc);\r\n    };\r\n    AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {\r\n        if (!this.deleted_) {\r\n            var request = this.requestMaker_(requestInfo, authToken, this.pool_);\r\n            this.requestMap_.addRequest(request);\r\n            return request;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    AuthWrapper.prototype.deleteApp = function () {\r\n        this.deleted_ = true;\r\n        this.app_ = null;\r\n        this.requestMap_.clear();\r\n    };\r\n    AuthWrapper.prototype.maxUploadRetryTime = function () {\r\n        return this.maxUploadRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {\r\n        this.maxUploadRetryTime_ = time;\r\n    };\r\n    AuthWrapper.prototype.maxOperationRetryTime = function () {\r\n        return this.maxOperationRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {\r\n        this.maxOperationRetryTime_ = time;\r\n    };\r\n    return AuthWrapper;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, callback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    function triggerCallback() {\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, arguments);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    function handler(success) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.apply(null, arguments);\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.apply(null, arguments);\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n * @template T\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        this.pendingXhr_ = null;\r\n        this.backoffId_ = null;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        var self = this;\r\n        this.promise_ = make(function (resolve$$1, reject$$1) {\r\n            self.resolve_ = resolve$$1;\r\n            self.reject_ = reject$$1;\r\n            self.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled$$1) {\r\n            if (canceled$$1) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var xhr = self.pool_.createXhrIo();\r\n            self.pendingXhr_ = xhr;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                xhr.addUploadProgressListener(progressListener);\r\n            }\r\n            xhr\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function (xhr) {\r\n                if (self.progressCallback_ !== null) {\r\n                    xhr.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingXhr_ = null;\r\n                xhr = xhr;\r\n                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = xhr.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = contains$1(self.successCodes_, status);\r\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve$$1 = self.resolve_;\r\n            var reject$$1 = self.reject_;\r\n            var xhr = status.xhr;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(xhr, xhr.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve$$1(result);\r\n                    }\r\n                    else {\r\n                        resolve$$1();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject$$1(e);\r\n                }\r\n            }\r\n            else {\r\n                if (xhr !== null) {\r\n                    var err = unknown();\r\n                    err.setServerResponseProp(xhr.getResponseText());\r\n                    if (self.errorCallback_) {\r\n                        reject$$1(self.errorCallback_(xhr, err));\r\n                    }\r\n                    else {\r\n                        reject$$1(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_\r\n                            ? appDeleted()\r\n                            : canceled();\r\n                        reject$$1(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject$$1(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingXhr_ !== null) {\r\n            this.pendingXhr_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = contains$1(extraRetryCodes, status);\r\n        var isRequestSpecificRetryCode = contains$1(this.additionalRetryCodes_, status);\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, xhr, opt_canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.xhr = xhr;\r\n        this.canceled = !!opt_canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers) {\r\n    var number = typeof __WEBPACK_IMPORTED_MODULE_0__firebase_app__[\"default\"] !== 'undefined' ? __WEBPACK_IMPORTED_MODULE_0__firebase_app__[\"default\"].SDK_VERSION : 'AppManager';\r\n    headers['X-Firebase-Storage-Version'] = 'webjs/' + number;\r\n}\r\n/**\r\n * @template T\r\n */\r\nfunction makeRequest(requestInfo, authToken, pool) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = clone(requestInfo.headers);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\r\nvar Service = /** @class */ (function () {\r\n    function Service(app, pool, url) {\r\n        this.bucket_ = null;\r\n        function maker(authWrapper, loc) {\r\n            return new Reference(authWrapper, loc);\r\n        }\r\n        this.authWrapper_ = new AuthWrapper(app, maker, makeRequest, this, pool);\r\n        this.app_ = app;\r\n        if (url != null) {\r\n            this.bucket_ = Location.makeFromBucketSpec(url);\r\n        }\r\n        else {\r\n            var authWrapperBucket = this.authWrapper_.bucket();\r\n            if (authWrapperBucket != null) {\r\n                this.bucket_ = new Location(authWrapperBucket, '');\r\n            }\r\n        }\r\n        this.internals_ = new ServiceInternals(this);\r\n    }\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    Service.prototype.ref = function (path) {\r\n        function validator(path) {\r\n            if (/^[A-Za-z]+:\\/\\//.test(path)) {\r\n                throw 'Expected child path but got a URL, use refFromURL instead.';\r\n            }\r\n        }\r\n        validate('ref', [stringSpec(validator, true)], arguments);\r\n        if (this.bucket_ == null) {\r\n            throw new Error('No Storage Bucket defined in Firebase Options.');\r\n        }\r\n        var ref = new Reference(this.authWrapper_, this.bucket_);\r\n        if (path != null) {\r\n            return ref.child(path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    Service.prototype.refFromURL = function (url) {\r\n        function validator(p) {\r\n            if (!/^[A-Za-z]+:\\/\\//.test(p)) {\r\n                throw 'Expected full URL but got a child path, use ref instead.';\r\n            }\r\n            try {\r\n                Location.makeFromUrl(p);\r\n            }\r\n            catch (e) {\r\n                throw 'Expected valid full URL but got an invalid one.';\r\n            }\r\n        }\r\n        validate('refFromURL', [stringSpec(validator, false)], arguments);\r\n        return new Reference(this.authWrapper_, url);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this.authWrapper_.maxUploadRetryTime();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Service.prototype.setMaxUploadRetryTime = function (time) {\r\n        validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxUploadRetryTime(time);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"maxOperationRetryTime\", {\r\n        get: function () {\r\n            return this.authWrapper_.maxOperationRetryTime();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Service.prototype.setMaxOperationRetryTime = function (time) {\r\n        validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxOperationRetryTime(time);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Service.prototype, \"INTERNAL\", {\r\n        get: function () {\r\n            return this.internals_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Service;\r\n}());\r\n/**\r\n * @struct\r\n */\r\nvar ServiceInternals = /** @class */ (function () {\r\n    function ServiceInternals(service) {\r\n        this.service_ = service;\r\n    }\r\n    /**\r\n     * Called when the associated app is deleted.\r\n     * @see {!fbs.AuthWrapper.prototype.deleteApp}\r\n     */\r\n    ServiceInternals.prototype.delete = function () {\r\n        this.service_.authWrapper_.deleteApp();\r\n        return resolve(undefined);\r\n    };\r\n    return ServiceInternals;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(app, unused, opt_url) {\r\n    return new Service(app, new XhrIoPool(), opt_url);\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: Service,\r\n        Reference: Reference\r\n    };\r\n    instance.INTERNAL.registerService(STORAGE_TYPE, factory, namespaceExports, undefined, \r\n    // Allow multiple storage instances per app.\r\n    true);\r\n}\r\nregisterStorage(__WEBPACK_IMPORTED_MODULE_0__firebase_app__[\"default\"]);\n\n\n\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// script.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"JkW7\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1d579b56ae93531992f9","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar util = require('@firebase/util');\nvar logger = require('@firebase/logger');\nvar tslib_1 = require('tslib');\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < var_args.length; i++) {\r\n        if (Array.isArray(var_args[i]) ||\r\n            (var_args[i] &&\r\n                typeof var_args[i] === 'object' &&\r\n                typeof var_args[i].length === 'number')) {\r\n            message += buildLogMessage_.apply(null, var_args[i]);\r\n        }\r\n        else if (typeof var_args[i] === 'object') {\r\n            message += util.stringify(var_args[i]);\r\n        }\r\n        else {\r\n            message += var_args[i];\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger$1 = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger.LogLevel.VERBOSE;\r\n        logger$1 = logClient.log.bind(logClient);\r\n        if (persistent)\r\n            SessionStorage.set('logging_enabled', true);\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger$1 = logger_;\r\n    }\r\n    else {\r\n        logger$1 = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */\r\nvar log = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger$1 === null && SessionStorage.get('logging_enabled') === true)\r\n            enableLogging(true);\r\n    }\r\n    if (logger$1) {\r\n        var message = buildLogMessage_.apply(null, var_args);\r\n        logger$1(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar error = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar fatal = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n */\r\nvar warn = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data != data || // NaN\r\n            data == Number.POSITIVE_INFINITY ||\r\n            data == Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete')\r\n                    wrappedFn_1();\r\n            });\r\n            // fallback to onload.\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null)\r\n        return util.stringify(obj);\r\n    var keys = [];\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0)\r\n            key += ',';\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param {!(Object|Array)} obj The object or array to iterate over\r\n * @param {function(?, ?)} fn The function to apply\r\n */\r\nvar each = function (obj, fn) {\r\n    if (Array.isArray(obj)) {\r\n        for (var i = 0; i < obj.length; ++i) {\r\n            fn(i, obj[i]);\r\n        }\r\n    }\r\n    else {\r\n        /**\r\n         * in the conversion of code we removed the goog.object.forEach\r\n         * function which did a value,key callback. We standardized on\r\n         * a single impl that does a key, value callback. So we invert\r\n         * to not have to touch the `each` code points\r\n         */\r\n        util.forEach(obj, function (key, val) { return fn(val, key); });\r\n    }\r\n};\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1)\r\n            hexByte = '0' + hexByte;\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code == 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code == 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length)\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + this.pieces_[i];\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0)\r\n                    pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0)\r\n                return cmp;\r\n        }\r\n        if (leftKeys.length === rightKeys.length)\r\n            return 0;\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length == 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost = PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return this.host !== this.internalHost || this.isCustomHost();\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        util.forEach(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var results = {};\r\n    if (queryString.startsWith('?')) {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\r\n        var segment = _a[_i];\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        var kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n        }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseURL(dataURL), namespace = parsedUrl.subdomain;\r\n    if (parsedUrl.domain === 'firebase') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace == 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\r\n */\r\nvar parseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = dataURL.length;\r\n        }\r\n        var parts = host.split('.');\r\n        if (parts.length === 3) {\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            domain = parts[1];\r\n            subdomain = parts[0].toLowerCase();\r\n        }\r\n        else if (parts.length === 2) {\r\n            domain = parts[0];\r\n        }\r\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        // Support `ns` query param if subdomain not already set\r\n        if (subdomain === '' && 'ns' in queryParams) {\r\n            subdomain = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString\r\n    };\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority && typeof priority === 'object' && util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false, hasActualChild_1 = false;\r\n        util.forEach(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) {\r\n                // .priority is OK\r\n            }\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    util.forEach(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined)\r\n        return;\r\n    if (isInvalidJSONNumber(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined)\r\n        return;\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined)\r\n        return;\r\n    if (!isValidKey(key))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined)\r\n        return;\r\n    if (!isValidPathString(pathString))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined)\r\n        return;\r\n    if (typeof bool !== 'boolean')\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number')\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    else\r\n        return 'string:' + priority;\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty())\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        else\r\n            return this.getValue();\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty())\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_)\r\n                cmp *= -1;\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_)\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        else\r\n            result = { key: node.key, value: node.value };\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var cmp, n;\r\n        n = this;\r\n        cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_())\r\n            n = n.moveRedLeft_();\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_())\r\n                n = n.rotateRight_();\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_())\r\n            n = n.rotateLeft_();\r\n        if (n.left.isRed_() && n.left.left.isRed_())\r\n            n = n.rotateRight_();\r\n        if (n.left.isRed_() && n.right.isRed_())\r\n            n = n.colorFlip_();\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        var blackDepth;\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty())\r\n                        node = node.right;\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length == 0) {\r\n            return null;\r\n        }\r\n        else if (length == 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\n/**\r\n *\r\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\r\n * @param {Object.<string, Index>} indexSet\r\n * @constructor\r\n */\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         * @type {!IndexMap}\r\n         * @const\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param {!string} indexKey\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap)\r\n            throw new Error('No index defined for ' + indexKey);\r\n        if (sortedMap === fallbackObject) {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n        else {\r\n            return sortedMap;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {boolean}\r\n     */\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = util.clone(this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = util.clone(this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name != namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null)\r\n            return this;\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty())\r\n            return null;\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            for (var key in obj)\r\n                array[key] = obj[key];\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty())\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '')\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj_1 = json;\r\n        util.forEach(hinzeJsonObj_1, function (key, child) {\r\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(hinzeJsonObj_1[key]);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length == 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        var jsonObj_1 = json;\r\n        util.forEach(jsonObj_1, function (key, childData) {\r\n            if (util.contains(jsonObj_1, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty())\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        else\r\n            return !this.node_.isEmpty();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ (change.childName));\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherCount = util.getCount(other.callbacks_);\r\n                var thisCount = util.getCount(this.callbacks_);\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    //  If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey /** @type {!string} */ = util.getAnyKey(other.callbacks_);\r\n                        var thisKey /** @type {!string} */ = util.getAnyKey(this.callbacks_);\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return util.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName != MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName != MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param cancelOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel)\r\n                ret.cancel.bind(ret.context)(err);\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error$$1 = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error$$1);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements a set with a count of elements.\r\n *\r\n * @template K, V\r\n */\r\nvar CountedSet = /** @class */ (function () {\r\n    function CountedSet() {\r\n        this.set = {};\r\n    }\r\n    /**\r\n     * @param {!K} item\r\n     * @param {V} val\r\n     */\r\n    CountedSet.prototype.add = function (item, val) {\r\n        this.set[item] = val !== null ? val : true;\r\n    };\r\n    /**\r\n     * @param {!K} key\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.contains = function (key) {\r\n        return util.contains(this.set, key);\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     * @return {V}\r\n     */\r\n    CountedSet.prototype.get = function (item) {\r\n        return this.contains(item) ? this.set[item] : undefined;\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     */\r\n    CountedSet.prototype.remove = function (item) {\r\n        delete this.set[item];\r\n    };\r\n    /**\r\n     * Deletes everything in the set\r\n     */\r\n    CountedSet.prototype.clear = function () {\r\n        this.set = {};\r\n    };\r\n    /**\r\n     * True if there's nothing in the set\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.set);\r\n    };\r\n    /**\r\n     * @return {number} The number of items in the set\r\n     */\r\n    CountedSet.prototype.count = function () {\r\n        return util.getCount(this.set);\r\n    };\r\n    /**\r\n     * Run a function on each k,v pair in the set\r\n     * @param {function(K, V)} fn\r\n     */\r\n    CountedSet.prototype.each = function (fn) {\r\n        util.forEach(this.set, function (k, v) { return fn(k, v); });\r\n    };\r\n    /**\r\n     * Mostly for debugging\r\n     * @return {Array.<K>} The keys present in this CountedSet\r\n     */\r\n    CountedSet.prototype.keys = function () {\r\n        var keys = [];\r\n        util.forEach(this.set, function (k) {\r\n            keys.push(k);\r\n        });\r\n        return keys;\r\n    };\r\n    return CountedSet;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n *\r\n * @constructor\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        /**\r\n         * @private\r\n         * @type {Node}\r\n         */\r\n        this.value_ = null;\r\n        /**\r\n         * @private\r\n         * @type {CountedSet}\r\n         */\r\n        this.children_ = null;\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {?Node} The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value_ != null) {\r\n            return this.value_.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children_ != null) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children_.contains(childKey)) {\r\n                var childTree = this.children_.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @param {!Node} data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = data;\r\n            this.children_ = null;\r\n        }\r\n        else if (this.value_ !== null) {\r\n            this.value_ = this.value_.updateChild(path, data);\r\n        }\r\n        else {\r\n            if (this.children_ == null) {\r\n                this.children_ = new CountedSet();\r\n            }\r\n            var childKey = path.getFront();\r\n            if (!this.children_.contains(childKey)) {\r\n                this.children_.add(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children_.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {boolean} True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = null;\r\n            this.children_ = null;\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value_ !== null) {\r\n                if (this.value_.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value_;\r\n                    this.value_ = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children_ !== null) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children_.contains(childKey)) {\r\n                    var safeToRemove = this.children_.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children_.remove(childKey);\r\n                    }\r\n                }\r\n                if (this.children_.isEmpty()) {\r\n                    this.children_ = null;\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param {!Path} prefixPath Path to look up node for.\r\n     * @param {!Function} func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value_ !== null) {\r\n            func(prefixPath, this.value_);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param {!Function} func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        if (this.children_ !== null) {\r\n            this.children_.each(function (key, tree) {\r\n                func(key, tree);\r\n            });\r\n        }\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredValue = function (value, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    else {\r\n        util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n        return serverValues[value['.sv']];\r\n    }\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (tree, serverValues) {\r\n    var resolvedTree = new SparseSnapshotTree();\r\n    tree.forEachTree(new Path(''), function (path, node) {\r\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\r\n    });\r\n    return resolvedTree;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredValue(rawPri, serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ affectedTree, \r\n    /**@inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        util.forEach(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /**@inheritDoc */ source, \r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap_ = {};\r\n    }\r\n    /**\r\n     * @param {!Change} change\r\n     */\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey /** @type {!string} */ = change.childName;\r\n        util.assert(type == Change.CHILD_ADDED ||\r\n            type == Change.CHILD_CHANGED ||\r\n            type == Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = util.safeGet(this.changeMap_, childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                delete this.changeMap_[childKey];\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childRemovedChange(childKey, oldChange.oldSnap);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                this.changeMap_[childKey] = Change.childAddedChange(childKey, change.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap_[childKey] = change;\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Array.<!Change>}\r\n     */\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return util.getValues(this.changeMap_);\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache\r\n            .getEventCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap\r\n                        .getNode()\r\n                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||\r\n                !eventSnap\r\n                    .getNode()\r\n                    .getPriority()\r\n                    .equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey == '.priority') {\r\n                    util.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey == '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache\r\n                    .getEventCache()\r\n                    .getNode()\r\n                    .hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         *\r\n         * @type {!Object.<!string, !View>}\r\n         * @private\r\n         */\r\n        this.views_ = {};\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.views_);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} optCompleteServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = util.safeGet(this.views_, queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events_1 = [];\r\n            util.forEach(this.views_, function (key, view) {\r\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n            });\r\n            return events_1;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = util.safeGet(this.views_, queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views_[queryId] = view;\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            var self_1 = this;\r\n            util.forEach(this.views_, function (viewQueryId, view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete self_1.views_[viewQueryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = util.safeGet(this.views_, queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete this.views_[queryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    /**\r\n     * @return {!Array.<!View>}\r\n     */\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var _this = this;\r\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\r\n        return values.filter(function (view) {\r\n            return !view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path The path to the desired complete snapshot\r\n     * @return {?Node} A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var serverCache = null;\r\n        util.forEach(this.views_, function (key, view) {\r\n            serverCache = serverCache || view.getCompleteServerCache(path);\r\n        });\r\n        return serverCache;\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return util.safeGet(this.views_, queryId);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    /**\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var completeView = util.findValue(this.views_, function (view) {\r\n            return view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n        return completeView || null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n *\r\n * @constructor\r\n * @param {!ImmutableTree.<!Node>} writeTree\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Node} node\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} updates\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        util.forEach(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param {!Path} path The path to check for\r\n     * @return {boolean} Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param {!Path} path The path to get a complete write\r\n     * @return {?Node} The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return {!Array.<NamedNode>} A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return {boolean} Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param {!Node} node The node to apply this CompoundWrite to\r\n     * @return {!Node} The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return CompoundWrite.applySubtreeWrite_(Path.Empty, this.writeTree_, node);\r\n    };\r\n    /**\r\n     * @type {!CompoundWrite}\r\n     */\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @param {!ImmutableTree.<!Node>} writeTree\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\r\n        if (writeTree.value != null) {\r\n            // Since there a write is always a leaf, we're done here\r\n            return node.updateChild(relativePath, writeTree.value);\r\n        }\r\n        else {\r\n            var priorityWrite_1 = null;\r\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n                if (childKey === '.priority') {\r\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                    // to apply priorities to empty nodes that are later filled\r\n                    util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                    priorityWrite_1 = childTree.value;\r\n                }\r\n                else {\r\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\r\n                }\r\n            });\r\n            // If there was a priority write, we only apply it if the node is not empty\r\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n            }\r\n            return node;\r\n        }\r\n    };\r\n    return CompoundWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                util.forEach(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * @param {!WriteRecord} writeRecord\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            // findKey can return undefined, so use !! to coerce to boolean\r\n            return !!util.findKey(writeRecord.children, function (childSnap, childName) {\r\n                return writeRecord.path.child(childName).contains(path);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     * @private\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     *\r\n     * @param {!WriteRecord} write\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     *\r\n     * @param {!Array.<!WriteRecord>} writes\r\n     * @param {!function(!WriteRecord):boolean} filter\r\n     * @param {!Path} treeRoot\r\n     * @return {!CompoundWrite}\r\n     * @private\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         * @type {!ImmutableTree.<!SyncPoint>}\r\n         * @private\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         * @type {!WriteTree}\r\n         * @private\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap_ = {};\r\n        this.queryToTagMap_ = {};\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @param {number} writeId\r\n     * @param {boolean=} visible\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param {!number} writeId\r\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                util.forEach(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap_[queryKey] = tag;\r\n            // Coerce to string to avoid sparse arrays.\r\n            this.tagToQueryMap_['_' + tag] = queryKey;\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n                else {\r\n                    // There's nothing below us, so nothing we need to start listening on\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        else {\r\n            // No-op, this listener must've been already removed\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     * @param {!Path} path The path to the data we want\r\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\r\n     * @return {?Node}\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     *\r\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\r\n     * @return {!Array.<!View>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                util.forEach(childMap, function (key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Array.<!Query>} queries\r\n     * @private\r\n     */\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\r\n                delete this.queryToTagMap_[removedQueryKey];\r\n                delete this.tagToQueryMap_['_' + removedQueryTag];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     * @param {!Query} query\r\n     * @return {!Query} The normalized query\r\n     * @private\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return /** @type {!Query} */ query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!View} view\r\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\r\n     * @private\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    util.forEach(childMap, function (key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!View} view\r\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error$$1 = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error$$1);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     * @private\r\n     * @param {!Query} query\r\n     * @return {string}\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     * @private\r\n     * @param {!string} queryKey\r\n     * @return {{queryId: !string, path: !Path}}\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     * @param {!number} tag\r\n     * @return {?string}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap_['_' + tag];\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     * @param {!Query} query\r\n     * @return {?number}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return util.safeGet(this.queryToTagMap_, queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     *\r\n     * @param {!Path} queryPath\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar AuthTokenProvider = /** @class */ (function () {\r\n    /**\r\n     * @param {!FirebaseApp} app_\r\n     */\r\n    function AuthTokenProvider(app_) {\r\n        this.app_ = app_;\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \r\n        // .catch\r\n        function (error$$1) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error$$1 && error$$1.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error$$1);\r\n            }\r\n        });\r\n    };\r\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return AuthTokenProvider;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name))\r\n            this.counters_[name] = 0;\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = util.clone(newStats);\r\n        if (this.last_) {\r\n            util.forEach(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        util.forEach(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger$1) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} var_args\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = this.listeners_[eventType].slice();\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, var_args);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_)\r\n                return;\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var command = args[0], arg1 = args[1], arg2 = args[2];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder)\r\n                    return; // we closed the connection.\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command == FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var pN = args[0], data = args[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier)\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (!util.isNodeSdk() &&\r\n                typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n        return (BrowserPollConnection.forceAllow_ ||\r\n            (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp() &&\r\n                !util.isNodeSdk()));\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk())\r\n            return;\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        /**\r\n         * @type {CountedSet.<number, number>}\r\n         */\r\n        this.outstandingRequests = new CountedSet();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n        }\r\n        else if (iframe.document) {\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        if (util.isNodeSdk() && this.myID) {\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            var theURL = this.urlFn(urlParams);\r\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial, 1);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.remove(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls)\r\n                        return;\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + firebase.SDK_VERSION + \"/\" + process.platform + \"/\" + device\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') == 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                this.mySock = new WebSocketImpl(this.connURL);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                this.log_(error$$1);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                _this.log_(error$$1);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length == this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null)\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable)\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports_1 = (this.transports_ = []);\r\n            each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports_1.push(transport);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeout_ms > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n            }, Math.floor(healthyTimeout_ms));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ != 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ == 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param onConnectStatus_\r\n     * @param onServerInfoUpdate_\r\n     * @param authTokenProvider_\r\n     * @param authOverride_\r\n     */\r\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        /** @private {Object} */\r\n        _this.interruptReasons_ = {};\r\n        _this.listens_ = {};\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        /** @private {number|null} */\r\n        _this.establishConnectionTimer_ = null;\r\n        /** @private {boolean} */\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        /** @private {?{\r\n         *   sendRequest(Object),\r\n         *   close()\r\n         * }} */\r\n        _this.realtime_ = null;\r\n        /** @private {string|null} */\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!string} action\r\n     * @param {*} body\r\n     * @param {function(*)=} onResponse\r\n     * @protected\r\n     */\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        this.listens_[pathString] = this.listens_[pathString] || {};\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens_[pathString][queryId] = listenSpec;\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!{onComplete(),\r\n     *           hashFn():!string,\r\n     *           query: !Query,\r\n     *           tag: ?number}} listenSpec\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {*} payload\r\n     * @param {!Query} query\r\n     * @private\r\n     */\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' +\r\n                    query\r\n                        .getQueryParams()\r\n                        .getIndex()\r\n                        .toString() +\r\n                    '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    /**\r\n     * @param {!string} credential\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined)\r\n            request[ /*hash*/'h'] = hash;\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete)\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {*} message\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        else if (action === 'm')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        else if (action === 'c')\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        else if (action === 'ac')\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        else if (action === 'sd')\r\n            this.onSecurityDebugPacket_(body);\r\n        else\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n        }, Math.floor(timeout));\r\n    };\r\n    /**\r\n     * @param {boolean} visible\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error$$1) {\r\n                self_1.log_('Failed to get token: ' + error$$1);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error$$1);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete)\r\n                    put.onComplete('disconnect');\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0)\r\n            this.outstandingPuts_ = [];\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {Array.<*>=} query\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete)\r\n            listen.onComplete('permission_denied');\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {!string} queryId\r\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens_[normalizedPathString] !== undefined) {\r\n            listen = this.listens_[normalizedPathString][queryId];\r\n            delete this.listens_[normalizedPathString][queryId];\r\n            if (util.getCount(this.listens_[normalizedPathString]) === 0) {\r\n                delete this.listens_[normalizedPathString];\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var _this = this;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        util.forEach(this.listens_, function (pathString, queries) {\r\n            util.forEach(queries, function (key, listenSpec) {\r\n                _this.sendListen_(listenSpec);\r\n            });\r\n        });\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i])\r\n                this.sendPut_(i);\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + firebase.SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParamaters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParamaters, function (error$$1, result) {\r\n            var data = result;\r\n            if (error$$1 === 404) {\r\n                data = null;\r\n                error$$1 = null;\r\n            }\r\n            if (error$$1 === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error$$1) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error$$1 == 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error$$1;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_\r\n     * @param {boolean} forceRestClient\r\n     * @param {!FirebaseApp} app\r\n     */\r\n    function Repo(repoInfo_, forceRestClient, app) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        // A list of data pieces and paths to be set when this client disconnects.\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        /**\r\n         * TODO: This should be @private but it's used by test_access.js and internal.js\r\n         * @type {?PersistentConnection}\r\n         */\r\n        this.persistentConnection_ = null;\r\n        /** @type {!AuthTokenProvider} */\r\n        var authTokenProvider = new AuthTokenProvider(app);\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactions_init_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return {string}  The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return {!string} The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     * @return {!Object}\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     *\r\n     * @private\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {boolean} isMerge\r\n     * @param {?number} tag\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) {\r\n                    return nodeFromJSON$1(raw);\r\n                });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) {\r\n                return nodeFromJSON$1(raw);\r\n            });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    /**\r\n     * TODO: This should be @private but it's used by test_access.js and internal.js\r\n     * @param {?function(!string, *):*} callback\r\n     * @private\r\n     */\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    /**\r\n     * @param {!boolean} connectStatus\r\n     * @private\r\n     */\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Object} updates\r\n     * @private\r\n     */\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (value, key) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {*} value\r\n     * @private\r\n     */\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    /**\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} newVal\r\n     * @param {number|string|null} newPriority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        util.forEach(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            var newNodeUnresolved = nodeFromJSON$1(changedValue);\r\n            changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            util.forEach(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     * @private\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, serverValues);\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {*} priority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                util.forEach(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined')\r\n            return;\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_)\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        util.forEach(stats, function (stat, value) {\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++)\r\n                stat += ' ';\r\n            console.log(stat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    /**\r\n     * @param {...*} var_args\r\n     * @private\r\n     */\r\n    Repo.prototype.log_ = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n    /**\r\n     * @param {?function(?Error, *=)} callback\r\n     * @param {!string} status\r\n     * @param {?string=} errorReason\r\n     */\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status == 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason)\r\n                        message += ': ' + errorReason;\r\n                    var error$$1 = new Error(message);\r\n                    error$$1.code = code;\r\n                    callback(error$$1);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() == this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ == PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty())\r\n            return null;\r\n        else\r\n            return this.path.getBack();\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null)\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            else\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        if (applyLocally === undefined)\r\n            applyLocally = true;\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error$$1, committed, snapshot) {\r\n            if (error$$1) {\r\n                deferred.reject(error$$1);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error$$1, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next;\r\n        while ((next = path.getFront()) !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        util.forEach(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst)\r\n            action(this);\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst)\r\n            action(this);\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null)\r\n                action(child);\r\n            else\r\n                child.forEachImmediateDescendantWithValue(action);\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null)\r\n            this.parent_.updateChild_(this.name_, this);\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\nRepo.prototype.transactions_init_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    else\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    while ((front = path.getFront()) !== null &&\r\n        transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                // Already marked.  No action needed.\r\n            }\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].interrupt();\r\n            }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].resume();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.database.checkDeleted_('delete');\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                this.database.repo_ = null;\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\r\n        if (opt_hash !== undefined) {\r\n            opt_hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */\r\nvar listens = function (firebaseRef) {\r\n    return firebaseRef.repo.persistentConnection_.listens_;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  listens: listens,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager.getInstance().databaseFromApp(app, url); }, \r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    }, null, true);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.registerDatabase = registerDatabase;\nexports.Database = Database;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.enableLogging = enableLogging;\nexports.ServerValue = ServerValue;\nexports.DataSnapshot = DataSnapshot;\nexports.OnDisconnect = OnDisconnect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/@firebase/database/dist/index.cjs.js\n// module id = 2vmM\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib_1 = require('tslib');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n * @param {*} assertion The assertion to be tested for falsiness\r\n * @param {!string} message The message to display if the check fails\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n * @param {string} message\r\n * @return {!Error}\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) == 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param {Array<number>} bytes Array of numbers representing characters.\r\n * @return {string} Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     * @type {string}\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, opt_webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = opt_webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param {string} input A string to encode.\r\n     * @param {boolean=} opt_webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param {string} input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} string representing the decoded value.\r\n     */\r\n    decodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param {string} input Input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\r\n     * @return {!Array<number>} bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, opt_webSafe) {\r\n        this.init_();\r\n        var charToByteMap = opt_webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 != 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 != 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n * @param {!string} str\r\n * @return {!string}\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param {string} str To be decoded\r\n * @return {?string} Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\n// TODO: Really needed (for JSCompiler type checking)?\r\nfunction patchProperty(obj, prop, value) {\r\n    obj[prop] = value;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\r\n     * @return {!function(?(Error), ?=)}\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return {string} user agent string\r\n */\r\nvar getUA = function () {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\r\n * Cordova `onDeviceReady`, which would normally wait for a callback.\r\n *\r\n * @return {boolean} isMobileCordova\r\n */\r\nvar isMobileCordova = function () {\r\n    return (typeof window !== 'undefined' &&\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n};\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return {boolean} True if ReactNative environment is detected.\r\n */\r\nvar isReactNative = function () {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n};\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return {boolean} True if Node.js environment is detected.\r\n */\r\nvar isNodeSdk = function () {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n};\n\nvar ERROR_NAME = 'FirebaseError';\r\nvar captureStackTrace = Error\r\n    .captureStackTrace;\r\n// Export for faking in tests\r\nfunction patchCapture(captureFake) {\r\n    var result = captureStackTrace;\r\n    captureStackTrace = captureFake;\r\n    return result;\r\n}\r\nvar FirebaseError = /** @class */ (function () {\r\n    function FirebaseError(code, message) {\r\n        this.code = code;\r\n        this.message = message;\r\n        // We want the stack value, if implemented by Error\r\n        if (captureStackTrace) {\r\n            // Patches this.stack, omitted calls above ErrorFactory#create\r\n            captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n        else {\r\n            var err_1 = Error.apply(this, arguments);\r\n            this.name = ERROR_NAME;\r\n            // Make non-enumerable getter for the property.\r\n            Object.defineProperty(this, 'stack', {\r\n                get: function () {\r\n                    return err_1.stack;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    return FirebaseError;\r\n}());\r\n// Back-door inheritance\r\nFirebaseError.prototype = Object.create(Error.prototype);\r\nFirebaseError.prototype.constructor = FirebaseError;\r\nFirebaseError.prototype.name = ERROR_NAME;\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n        // Matches {$name}, by default.\r\n        this.pattern = /\\{\\$([^}]+)}/g;\r\n        // empty\r\n    }\r\n    ErrorFactory.prototype.create = function (code, data) {\r\n        if (data === undefined) {\r\n            data = {};\r\n        }\r\n        var template = this.errors[code];\r\n        var fullCode = this.service + '/' + code;\r\n        var message;\r\n        if (template === undefined) {\r\n            message = 'Error';\r\n        }\r\n        else {\r\n            message = template.replace(this.pattern, function (match, key) {\r\n                var value = data[key];\r\n                return value !== undefined ? value.toString() : '<' + key + '?>';\r\n            });\r\n        }\r\n        // Service: Error message (service/code).\r\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\r\n        var err = new FirebaseError(fullCode, message);\r\n        // Populate the Error object with message parts for programmatic\r\n        // accesses (e.g., e.file).\r\n        for (var prop in data) {\r\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\r\n                continue;\r\n            }\r\n            err[prop] = data[prop];\r\n        }\r\n        return err;\r\n    };\r\n    return ErrorFactory;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {{header: *, claims: *, data: *, signature: string}}\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {?number}\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time and non-empty\r\n * signature.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return (!!decoded.signature &&\r\n        !!claims &&\r\n        typeof claims === 'object' &&\r\n        claims.hasOwnProperty('iat'));\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar safeGet = function (obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key))\r\n        return obj[key];\r\n    // else return undefined.\r\n};\r\n/**\r\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\r\n *\r\n * @param {?Object.<K,V>} obj Object to enumerate.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar forEach = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n};\r\n/**\r\n * Copies all the (own) properties from one object to another.\r\n * @param {!Object} objTo\r\n * @param {!Object} objFrom\r\n * @return {!Object} objTo\r\n */\r\nvar extend = function (objTo, objFrom) {\r\n    forEach(objFrom, function (key, value) {\r\n        objTo[key] = value;\r\n    });\r\n    return objTo;\r\n};\r\n/**\r\n * Returns a clone of the specified object.\r\n * @param {!Object} obj\r\n * @return {!Object} cloned obj.\r\n */\r\nvar clone = function (obj) {\r\n    return extend({}, obj);\r\n};\r\n/**\r\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\r\n * for functions.\r\n *\r\n * @param obj {*} A potential object.\r\n * @returns {boolean} True if it's an object.\r\n */\r\nvar isNonNullObject = function (obj) {\r\n    return typeof obj === 'object' && obj !== null;\r\n};\r\nvar isEmpty = function (obj) {\r\n    for (var key in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nvar getCount = function (obj) {\r\n    var rv = 0;\r\n    for (var key in obj) {\r\n        rv++;\r\n    }\r\n    return rv;\r\n};\r\nvar map = function (obj, f, opt_obj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        res[key] = f.call(opt_obj, obj[key], key, obj);\r\n    }\r\n    return res;\r\n};\r\nvar findKey = function (obj, fn, opt_this) {\r\n    for (var key in obj) {\r\n        if (fn.call(opt_this, obj[key], key, obj)) {\r\n            return key;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nvar findValue = function (obj, fn, opt_this) {\r\n    var key = findKey(obj, fn, opt_this);\r\n    return key && obj[key];\r\n};\r\nvar getAnyKey = function (obj) {\r\n    for (var key in obj) {\r\n        return key;\r\n    }\r\n};\r\nvar getValues = function (obj) {\r\n    var res = [];\r\n    var i = 0;\r\n    for (var key in obj) {\r\n        res[i++] = obj[key];\r\n    }\r\n    return res;\r\n};\r\n/**\r\n * Tests whether every key/value pair in an object pass the test implemented\r\n * by the provided function\r\n *\r\n * @param {?Object.<K,V>} obj Object to test.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar every = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            if (!fn(key, obj[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\r\n * object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n *\r\n * @param {!Object} querystringParams\r\n * @return {string}\r\n */\r\nvar querystring = function (querystringParams) {\r\n    var params = [];\r\n    forEach(querystringParams, function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    });\r\n    return params.length ? '&' + params.join('&') : '';\r\n};\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\r\n *\r\n * @param {string} querystring\r\n * @return {!Object}\r\n */\r\nvar querystringDecode = function (querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n/**\r\n * @fileoverview Abstract cryptographic hash interface.\r\n *\r\n * See Sha1 and Md5 for sample implementations.\r\n *\r\n */\r\n/**\r\n * Create a cryptographic hash instance.\r\n *\r\n * @constructor\r\n * @struct\r\n */\r\nvar Hash = /** @class */ (function () {\r\n    function Hash() {\r\n        /**\r\n         * The block size for the hasher.\r\n         * @type {number}\r\n         */\r\n        this.blockSize = -1;\r\n    }\r\n    return Hash;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @extends {Hash}\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sha1, _super);\r\n    function Sha1() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.total_ = 0;\r\n        _this.blockSize = 512 / 8;\r\n        _this.pad_[0] = 128;\r\n        for (var i = 1; i < _this.blockSize; ++i) {\r\n            _this.pad_[i] = 0;\r\n        }\r\n        _this.reset();\r\n        return _this;\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\r\n     * @param {number=} opt_offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\r\n        if (!opt_offset) {\r\n            opt_offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(opt_offset) << 24) |\r\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\r\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\r\n                        buf.charCodeAt(opt_offset + 3);\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[opt_offset] << 24) |\r\n                        (buf[opt_offset + 1] << 16) |\r\n                        (buf[opt_offset + 2] << 8) |\r\n                        buf[opt_offset + 3];\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, opt_length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (opt_length === undefined) {\r\n            opt_length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = opt_length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < opt_length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf == 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += opt_length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}(Hash));\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} minCount The minimum number of arguments to allow for the function call\r\n * @param {!number} maxCount The maximum number of argument to allow for the function call\r\n * @param {!number} argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} argumentNumber The index of the argument\r\n * @param {boolean} optional Whether or not the argument is optional\r\n * @return {!string} The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param {!string} fnName\r\n * @param {!number} argumentNumber\r\n * @param {!string} namespace\r\n * @param {boolean} optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace)\r\n        return;\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback)\r\n        return;\r\n    if (typeof callback !== 'function')\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context)\r\n        return;\r\n    if (typeof context !== 'object' || context === null)\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.CONSTANTS = CONSTANTS;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.patchProperty = patchProperty;\nexports.Deferred = Deferred;\nexports.getUA = getUA;\nexports.isMobileCordova = isMobileCordova;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.patchCapture = patchCapture;\nexports.jsonEval = jsonEval;\nexports.stringify = stringify;\nexports.decode = decode;\nexports.isAdmin = isAdmin;\nexports.issuedAtTime = issuedAtTime;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.clone = clone;\nexports.contains = contains;\nexports.every = every;\nexports.extend = extend;\nexports.findKey = findKey;\nexports.findValue = findValue;\nexports.forEach = forEach;\nexports.getAnyKey = getAnyKey;\nexports.getCount = getCount;\nexports.getValues = getValues;\nexports.isEmpty = isEmpty;\nexports.isNonNullObject = isNonNullObject;\nexports.map = map;\nexports.safeGet = safeGet;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.Sha1 = Sha1;\nexports.async = async;\nexports.createSubscribe = createSubscribe;\nexports.errorPrefix = errorPrefix;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/@firebase/util/dist/index.cjs.js\n// module id = 58xA\n// module chunks = 0","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/timers-browserify/main.js\n// module id = 6orE\n// module chunks = 0","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/@firebase/messaging/node_modules/tslib/tslib.es6.js\n// module id = 7tE5\n// module chunks = 0","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/@firebase/database/node_modules/tslib/tslib.es6.js\n// module id = 7wws\n// module chunks = 0","import firebase from 'firebase'\nimport { signOut } from './auth'\nimport { cleanProgress } from './upload_progress'\n\n\nconst footer = () => {\n  const d = document,\n    c = console.log\n  /*Todo el codigo de programacion asincrono y que interactue con\n  codigo html dinamico cono el retur , va a cargar\n  10 milisegundos despues de que carge el DOM*/\n  const footerScripts = setInterval(() => {\n    if (d.readyState === 'complete') {\n      //Para limpiar\n      clearInterval(footerScripts)\n      /*Selecciona los elementos del menu de navegacion\n            Guarda las secciones*/\n      const nav = d.querySelector('.Footer-menu'),\n        sections = d.querySelectorAll('.Content-section')\n\n      nav.addEventListener('click', e => {\n        e.preventDefault()\n        //T llea al top de la pagina\n        window.scroll(0,0)\n        /*SI el evento padre que origino el evento en este caso Footer coincide con que\n        sea un button*/\n\n        if (e.target.parentElement.matches('button')) {\n          //Para saber cual es el boton que estamos presionando\n          //className devuelve el atributo que esta solicitando ,el string completo\n          let btn = e.target.parentElement,\n            btnSection = btn.className.split('-')[0]\n\n          c(btn, btnSection)\n          /*Por cada seccion*/\n          sections.forEach(section => {\n            if (section.classList.contains(btnSection)) {\n              //XK kiero k se muestre\n              section.classList.add('u-show' , 'u-fadein')\n              section.classList.remove('u-hide')\n            } else {\n              section.classList.add('u-hide')\n              section.classList.remove('u-show' , 'u-fadein')\n            }\n          })\n          cleanProgress()\n\n        }\n      })\n    }\n  }, 100)\n\n  return `\n    <footer class=\"Footer  u-fixed\">\n      <nav class=\"Footer-menu\">\n        <button class=\"Profile-button\" title=\"Perfil\">\n          <i class=\"fa fa-user\"></i>\n        </button>\n        <button class=\"Uploader-button\" title=\"Subir Foto\">\n          <i class=\"fa fa-picture-o\"></i>\n        </button>\n        <button class=\"Timeline-button\" title=\"Home\">\n          <i class=\"fa fa-home\"></i>\n        </button>\n        <button class=\"Camera-button\" title=\"Cámara\">\n          <i class=\"fa fa-camera\"></i>\n        </button>\n        ${signOut()}\n      </nav>\n    </footer>\n  `\n}\n\nexport default footer\n\n\n\n// WEBPACK FOOTER //\n// ./components/footer.js","import firebase from 'firebase'\nconst timeline = () => {\nconst d = document,\nc = console.log,\ndbRef = firebase.database().ref().child('photos')\nlet photos\n/*Todo el codigo de programacion asincrono y que interactue con\ncodigo html dinamico cono el retur , va a cargar\n10 milisegundos despues de que carge el DOM*/\n\nconst timelineScripts= setInterval(()=>{\n  if(d.readyState ==='complete'){\n    //Para limpiar\n    clearInterval(timelineScripts)\n\n    const timelinePhotos = d.querySelector('.Timeline-photos')\n    //va a recibir un objeto qque se esta guardando en la BD de firebase\n    //cada foto k se sube tiene el avatar displayName PhotoURL uid\n    //figcaption colocar el avatar del usuario\n    function photoTemplate(obj) {\n      return `\n        <figure class=\"Photo\">\n          <img class=\"Photo-image\" src=\"${obj.photoURL}\">\n          <figcaption class=\"Photo-author\">\n            <img src=\"${obj.avatar}\" class=\"Photo-authorAvatar\">\n            <p class=\"Photo-authorName\">${obj.displayName}</p>\n          </figcaption>\n        </figure>\n      `\n    }\n\n    dbRef.once('value', data => {\n      //c( data, data.key, data.val() )\n      data.forEach(photo => {\n        photos = photoTemplate(photo.val()) + photos\n      })\n      timelinePhotos.innerHTML = photos\n    })\n\n    dbRef.on('child_added', data => {\n      timelinePhotos.insertAdjacentHTML(\n        'afterbegin',\n        photoTemplate(data.val())\n      )\n    })\n  }\n}, 100)\n\nreturn `\n  <article class=\"Timeline  Content-section  u-show\">\n    <aside class=\"Timeline-photos\"></aside>\n  </article>\n`\n}\n\nexport default timeline\n\n\n\n// WEBPACK FOOTER //\n// ./components/timeline.js","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nrequire('@firebase/polyfill');\nmodule.exports = require('@firebase/app').default;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/Firebase/app/index.js\n// module id = IxUF\n// module chunks = 0","import css from './style.scss'\nimport {init, ga} from './components/helpers/init.js'\nimport { isAuth } from './components/auth.js';\n\ninit()\n\nconst app = `\n  <main class=\"EDgram\">\n    ${isAuth()}\n  </main>\n`\n\ndocument.getElementById('root').innerHTML = app\n//Aqui este root es el id de la pagina template\n//Aqui se ejecuta\n/*console.log(\n  'Código del bundle index.js con Vanilla JS',\n  suma(5, 6),\n  resta(4, 8)\n)\n*/\n\nga()\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","import firebase from 'Firebase'\n\nexport function savePhotoInDB(url, user) {\n  firebase.database().ref().child('photos').push({\n    photoURL: url,\n    uid: user.uid,\n    displayName: user.displayName,\n    avatar: user.photoURL\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/helpers/photos_db.js","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = require('@firebase/database');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/Firebase/database/index.js\n// module id = NohU\n// module chunks = 0","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nrequire('@firebase/messaging');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/Firebase/messaging/index.js\n// module id = OJYo\n// module chunks = 0","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nrequire('@firebase/auth');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/Firebase/auth/index.js\n// module id = PHi2\n// module chunks = 0","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nrequire('@firebase/auth');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/firebase/auth/index.js\n// module id = RFlV\n// module chunks = 0","(function() {\n  var firebase = require('@firebase/app').default;\n  var g,aa=aa||{},k=this;function l(a){return\"string\"==typeof a}function ba(a){return\"boolean\"==typeof a}function ca(){}\nfunction da(a){var b=typeof a;if(\"object\"==b)if(a){if(a instanceof Array)return\"array\";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if(\"[object Window]\"==c)return\"object\";if(\"[object Array]\"==c||\"number\"==typeof a.length&&\"undefined\"!=typeof a.splice&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"splice\"))return\"array\";if(\"[object Function]\"==c||\"undefined\"!=typeof a.call&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"call\"))return\"function\"}else return\"null\";\nelse if(\"function\"==b&&\"undefined\"==typeof a.call)return\"object\";return b}function ea(a){return null===a}function fa(a){return\"array\"==da(a)}function ha(a){var b=da(a);return\"array\"==b||\"object\"==b&&\"number\"==typeof a.length}function n(a){return\"function\"==da(a)}function q(a){var b=typeof a;return\"object\"==b&&null!=a||\"function\"==b}var ia=\"closure_uid_\"+(1E9*Math.random()>>>0),ja=0;function ka(a,b,c){return a.call.apply(a.bind,arguments)}\nfunction la(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}function r(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?r=ka:r=la;return r.apply(null,arguments)}\nfunction ma(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}}var na=Date.now||function(){return+new Date};function t(a,b){function c(){}c.prototype=b.prototype;a.lb=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.ad=function(a,c,f){for(var d=Array(arguments.length-2),e=2;e<arguments.length;e++)d[e-2]=arguments[e];return b.prototype[c].apply(a,d)}};function oa(a){a.prototype.then=a.prototype.then;a.prototype.$goog_Thenable=!0}function pa(a){if(!a)return!1;try{return!!a.$goog_Thenable}catch(b){return!1}};function u(a){if(Error.captureStackTrace)Error.captureStackTrace(this,u);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a))}t(u,Error);u.prototype.name=\"CustomError\";function qa(a,b){a=a.split(\"%s\");for(var c=\"\",d=a.length-1,e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:\"%s\");u.call(this,c+a[d])}t(qa,u);qa.prototype.name=\"AssertionError\";function ra(a,b){throw new qa(\"Failure\"+(a?\": \"+a:\"\"),Array.prototype.slice.call(arguments,1));};function sa(a,b){this.c=a;this.f=b;this.b=0;this.a=null}sa.prototype.get=function(){if(0<this.b){this.b--;var a=this.a;this.a=a.next;a.next=null}else a=this.c();return a};function ta(a,b){a.f(b);100>a.b&&(a.b++,b.next=a.a,a.a=b)};function ua(){this.b=this.a=null}var wa=new sa(function(){return new va},function(a){a.reset()});ua.prototype.add=function(a,b){var c=wa.get();c.set(a,b);this.b?this.b.next=c:this.a=c;this.b=c};function xa(){var a=ya,b=null;a.a&&(b=a.a,a.a=a.a.next,a.a||(a.b=null),b.next=null);return b}function va(){this.next=this.b=this.a=null}va.prototype.set=function(a,b){this.a=a;this.b=b;this.next=null};va.prototype.reset=function(){this.next=this.b=this.a=null};var za=Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b,void 0)}:function(a,b){if(l(a))return l(b)&&1==b.length?a.indexOf(b,0):-1;for(var c=0;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1},v=Array.prototype.forEach?function(a,b,c){Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=l(a)?a.split(\"\"):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};\nfunction Aa(a,b){var c=a.length,d=l(a)?a.split(\"\"):a;for(--c;0<=c;--c)c in d&&b.call(void 0,d[c],c,a)}\nvar Ba=Array.prototype.map?function(a,b){return Array.prototype.map.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=Array(c),e=l(a)?a.split(\"\"):a,f=0;f<c;f++)f in e&&(d[f]=b.call(void 0,e[f],f,a));return d},Ca=Array.prototype.some?function(a,b){return Array.prototype.some.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=l(a)?a.split(\"\"):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a))return!0;return!1};\nfunction Da(a){a:{var b=Ea;for(var c=a.length,d=l(a)?a.split(\"\"):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a)){b=e;break a}b=-1}return 0>b?null:l(a)?a.charAt(b):a[b]}function Fa(a,b){return 0<=za(a,b)}function Ga(a,b){b=za(a,b);var c;(c=0<=b)&&Array.prototype.splice.call(a,b,1);return c}function w(a,b){var c=0;Aa(a,function(d,e){b.call(void 0,d,e,a)&&1==Array.prototype.splice.call(a,e,1).length&&c++})}function Ha(a){return Array.prototype.concat.apply([],arguments)}\nfunction Ia(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]};function Ja(a,b){for(var c=a.split(\"%s\"),d=\"\",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join(\"%s\")}var Ka=String.prototype.trim?function(a){return a.trim()}:function(a){return/^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(a)[1]};\nfunction La(a){if(!Ma.test(a))return a;-1!=a.indexOf(\"&\")&&(a=a.replace(Na,\"&amp;\"));-1!=a.indexOf(\"<\")&&(a=a.replace(Oa,\"&lt;\"));-1!=a.indexOf(\">\")&&(a=a.replace(Pa,\"&gt;\"));-1!=a.indexOf('\"')&&(a=a.replace(Qa,\"&quot;\"));-1!=a.indexOf(\"'\")&&(a=a.replace(Ra,\"&#39;\"));-1!=a.indexOf(\"\\x00\")&&(a=a.replace(Sa,\"&#0;\"));return a}var Na=/&/g,Oa=/</g,Pa=/>/g,Qa=/\"/g,Ra=/'/g,Sa=/\\x00/g,Ma=/[\\x00&<>\"']/;function x(a,b){return-1!=a.indexOf(b)}function Ta(a,b){return a<b?-1:a>b?1:0};var Ua;a:{var Va=k.navigator;if(Va){var Wa=Va.userAgent;if(Wa){Ua=Wa;break a}}Ua=\"\"}function y(a){return x(Ua,a)};function Xa(a,b){for(var c in a)b.call(void 0,a[c],c,a)}function Ya(a){for(var b in a)return!1;return!0}function Za(a){var b={},c;for(c in a)b[c]=a[c];return b}var $a=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");function ab(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<$a.length;f++)c=$a[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};function bb(a){k.setTimeout(function(){throw a;},0)}var cb;\nfunction db(){var a=k.MessageChannel;\"undefined\"===typeof a&&\"undefined\"!==typeof window&&window.postMessage&&window.addEventListener&&!y(\"Presto\")&&(a=function(){var a=document.createElement(\"IFRAME\");a.style.display=\"none\";a.src=\"\";document.documentElement.appendChild(a);var b=a.contentWindow;a=b.document;a.open();a.write(\"\");a.close();var c=\"callImmediate\"+Math.random(),d=\"file:\"==b.location.protocol?\"*\":b.location.protocol+\"//\"+b.location.host;a=r(function(a){if((\"*\"==d||a.origin==d)&&a.data==\nc)this.port1.onmessage()},this);b.addEventListener(\"message\",a,!1);this.port1={};this.port2={postMessage:function(){b.postMessage(c,d)}}});if(\"undefined\"!==typeof a&&!y(\"Trident\")&&!y(\"MSIE\")){var b=new a,c={},d=c;b.port1.onmessage=function(){if(void 0!==c.next){c=c.next;var a=c.rb;c.rb=null;a()}};return function(a){d.next={rb:a};d=d.next;b.port2.postMessage(0)}}return\"undefined\"!==typeof document&&\"onreadystatechange\"in document.createElement(\"SCRIPT\")?function(a){var b=document.createElement(\"SCRIPT\");\nb.onreadystatechange=function(){b.onreadystatechange=null;b.parentNode.removeChild(b);b=null;a();a=null};document.documentElement.appendChild(b)}:function(a){k.setTimeout(a,0)}};function eb(a,b){fb||gb();hb||(fb(),hb=!0);ya.add(a,b)}var fb;function gb(){if(k.Promise&&k.Promise.resolve){var a=k.Promise.resolve(void 0);fb=function(){a.then(ib)}}else fb=function(){var a=ib;!n(k.setImmediate)||k.Window&&k.Window.prototype&&!y(\"Edge\")&&k.Window.prototype.setImmediate==k.setImmediate?(cb||(cb=db()),cb(a)):k.setImmediate(a)}}var hb=!1,ya=new ua;function ib(){for(var a;a=xa();){try{a.a.call(a.b)}catch(b){bb(b)}ta(wa,a)}hb=!1};function z(a,b){this.a=jb;this.j=void 0;this.f=this.b=this.c=null;this.g=this.h=!1;if(a!=ca)try{var c=this;a.call(b,function(a){kb(c,lb,a)},function(a){if(!(a instanceof mb))try{if(a instanceof Error)throw a;throw Error(\"Promise rejected.\");}catch(e){}kb(c,nb,a)})}catch(d){kb(this,nb,d)}}var jb=0,lb=2,nb=3;function ob(){this.next=this.f=this.b=this.g=this.a=null;this.c=!1}ob.prototype.reset=function(){this.f=this.b=this.g=this.a=null;this.c=!1};var pb=new sa(function(){return new ob},function(a){a.reset()});\nfunction qb(a,b,c){var d=pb.get();d.g=a;d.b=b;d.f=c;return d}function A(a){if(a instanceof z)return a;var b=new z(ca);kb(b,lb,a);return b}function B(a){return new z(function(b,c){c(a)})}function rb(a,b,c){sb(a,b,c,null)||eb(ma(b,a))}function tb(a){return new z(function(b,c){var d=a.length,e=[];if(d)for(var f=function(a,c){d--;e[a]=c;0==d&&b(e)},h=function(a){c(a)},m=0,p;m<a.length;m++)p=a[m],rb(p,ma(f,m),h);else b(e)})}\nfunction ub(a){return new z(function(b){var c=a.length,d=[];if(c)for(var e=function(a,e,f){c--;d[a]=e?{Zb:!0,value:f}:{Zb:!1,reason:f};0==c&&b(d)},f=0,h;f<a.length;f++)h=a[f],rb(h,ma(e,f,!0),ma(e,f,!1));else b(d)})}z.prototype.then=function(a,b,c){return vb(this,n(a)?a:null,n(b)?b:null,c)};oa(z);g=z.prototype;g.ha=function(a,b){a=qb(a,a,b);a.c=!0;wb(this,a);return this};g.m=function(a,b){return vb(this,null,a,b)};g.cancel=function(a){this.a==jb&&eb(function(){var b=new mb(a);xb(this,b)},this)};\nfunction xb(a,b){if(a.a==jb)if(a.c){var c=a.c;if(c.b){for(var d=0,e=null,f=null,h=c.b;h&&(h.c||(d++,h.a==a&&(e=h),!(e&&1<d)));h=h.next)e||(f=h);e&&(c.a==jb&&1==d?xb(c,b):(f?(d=f,d.next==c.f&&(c.f=d),d.next=d.next.next):yb(c),zb(c,e,nb,b)))}a.c=null}else kb(a,nb,b)}function wb(a,b){a.b||a.a!=lb&&a.a!=nb||Ab(a);a.f?a.f.next=b:a.b=b;a.f=b}\nfunction vb(a,b,c,d){var e=qb(null,null,null);e.a=new z(function(a,h){e.g=b?function(c){try{var e=b.call(d,c);a(e)}catch(E){h(E)}}:a;e.b=c?function(b){try{var e=c.call(d,b);void 0===e&&b instanceof mb?h(b):a(e)}catch(E){h(E)}}:h});e.a.c=a;wb(a,e);return e.a}g.Kc=function(a){this.a=jb;kb(this,lb,a)};g.Lc=function(a){this.a=jb;kb(this,nb,a)};\nfunction kb(a,b,c){a.a==jb&&(a===c&&(b=nb,c=new TypeError(\"Promise cannot resolve to itself\")),a.a=1,sb(c,a.Kc,a.Lc,a)||(a.j=c,a.a=b,a.c=null,Ab(a),b!=nb||c instanceof mb||Bb(a,c)))}function sb(a,b,c,d){if(a instanceof z)return wb(a,qb(b||ca,c||null,d)),!0;if(pa(a))return a.then(b,c,d),!0;if(q(a))try{var e=a.then;if(n(e))return Cb(a,e,b,c,d),!0}catch(f){return c.call(d,f),!0}return!1}\nfunction Cb(a,b,c,d,e){function f(a){m||(m=!0,d.call(e,a))}function h(a){m||(m=!0,c.call(e,a))}var m=!1;try{b.call(a,h,f)}catch(p){f(p)}}function Ab(a){a.h||(a.h=!0,eb(a.Ub,a))}function yb(a){var b=null;a.b&&(b=a.b,a.b=b.next,b.next=null);a.b||(a.f=null);return b}g.Ub=function(){for(var a;a=yb(this);)zb(this,a,this.a,this.j);this.h=!1};\nfunction zb(a,b,c,d){if(c==nb&&b.b&&!b.c)for(;a&&a.g;a=a.c)a.g=!1;if(b.a)b.a.c=null,Db(b,c,d);else try{b.c?b.g.call(b.f):Db(b,c,d)}catch(e){Eb.call(null,e)}ta(pb,b)}function Db(a,b,c){b==lb?a.g.call(a.f,c):a.b&&a.b.call(a.f,c)}function Bb(a,b){a.g=!0;eb(function(){a.g&&Eb.call(null,b)})}var Eb=bb;function mb(a){u.call(this,a)}t(mb,u);mb.prototype.name=\"cancel\";function Fb(){0!=Gb&&(Hb[this[ia]||(this[ia]=++ja)]=this);this.pa=this.pa;this.oa=this.oa}var Gb=0,Hb={};Fb.prototype.pa=!1;function Ib(a){if(!a.pa&&(a.pa=!0,a.ua(),0!=Gb)){var b=a[ia]||(a[ia]=++ja);if(0!=Gb&&a.oa&&0<a.oa.length)throw Error(a+\" did not empty its onDisposeCallbacks queue. This probably means it overrode dispose() or disposeInternal() without calling the superclass' method.\");delete Hb[b]}}Fb.prototype.ua=function(){if(this.oa)for(;this.oa.length;)this.oa.shift()()};function Jb(a){Jb[\" \"](a);return a}Jb[\" \"]=ca;function Kb(a,b){var c=Lb;return Object.prototype.hasOwnProperty.call(c,a)?c[a]:c[a]=b(a)};var Mb=y(\"Opera\"),C=y(\"Trident\")||y(\"MSIE\"),Nb=y(\"Edge\"),Ob=Nb||C,Pb=y(\"Gecko\")&&!(x(Ua.toLowerCase(),\"webkit\")&&!y(\"Edge\"))&&!(y(\"Trident\")||y(\"MSIE\"))&&!y(\"Edge\"),Qb=x(Ua.toLowerCase(),\"webkit\")&&!y(\"Edge\");function Rb(){var a=k.document;return a?a.documentMode:void 0}var Sb;\na:{var Tb=\"\",Ub=function(){var a=Ua;if(Pb)return/rv:([^\\);]+)(\\)|;)/.exec(a);if(Nb)return/Edge\\/([\\d\\.]+)/.exec(a);if(C)return/\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);if(Qb)return/WebKit\\/(\\S+)/.exec(a);if(Mb)return/(?:Version)[ \\/]?(\\S+)/.exec(a)}();Ub&&(Tb=Ub?Ub[1]:\"\");if(C){var Vb=Rb();if(null!=Vb&&Vb>parseFloat(Tb)){Sb=String(Vb);break a}}Sb=Tb}var Lb={};\nfunction Wb(a){return Kb(a,function(){for(var b=0,c=Ka(String(Sb)).split(\".\"),d=Ka(String(a)).split(\".\"),e=Math.max(c.length,d.length),f=0;0==b&&f<e;f++){var h=c[f]||\"\",m=d[f]||\"\";do{h=/(\\d*)(\\D*)(.*)/.exec(h)||[\"\",\"\",\"\",\"\"];m=/(\\d*)(\\D*)(.*)/.exec(m)||[\"\",\"\",\"\",\"\"];if(0==h[0].length&&0==m[0].length)break;b=Ta(0==h[1].length?0:parseInt(h[1],10),0==m[1].length?0:parseInt(m[1],10))||Ta(0==h[2].length,0==m[2].length)||Ta(h[2],m[2]);h=h[3];m=m[3]}while(0==b)}return 0<=b})}var Xb;var Yb=k.document;\nXb=Yb&&C?Rb()||(\"CSS1Compat\"==Yb.compatMode?parseInt(Sb,10):5):void 0;var Zb=Object.freeze||function(a){return a};var $b=!C||9<=Number(Xb),ac=C&&!Wb(\"9\"),bc=function(){if(!k.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},\"passive\",{get:function(){a=!0}});k.addEventListener(\"test\",ca,b);k.removeEventListener(\"test\",ca,b);return a}();function D(a,b){this.type=a;this.b=this.target=b;this.Eb=!0}D.prototype.preventDefault=function(){this.Eb=!1};function cc(a,b){D.call(this,a?a.type:\"\");this.relatedTarget=this.b=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=0;this.key=\"\";this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.pointerId=0;this.pointerType=\"\";this.a=null;if(a){var c=this.type=a.type,d=a.changedTouches?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.b=b;if(b=a.relatedTarget){if(Pb){a:{try{Jb(b.nodeName);var e=!0;break a}catch(f){}e=!1}e||(b=null)}}else\"mouseover\"==c?b=\na.fromElement:\"mouseout\"==c&&(b=a.toElement);this.relatedTarget=b;null===d?(this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0):(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0);this.button=a.button;this.key=a.key||\"\";this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=\na.metaKey;this.pointerId=a.pointerId||0;this.pointerType=l(a.pointerType)?a.pointerType:dc[a.pointerType]||\"\";this.a=a;a.defaultPrevented&&this.preventDefault()}}t(cc,D);var dc=Zb({2:\"touch\",3:\"pen\",4:\"mouse\"});cc.prototype.preventDefault=function(){cc.lb.preventDefault.call(this);var a=this.a;if(a.preventDefault)a.preventDefault();else if(a.returnValue=!1,ac)try{if(a.ctrlKey||112<=a.keyCode&&123>=a.keyCode)a.keyCode=-1}catch(b){}};cc.prototype.f=function(){return this.a};var ec=\"closure_listenable_\"+(1E6*Math.random()|0),fc=0;function gc(a,b,c,d,e){this.listener=a;this.proxy=null;this.src=b;this.type=c;this.capture=!!d;this.La=e;this.key=++fc;this.ma=this.Ha=!1}function hc(a){a.ma=!0;a.listener=null;a.proxy=null;a.src=null;a.La=null};function jc(a){this.src=a;this.a={};this.b=0}jc.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.a[f];a||(a=this.a[f]=[],this.b++);var h=kc(a,b,d,e);-1<h?(b=a[h],c||(b.Ha=!1)):(b=new gc(b,this.src,f,!!d,e),b.Ha=c,a.push(b));return b};function lc(a,b){var c=b.type;c in a.a&&Ga(a.a[c],b)&&(hc(b),0==a.a[c].length&&(delete a.a[c],a.b--))}function kc(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.ma&&f.listener==b&&f.capture==!!c&&f.La==d)return e}return-1};var mc=\"closure_lm_\"+(1E6*Math.random()|0),nc={},oc=0;function pc(a,b,c,d,e){if(d&&d.once)qc(a,b,c,d,e);else if(fa(b))for(var f=0;f<b.length;f++)pc(a,b[f],c,d,e);else c=rc(c),a&&a[ec]?sc(a,b,c,q(d)?!!d.capture:!!d,e):tc(a,b,c,!1,d,e)}\nfunction tc(a,b,c,d,e,f){if(!b)throw Error(\"Invalid event type\");var h=q(e)?!!e.capture:!!e,m=uc(a);m||(a[mc]=m=new jc(a));c=m.add(b,c,d,h,f);if(!c.proxy){d=vc();c.proxy=d;d.src=a;d.listener=c;if(a.addEventListener)bc||(e=h),void 0===e&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(wc(b.toString()),d);else if(a.addListener&&a.removeListener)a.addListener(d);else throw Error(\"addEventListener and attachEvent are unavailable.\");oc++}}\nfunction vc(){var a=xc,b=$b?function(c){return a.call(b.src,b.listener,c)}:function(c){c=a.call(b.src,b.listener,c);if(!c)return c};return b}function qc(a,b,c,d,e){if(fa(b))for(var f=0;f<b.length;f++)qc(a,b[f],c,d,e);else c=rc(c),a&&a[ec]?yc(a,b,c,q(d)?!!d.capture:!!d,e):tc(a,b,c,!0,d,e)}\nfunction F(a,b,c,d,e){if(fa(b))for(var f=0;f<b.length;f++)F(a,b[f],c,d,e);else(d=q(d)?!!d.capture:!!d,c=rc(c),a&&a[ec])?(a=a.u,b=String(b).toString(),b in a.a&&(f=a.a[b],c=kc(f,c,d,e),-1<c&&(hc(f[c]),Array.prototype.splice.call(f,c,1),0==f.length&&(delete a.a[b],a.b--)))):a&&(a=uc(a))&&(b=a.a[b.toString()],a=-1,b&&(a=kc(b,c,d,e)),(c=-1<a?b[a]:null)&&zc(c))}\nfunction zc(a){if(\"number\"!=typeof a&&a&&!a.ma){var b=a.src;if(b&&b[ec])lc(b.u,a);else{var c=a.type,d=a.proxy;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(wc(c),d):b.addListener&&b.removeListener&&b.removeListener(d);oc--;(c=uc(b))?(lc(c,a),0==c.b&&(c.src=null,b[mc]=null)):hc(a)}}}function wc(a){return a in nc?nc[a]:nc[a]=\"on\"+a}\nfunction Ac(a,b,c,d){var e=!0;if(a=uc(a))if(b=a.a[b.toString()])for(b=b.concat(),a=0;a<b.length;a++){var f=b[a];f&&f.capture==c&&!f.ma&&(f=Bc(f,d),e=e&&!1!==f)}return e}function Bc(a,b){var c=a.listener,d=a.La||a.src;a.Ha&&zc(a);return c.call(d,b)}\nfunction xc(a,b){if(a.ma)return!0;if(!$b){if(!b)a:{b=[\"window\",\"event\"];for(var c=k,d=0;d<b.length;d++)if(c=c[b[d]],null==c){b=null;break a}b=c}d=b;b=new cc(d,this);c=!0;if(!(0>d.keyCode||void 0!=d.returnValue)){a:{var e=!1;if(0==d.keyCode)try{d.keyCode=-1;break a}catch(h){e=!0}if(e||void 0==d.returnValue)d.returnValue=!0}d=[];for(e=b.b;e;e=e.parentNode)d.push(e);a=a.type;for(e=d.length-1;0<=e;e--){b.b=d[e];var f=Ac(d[e],a,!0,b);c=c&&f}for(e=0;e<d.length;e++)b.b=d[e],f=Ac(d[e],a,!1,b),c=c&&f}return c}return Bc(a,\nnew cc(b,this))}function uc(a){a=a[mc];return a instanceof jc?a:null}var Cc=\"__closure_events_fn_\"+(1E9*Math.random()>>>0);function rc(a){if(n(a))return a;a[Cc]||(a[Cc]=function(b){return a.handleEvent(b)});return a[Cc]};function G(){Fb.call(this);this.u=new jc(this);this.Mb=this;this.Ta=null}t(G,Fb);G.prototype[ec]=!0;G.prototype.addEventListener=function(a,b,c,d){pc(this,a,b,c,d)};G.prototype.removeEventListener=function(a,b,c,d){F(this,a,b,c,d)};\nG.prototype.dispatchEvent=function(a){var b,c=this.Ta;if(c)for(b=[];c;c=c.Ta)b.push(c);c=this.Mb;var d=a.type||a;if(l(a))a=new D(a,c);else if(a instanceof D)a.target=a.target||c;else{var e=a;a=new D(d,c);ab(a,e)}e=!0;if(b)for(var f=b.length-1;0<=f;f--){var h=a.b=b[f];e=Dc(h,d,!0,a)&&e}h=a.b=c;e=Dc(h,d,!0,a)&&e;e=Dc(h,d,!1,a)&&e;if(b)for(f=0;f<b.length;f++)h=a.b=b[f],e=Dc(h,d,!1,a)&&e;return e};\nG.prototype.ua=function(){G.lb.ua.call(this);if(this.u){var a=this.u,b=0,c;for(c in a.a){for(var d=a.a[c],e=0;e<d.length;e++)++b,hc(d[e]);delete a.a[c];a.b--}}this.Ta=null};function sc(a,b,c,d,e){a.u.add(String(b),c,!1,d,e)}function yc(a,b,c,d,e){a.u.add(String(b),c,!0,d,e)}\nfunction Dc(a,b,c,d){b=a.u.a[String(b)];if(!b)return!0;b=b.concat();for(var e=!0,f=0;f<b.length;++f){var h=b[f];if(h&&!h.ma&&h.capture==c){var m=h.listener,p=h.La||h.src;h.Ha&&lc(a.u,h);e=!1!==m.call(p,d)&&e}}return e&&0!=d.Eb};function Ec(a,b,c){if(n(a))c&&(a=r(a,c));else if(a&&\"function\"==typeof a.handleEvent)a=r(a.handleEvent,a);else throw Error(\"Invalid listener argument\");return 2147483647<Number(b)?-1:k.setTimeout(a,b||0)}function Fc(a){var b=null;return(new z(function(c,d){b=Ec(function(){c(void 0)},a);-1==b&&d(Error(\"Failed to schedule timer.\"))})).m(function(a){k.clearTimeout(b);throw a;})};function Gc(a){if(a.S&&\"function\"==typeof a.S)return a.S();if(l(a))return a.split(\"\");if(ha(a)){for(var b=[],c=a.length,d=0;d<c;d++)b.push(a[d]);return b}b=[];c=0;for(d in a)b[c++]=a[d];return b}function Hc(a){if(a.U&&\"function\"==typeof a.U)return a.U();if(!a.S||\"function\"!=typeof a.S){if(ha(a)||l(a)){var b=[];a=a.length;for(var c=0;c<a;c++)b.push(c);return b}b=[];c=0;for(var d in a)b[c++]=d;return b}}\nfunction Ic(a,b){if(a.forEach&&\"function\"==typeof a.forEach)a.forEach(b,void 0);else if(ha(a)||l(a))v(a,b,void 0);else for(var c=Hc(a),d=Gc(a),e=d.length,f=0;f<e;f++)b.call(void 0,d[f],c&&c[f],a)};function Kc(a,b){this.b={};this.a=[];this.c=0;var c=arguments.length;if(1<c){if(c%2)throw Error(\"Uneven number of arguments\");for(var d=0;d<c;d+=2)this.set(arguments[d],arguments[d+1])}else if(a)if(a instanceof Kc)for(c=a.U(),d=0;d<c.length;d++)this.set(c[d],a.get(c[d]));else for(d in a)this.set(d,a[d])}g=Kc.prototype;g.S=function(){Lc(this);for(var a=[],b=0;b<this.a.length;b++)a.push(this.b[this.a[b]]);return a};g.U=function(){Lc(this);return this.a.concat()};\ng.clear=function(){this.b={};this.c=this.a.length=0};function Lc(a){if(a.c!=a.a.length){for(var b=0,c=0;b<a.a.length;){var d=a.a[b];Mc(a.b,d)&&(a.a[c++]=d);b++}a.a.length=c}if(a.c!=a.a.length){var e={};for(c=b=0;b<a.a.length;)d=a.a[b],Mc(e,d)||(a.a[c++]=d,e[d]=1),b++;a.a.length=c}}g.get=function(a,b){return Mc(this.b,a)?this.b[a]:b};g.set=function(a,b){Mc(this.b,a)||(this.c++,this.a.push(a));this.b[a]=b};\ng.forEach=function(a,b){for(var c=this.U(),d=0;d<c.length;d++){var e=c[d],f=this.get(e);a.call(b,f,e,this)}};function Mc(a,b){return Object.prototype.hasOwnProperty.call(a,b)};var Nc=/^(?:([^:/?#.]+):)?(?:\\/\\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$/;function Oc(a,b){if(a){a=a.split(\"&\");for(var c=0;c<a.length;c++){var d=a[c].indexOf(\"=\"),e=null;if(0<=d){var f=a[c].substring(0,d);e=a[c].substring(d+1)}else f=a[c];b(f,e?decodeURIComponent(e.replace(/\\+/g,\" \")):\"\")}}};function Pc(a,b){this.b=this.l=this.c=\"\";this.j=null;this.h=this.g=\"\";this.f=!1;if(a instanceof Pc){this.f=void 0!==b?b:a.f;Qc(this,a.c);this.l=a.l;this.b=a.b;Rc(this,a.j);this.g=a.g;b=a.a;var c=new Sc;c.c=b.c;b.a&&(c.a=new Kc(b.a),c.b=b.b);Tc(this,c);this.h=a.h}else a&&(c=String(a).match(Nc))?(this.f=!!b,Qc(this,c[1]||\"\",!0),this.l=Uc(c[2]||\"\"),this.b=Uc(c[3]||\"\",!0),Rc(this,c[4]),this.g=Uc(c[5]||\"\",!0),Tc(this,c[6]||\"\",!0),this.h=Uc(c[7]||\"\")):(this.f=!!b,this.a=new Sc(null,this.f))}\nPc.prototype.toString=function(){var a=[],b=this.c;b&&a.push(Vc(b,Wc,!0),\":\");var c=this.b;if(c||\"file\"==b)a.push(\"//\"),(b=this.l)&&a.push(Vc(b,Wc,!0),\"@\"),a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),c=this.j,null!=c&&a.push(\":\",String(c));if(c=this.g)this.b&&\"/\"!=c.charAt(0)&&a.push(\"/\"),a.push(Vc(c,\"/\"==c.charAt(0)?Xc:Yc,!0));(c=this.a.toString())&&a.push(\"?\",c);(c=this.h)&&a.push(\"#\",Vc(c,Zc));return a.join(\"\")};\nfunction Qc(a,b,c){a.c=c?Uc(b,!0):b;a.c&&(a.c=a.c.replace(/:$/,\"\"))}function Rc(a,b){if(b){b=Number(b);if(isNaN(b)||0>b)throw Error(\"Bad port number \"+b);a.j=b}else a.j=null}function Tc(a,b,c){b instanceof Sc?(a.a=b,$c(a.a,a.f)):(c||(b=Vc(b,ad)),a.a=new Sc(b,a.f))}function H(a,b,c){a.a.set(b,c)}function bd(a,b){return a.a.get(b)}function cd(a){return a instanceof Pc?new Pc(a):new Pc(a,void 0)}function dd(a,b){var c=new Pc(null,void 0);Qc(c,\"https\");a&&(c.b=a);b&&(c.g=b);return c}\nfunction Uc(a,b){return a?b?decodeURI(a.replace(/%25/g,\"%2525\")):decodeURIComponent(a):\"\"}function Vc(a,b,c){return l(a)?(a=encodeURI(a).replace(b,ed),c&&(a=a.replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),a):null}function ed(a){a=a.charCodeAt(0);return\"%\"+(a>>4&15).toString(16)+(a&15).toString(16)}var Wc=/[#\\/\\?@]/g,Yc=/[#\\?:]/g,Xc=/[#\\?]/g,ad=/[#\\?@]/g,Zc=/#/g;function Sc(a,b){this.b=this.a=null;this.c=a||null;this.f=!!b}\nfunction fd(a){a.a||(a.a=new Kc,a.b=0,a.c&&Oc(a.c,function(b,c){a.add(decodeURIComponent(b.replace(/\\+/g,\" \")),c)}))}function gd(a){var b=Hc(a);if(\"undefined\"==typeof b)throw Error(\"Keys are undefined\");var c=new Sc(null,void 0);a=Gc(a);for(var d=0;d<b.length;d++){var e=b[d],f=a[d];fa(f)?hd(c,e,f):c.add(e,f)}return c}g=Sc.prototype;g.add=function(a,b){fd(this);this.c=null;a=id(this,a);var c=this.a.get(a);c||this.a.set(a,c=[]);c.push(b);this.b+=1;return this};\nfunction jd(a,b){fd(a);b=id(a,b);Mc(a.a.b,b)&&(a.c=null,a.b-=a.a.get(b).length,a=a.a,Mc(a.b,b)&&(delete a.b[b],a.c--,a.a.length>2*a.c&&Lc(a)))}g.clear=function(){this.a=this.c=null;this.b=0};function kd(a,b){fd(a);b=id(a,b);return Mc(a.a.b,b)}g.forEach=function(a,b){fd(this);this.a.forEach(function(c,d){v(c,function(c){a.call(b,c,d,this)},this)},this)};g.U=function(){fd(this);for(var a=this.a.S(),b=this.a.U(),c=[],d=0;d<b.length;d++)for(var e=a[d],f=0;f<e.length;f++)c.push(b[d]);return c};\ng.S=function(a){fd(this);var b=[];if(l(a))kd(this,a)&&(b=Ha(b,this.a.get(id(this,a))));else{a=this.a.S();for(var c=0;c<a.length;c++)b=Ha(b,a[c])}return b};g.set=function(a,b){fd(this);this.c=null;a=id(this,a);kd(this,a)&&(this.b-=this.a.get(a).length);this.a.set(a,[b]);this.b+=1;return this};g.get=function(a,b){a=a?this.S(a):[];return 0<a.length?String(a[0]):b};function hd(a,b,c){jd(a,b);0<c.length&&(a.c=null,a.a.set(id(a,b),Ia(c)),a.b+=c.length)}\ng.toString=function(){if(this.c)return this.c;if(!this.a)return\"\";for(var a=[],b=this.a.U(),c=0;c<b.length;c++){var d=b[c],e=encodeURIComponent(String(d));d=this.S(d);for(var f=0;f<d.length;f++){var h=e;\"\"!==d[f]&&(h+=\"=\"+encodeURIComponent(String(d[f])));a.push(h)}}return this.c=a.join(\"&\")};function id(a,b){b=String(b);a.f&&(b=b.toLowerCase());return b}function $c(a,b){b&&!a.f&&(fd(a),a.c=null,a.a.forEach(function(a,b){var c=b.toLowerCase();b!=c&&(jd(this,b),hd(this,c,a))},a));a.f=b};var ld=!C||9<=Number(Xb);function md(){this.a=\"\";this.b=nd}md.prototype.la=!0;md.prototype.ja=function(){return this.a};md.prototype.toString=function(){return\"Const{\"+this.a+\"}\"};function od(a){if(a instanceof md&&a.constructor===md&&a.b===nd)return a.a;ra(\"expected object of type Const, got '\"+a+\"'\");return\"type_error:Const\"}var nd={};function pd(a){var b=new md;b.a=a;return b}pd(\"\");function qd(){this.a=\"\";this.b=rd}qd.prototype.la=!0;qd.prototype.ja=function(){return this.a};qd.prototype.toString=function(){return\"TrustedResourceUrl{\"+this.a+\"}\"};function sd(a){if(a instanceof qd&&a.constructor===qd&&a.b===rd)return a.a;ra(\"expected object of type TrustedResourceUrl, got '\"+a+\"' of type \"+da(a));return\"type_error:TrustedResourceUrl\"}\nfunction td(a,b){var c=od(a);if(!ud.test(c))throw Error(\"Invalid TrustedResourceUrl format: \"+c);a=c.replace(vd,function(a,e){if(!Object.prototype.hasOwnProperty.call(b,e))throw Error('Found marker, \"'+e+'\", in format string, \"'+c+'\", but no valid label mapping found in args: '+JSON.stringify(b));a=b[e];return a instanceof md?od(a):encodeURIComponent(String(a))});return wd(a)}var vd=/%{(\\w+)}/g,ud=/^(?:https:)?\\/\\/[0-9a-z.:[\\]-]+\\/|^\\/[^\\/\\\\]|^about:blank#/i,rd={};\nfunction wd(a){var b=new qd;b.a=a;return b};function xd(){this.a=\"\";this.b=yd}xd.prototype.la=!0;xd.prototype.ja=function(){return this.a};xd.prototype.toString=function(){return\"SafeUrl{\"+this.a+\"}\"};function zd(a){if(a instanceof xd&&a.constructor===xd&&a.b===yd)return a.a;ra(\"expected object of type SafeUrl, got '\"+a+\"' of type \"+da(a));return\"type_error:SafeUrl\"}var Ad=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;\nfunction Bd(a){if(a instanceof xd)return a;a=a.la?a.ja():String(a);Ad.test(a)||(a=\"about:invalid#zClosurez\");return Cd(a)}var yd={};function Cd(a){var b=new xd;b.a=a;return b}Cd(\"about:blank\");function Dd(){this.a=\"\";this.b=Ed}Dd.prototype.la=!0;Dd.prototype.ja=function(){return this.a};Dd.prototype.toString=function(){return\"SafeHtml{\"+this.a+\"}\"};function Fd(a){if(a instanceof Dd&&a.constructor===Dd&&a.b===Ed)return a.a;ra(\"expected object of type SafeHtml, got '\"+a+\"' of type \"+da(a));return\"type_error:SafeHtml\"}var Ed={};function Gd(a){var b=new Dd;b.a=a;return b}Gd(\"<!DOCTYPE html>\");Gd(\"\");Gd(\"<br>\");function Hd(a){var b=document;return l(a)?b.getElementById(a):a}function Id(a,b){Xa(b,function(b,d){b&&b.la&&(b=b.ja());\"style\"==d?a.style.cssText=b:\"class\"==d?a.className=b:\"for\"==d?a.htmlFor=b:Jd.hasOwnProperty(d)?a.setAttribute(Jd[d],b):0==d.lastIndexOf(\"aria-\",0)||0==d.lastIndexOf(\"data-\",0)?a.setAttribute(d,b):a[d]=b})}\nvar Jd={cellpadding:\"cellPadding\",cellspacing:\"cellSpacing\",colspan:\"colSpan\",frameborder:\"frameBorder\",height:\"height\",maxlength:\"maxLength\",nonce:\"nonce\",role:\"role\",rowspan:\"rowSpan\",type:\"type\",usemap:\"useMap\",valign:\"vAlign\",width:\"width\"};\nfunction Kd(a,b,c){var d=arguments,e=document,f=String(d[0]),h=d[1];if(!ld&&h&&(h.name||h.type)){f=[\"<\",f];h.name&&f.push(' name=\"',La(h.name),'\"');if(h.type){f.push(' type=\"',La(h.type),'\"');var m={};ab(m,h);delete m.type;h=m}f.push(\">\");f=f.join(\"\")}f=e.createElement(f);h&&(l(h)?f.className=h:fa(h)?f.className=h.join(\" \"):Id(f,h));2<d.length&&Ld(e,f,d);return f}\nfunction Ld(a,b,c){function d(c){c&&b.appendChild(l(c)?a.createTextNode(c):c)}for(var e=2;e<c.length;e++){var f=c[e];!ha(f)||q(f)&&0<f.nodeType?d(f):v(Md(f)?Ia(f):f,d)}}function Md(a){if(a&&\"number\"==typeof a.length){if(q(a))return\"function\"==typeof a.item||\"string\"==typeof a.item;if(n(a))return\"function\"==typeof a.item}return!1};function Nd(a){var b=[];Od(new Pd,a,b);return b.join(\"\")}function Pd(){}\nfunction Od(a,b,c){if(null==b)c.push(\"null\");else{if(\"object\"==typeof b){if(fa(b)){var d=b;b=d.length;c.push(\"[\");for(var e=\"\",f=0;f<b;f++)c.push(e),Od(a,d[f],c),e=\",\";c.push(\"]\");return}if(b instanceof String||b instanceof Number||b instanceof Boolean)b=b.valueOf();else{c.push(\"{\");e=\"\";for(d in b)Object.prototype.hasOwnProperty.call(b,d)&&(f=b[d],\"function\"!=typeof f&&(c.push(e),Qd(d,c),c.push(\":\"),Od(a,f,c),e=\",\"));c.push(\"}\");return}}switch(typeof b){case \"string\":Qd(b,c);break;case \"number\":c.push(isFinite(b)&&\n!isNaN(b)?String(b):\"null\");break;case \"boolean\":c.push(String(b));break;case \"function\":c.push(\"null\");break;default:throw Error(\"Unknown type: \"+typeof b);}}}var Rd={'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"/\":\"\\\\/\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\\t\":\"\\\\t\",\"\\x0B\":\"\\\\u000b\"},Sd=/\\uffff/.test(\"\\uffff\")?/[\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g:/[\\\\\"\\x00-\\x1f\\x7f-\\xff]/g;\nfunction Qd(a,b){b.push('\"',a.replace(Sd,function(a){var b=Rd[a];b||(b=\"\\\\u\"+(a.charCodeAt(0)|65536).toString(16).substr(1),Rd[a]=b);return b}),'\"')};function Td(){var a=I();return C&&!!Xb&&11==Xb||/Edge\\/\\d+/.test(a)}function Ud(){return k.window&&k.window.location.href||self&&self.location&&self.location.href||\"\"}function Vd(a,b){b=b||k.window;var c=\"about:blank\";a&&(c=zd(Bd(a)));b.location.href=c}\nfunction Wd(a,b){var c=[],d;for(d in a)if(d in b)if(typeof a[d]!=typeof b[d])c.push(d);else if(fa(a[d])){a:{var e=void 0;var f=a[d],h=b[d];for(e in f)if(!(e in h)||f[e]!==h[e]){e=!1;break a}for(e in h)if(!(e in f)){e=!1;break a}e=!0}e||c.push(d)}else\"object\"==typeof a[d]&&null!=a[d]&&null!=b[d]?0<Wd(a[d],b[d]).length&&c.push(d):a[d]!==b[d]&&c.push(d);else c.push(d);for(d in b)d in a||c.push(d);return c}\nfunction Xd(){var a=I();a=Yd(a)!=Zd?null:(a=a.match(/\\sChrome\\/(\\d+)/i))&&2==a.length?parseInt(a[1],10):null;return a&&30>a?!1:!C||!Xb||9<Xb}function $d(a){a=(a||I()).toLowerCase();return a.match(/android/)||a.match(/webos/)||a.match(/iphone|ipad|ipod/)||a.match(/blackberry/)||a.match(/windows phone/)||a.match(/iemobile/)?!0:!1}function ae(a){a=a||k.window;try{a.close()}catch(b){}}\nfunction be(a,b,c){var d=Math.floor(1E9*Math.random()).toString();b=b||500;c=c||600;var e=(window.screen.availHeight-c)/2,f=(window.screen.availWidth-b)/2;b={width:b,height:c,top:0<e?e:0,left:0<f?f:0,location:!0,resizable:!0,statusbar:!0,toolbar:!1};c=I().toLowerCase();d&&(b.target=d,x(c,\"crios/\")&&(b.target=\"_blank\"));Yd(I())==ce&&(a=a||\"http://localhost\",b.scrollbars=!0);c=a||\"\";(a=b)||(a={});d=window;b=c instanceof xd?c:Bd(\"undefined\"!=typeof c.href?c.href:String(c));c=a.target||c.target;e=[];\nfor(h in a)switch(h){case \"width\":case \"height\":case \"top\":case \"left\":e.push(h+\"=\"+a[h]);break;case \"target\":case \"noopener\":case \"noreferrer\":break;default:e.push(h+\"=\"+(a[h]?1:0))}var h=e.join(\",\");(y(\"iPhone\")&&!y(\"iPod\")&&!y(\"iPad\")||y(\"iPad\")||y(\"iPod\"))&&d.navigator&&d.navigator.standalone&&c&&\"_self\"!=c?(h=d.document.createElement(\"A\"),b instanceof xd||b instanceof xd||(b=b.la?b.ja():String(b),Ad.test(b)||(b=\"about:invalid#zClosurez\"),b=Cd(b)),h.href=zd(b),h.setAttribute(\"target\",c),a.noreferrer&&\nh.setAttribute(\"rel\",\"noreferrer\"),a=document.createEvent(\"MouseEvent\"),a.initMouseEvent(\"click\",!0,!0,d,1),h.dispatchEvent(a),h={}):a.noreferrer?(h=d.open(\"\",c,h),a=zd(b),h&&(Ob&&x(a,\";\")&&(a=\"'\"+a.replace(/'/g,\"%27\")+\"'\"),h.opener=null,pd(\"b/12014412, meta tag with sanitized URL\"),a='<meta name=\"referrer\" content=\"no-referrer\"><meta http-equiv=\"refresh\" content=\"0; url='+La(a)+'\">',a=Gd(a),h.document.write(Fd(a)),h.document.close())):(h=d.open(zd(b),c,h))&&a.noopener&&(h.opener=null);if(h)try{h.focus()}catch(m){}return h}\nfunction de(a){return new z(function(b){function c(){Fc(2E3).then(function(){if(!a||a.closed)b();else return c()})}return c()})}var ee=/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;function fe(){var a=null;return(new z(function(b){\"complete\"==k.document.readyState?b():(a=function(){b()},qc(window,\"load\",a))})).m(function(b){F(window,\"load\",a);throw b;})}\nfunction ge(){return he(void 0)?fe().then(function(){return new z(function(a,b){var c=k.document,d=setTimeout(function(){b(Error(\"Cordova framework is not ready.\"))},1E3);c.addEventListener(\"deviceready\",function(){clearTimeout(d);a()},!1)})}):B(Error(\"Cordova must run in an Android or iOS file scheme.\"))}function he(a){a=a||I();return!(\"file:\"!==ie()||!a.toLowerCase().match(/iphone|ipad|ipod|android/))}function je(){var a=k.window;try{return!(!a||a==a.top)}catch(b){return!1}}\nfunction ke(){return\"object\"!==typeof k.window&&\"function\"===typeof k.importScripts}function le(){return firebase.INTERNAL.hasOwnProperty(\"reactNative\")?\"ReactNative\":firebase.INTERNAL.hasOwnProperty(\"node\")?\"Node\":ke()?\"Worker\":\"Browser\"}function me(){var a=le();return\"ReactNative\"===a||\"Node\"===a}var ce=\"Firefox\",Zd=\"Chrome\";\nfunction Yd(a){var b=a.toLowerCase();if(x(b,\"opera/\")||x(b,\"opr/\")||x(b,\"opios/\"))return\"Opera\";if(x(b,\"iemobile\"))return\"IEMobile\";if(x(b,\"msie\")||x(b,\"trident/\"))return\"IE\";if(x(b,\"edge/\"))return\"Edge\";if(x(b,\"firefox/\"))return ce;if(x(b,\"silk/\"))return\"Silk\";if(x(b,\"blackberry\"))return\"Blackberry\";if(x(b,\"webos\"))return\"Webos\";if(!x(b,\"safari/\")||x(b,\"chrome/\")||x(b,\"crios/\")||x(b,\"android\"))if(!x(b,\"chrome/\")&&!x(b,\"crios/\")||x(b,\"edge/\")){if(x(b,\"android\"))return\"Android\";if((a=a.match(/([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/))&&\n2==a.length)return a[1]}else return Zd;else return\"Safari\";return\"Other\"}var ne={Qc:\"FirebaseCore-web\",Sc:\"FirebaseUI-web\"};function oe(a,b){b=b||[];var c=[],d={},e;for(e in ne)d[ne[e]]=!0;for(e=0;e<b.length;e++)\"undefined\"!==typeof d[b[e]]&&(delete d[b[e]],c.push(b[e]));c.sort();b=c;b.length||(b=[\"FirebaseCore-web\"]);c=le();\"Browser\"===c?(d=I(),c=Yd(d)):\"Worker\"===c&&(d=I(),c=Yd(d)+\"-\"+c);return c+\"/JsCore/\"+a+\"/\"+b.join(\",\")}function I(){return k.navigator&&k.navigator.userAgent||\"\"}\nfunction J(a,b){a=a.split(\".\");b=b||k;for(var c=0;c<a.length&&\"object\"==typeof b&&null!=b;c++)b=b[a[c]];c!=a.length&&(b=void 0);return b}function pe(){try{var a=k.localStorage,b=qe();if(a)return a.setItem(b,\"1\"),a.removeItem(b),Td()?!!k.indexedDB:!0}catch(c){return ke()&&!!k.indexedDB}return!1}function re(){return(se()||\"chrome-extension:\"===ie()||he())&&!me()&&pe()&&!ke()}function se(){return\"http:\"===ie()||\"https:\"===ie()}function ie(){return k.location&&k.location.protocol||null}\nfunction te(a){a=a||I();return $d(a)||Yd(a)==ce?!1:!0}function ue(a){return\"undefined\"===typeof a?null:Nd(a)}function ve(a){var b={},c;for(c in a)a.hasOwnProperty(c)&&null!==a[c]&&void 0!==a[c]&&(b[c]=a[c]);return b}function we(a){if(null!==a)return JSON.parse(a)}function qe(a){return a?a:Math.floor(1E9*Math.random()).toString()}function xe(a){a=a||I();return\"Safari\"==Yd(a)||a.toLowerCase().match(/iphone|ipad|ipod/)?!1:!0}\nfunction ye(){var a=k.___jsl;if(a&&a.H)for(var b in a.H)if(a.H[b].r=a.H[b].r||[],a.H[b].L=a.H[b].L||[],a.H[b].r=a.H[b].L.concat(),a.CP)for(var c=0;c<a.CP.length;c++)a.CP[c]=null}function ze(a,b){if(a>b)throw Error(\"Short delay should be less than long delay!\");this.a=a;this.c=b;a=I();b=le();this.b=$d(a)||\"ReactNative\"===b}\nze.prototype.get=function(){var a=k.navigator;return(a&&\"boolean\"===typeof a.onLine&&(se()||\"chrome-extension:\"===ie()||\"undefined\"!==typeof a.connection)?a.onLine:1)?this.b?this.c:this.a:Math.min(5E3,this.a)};function Ae(){var a=k.document;return a&&\"undefined\"!==typeof a.visibilityState?\"visible\"==a.visibilityState:!0}\nfunction Be(){var a=k.document,b=null;return Ae()||!a?A():(new z(function(c){b=function(){Ae()&&(a.removeEventListener(\"visibilitychange\",b,!1),c())};a.addEventListener(\"visibilitychange\",b,!1)})).m(function(c){a.removeEventListener(\"visibilitychange\",b,!1);throw c;})}function Ce(a){try{var b=new Date(parseInt(a,10));if(!isNaN(b.getTime())&&!/[^0-9]/.test(a))return b.toUTCString()}catch(c){}return null}function De(){return!(!J(\"fireauth.oauthhelper\",k)&&!J(\"fireauth.iframe\",k))};var Ee={};var Fe;try{var Ge={};Object.defineProperty(Ge,\"abcd\",{configurable:!0,enumerable:!0,value:1});Object.defineProperty(Ge,\"abcd\",{configurable:!0,enumerable:!0,value:2});Fe=2==Ge.abcd}catch(a){Fe=!1}function K(a,b,c){Fe?Object.defineProperty(a,b,{configurable:!0,enumerable:!0,value:c}):a[b]=c}function L(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&K(a,c,b[c])}function He(a){var b={};L(b,a);return b}function Ie(a){var b={},c;for(c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b}\nfunction Je(a,b){if(!b||!b.length)return!0;if(!a)return!1;for(var c=0;c<b.length;c++){var d=a[b[c]];if(void 0===d||null===d||\"\"===d)return!1}return!0}function Ke(a){var b=a;if(\"object\"==typeof a&&null!=a){b=\"length\"in a?[]:{};for(var c in a)K(b,c,Ke(a[c]))}return b};function Le(a){var b={},c=a[Me],d=a[Ne];a=a[Oe];if(!a||a!=Pe&&!c)throw Error(\"Invalid provider user info!\");b[Qe]=d||null;b[Re]=c||null;K(this,Se,a);K(this,Te,Ke(b))}var Pe=\"EMAIL_SIGNIN\",Me=\"email\",Ne=\"newEmail\",Oe=\"requestType\",Re=\"email\",Qe=\"fromEmail\",Te=\"data\",Se=\"operation\";function M(a,b){this.code=Ue+a;this.message=b||Ve[a]||\"\"}t(M,Error);M.prototype.C=function(){return{code:this.code,message:this.message}};M.prototype.toJSON=function(){return this.C()};function We(a){var b=a&&a.code;return b?new M(b.substring(Ue.length),a.message):null}\nvar Ue=\"auth/\",Ve={\"argument-error\":\"\",\"app-not-authorized\":\"This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.\",\"app-not-installed\":\"The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.\",\"captcha-check-failed\":\"The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.\",\n\"code-expired\":\"The SMS code has expired. Please re-send the verification code to try again.\",\"cordova-not-ready\":\"Cordova framework is not ready.\",\"cors-unsupported\":\"This browser is not supported.\",\"credential-already-in-use\":\"This credential is already associated with a different user account.\",\"custom-token-mismatch\":\"The custom token corresponds to a different audience.\",\"requires-recent-login\":\"This operation is sensitive and requires recent authentication. Log in again before retrying this request.\",\n\"dynamic-link-not-activated\":\"Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.\",\"email-already-in-use\":\"The email address is already in use by another account.\",\"expired-action-code\":\"The action code has expired. \",\"cancelled-popup-request\":\"This operation has been cancelled due to another conflicting popup being opened.\",\"internal-error\":\"An internal error has occurred.\",\"invalid-app-credential\":\"The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.\",\n\"invalid-app-id\":\"The mobile app identifier is not registed for the current project.\",\"invalid-user-token\":\"This user's credential isn't valid for this project. This can happen if the user's token has been tampered with, or if the user isn't for the project associated with this API key.\",\"invalid-auth-event\":\"An internal error has occurred.\",\"invalid-verification-code\":\"The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure use the verification code provided by the user.\",\n\"invalid-continue-uri\":\"The continue URL provided in the request is invalid.\",\"invalid-cordova-configuration\":\"The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.\",\"invalid-custom-token\":\"The custom token format is incorrect. Please check the documentation.\",\"invalid-email\":\"The email address is badly formatted.\",\"invalid-api-key\":\"Your API key is invalid, please check you have copied it correctly.\",\n\"invalid-cert-hash\":\"The SHA-1 certificate hash provided is invalid.\",\"invalid-credential\":\"The supplied auth credential is malformed or has expired.\",\"invalid-persistence-type\":\"The specified persistence type is invalid. It can only be local, session or none.\",\"invalid-message-payload\":\"The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.\",\"invalid-oauth-provider\":\"EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.\",\n\"invalid-oauth-client-id\":\"The OAuth client ID provided is either invalid or does not match the specified API key.\",\"unauthorized-domain\":\"This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.\",\"invalid-action-code\":\"The action code is invalid. This can happen if the code is malformed, expired, or has already been used.\",\"wrong-password\":\"The password is invalid or the user does not have a password.\",\"invalid-phone-number\":\"The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].\",\n\"invalid-recipient-email\":\"The email corresponding to this action failed to send as the provided recipient email address is invalid.\",\"invalid-sender\":\"The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.\",\"invalid-verification-id\":\"The verification ID used to create the phone auth credential is invalid.\",\"missing-android-pkg-name\":\"An Android Package Name must be provided if the Android App is required to be installed.\",\n\"auth-domain-config-required\":\"Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.\",\"missing-app-credential\":\"The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.\",\"missing-verification-code\":\"The phone auth credential was created with an empty SMS verification code.\",\"missing-continue-uri\":\"A continue URL must be provided in the request.\",\"missing-iframe-start\":\"An internal error has occurred.\",\n\"missing-ios-bundle-id\":\"An iOS Bundle ID must be provided if an App Store ID is provided.\",\"missing-phone-number\":\"To send verification codes, provide a phone number for the recipient.\",\"missing-verification-id\":\"The phone auth credential was created with an empty verification ID.\",\"app-deleted\":\"This instance of FirebaseApp has been deleted.\",\"account-exists-with-different-credential\":\"An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.\",\n\"network-request-failed\":\"A network error (such as timeout, interrupted connection or unreachable host) has occurred.\",\"no-auth-event\":\"An internal error has occurred.\",\"no-such-provider\":\"User was not linked to an account with the given provider.\",\"operation-not-allowed\":\"The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.\",\"operation-not-supported-in-this-environment\":'This operation is not supported in the environment this application is running on. \"location.protocol\" must be http, https or chrome-extension and web storage must be enabled.',\n\"popup-blocked\":\"Unable to establish a connection with the popup. It may have been blocked by the browser.\",\"popup-closed-by-user\":\"The popup has been closed by the user before finalizing the operation.\",\"provider-already-linked\":\"User can only be linked to one identity for the given provider.\",\"quota-exceeded\":\"The project's quota for this operation has been exceeded.\",\"redirect-cancelled-by-user\":\"The redirect operation has been cancelled by the user before finalizing.\",\"redirect-operation-pending\":\"A redirect sign-in operation is already pending.\",\ntimeout:\"The operation has timed out.\",\"user-token-expired\":\"The user's credential is no longer valid. The user must sign in again.\",\"too-many-requests\":\"We have blocked all requests from this device due to unusual activity. Try again later.\",\"unauthorized-continue-uri\":\"The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.\",\"unsupported-persistence-type\":\"The current environment does not support the specified persistence type.\",\"user-cancelled\":\"User did not grant your application the permissions it requested.\",\n\"user-not-found\":\"There is no user record corresponding to this identifier. The user may have been deleted.\",\"user-disabled\":\"The user account has been disabled by an administrator.\",\"user-mismatch\":\"The supplied credentials do not correspond to the previously signed in user.\",\"user-signed-out\":\"\",\"weak-password\":\"The password must be 6 characters long or more.\",\"web-storage-unsupported\":\"This browser is not supported or 3rd party cookies and data may be disabled.\"};function Xe(a){var b=a[Ye];if(\"undefined\"===typeof b)throw new M(\"missing-continue-uri\");if(\"string\"!==typeof b||\"string\"===typeof b&&!b.length)throw new M(\"invalid-continue-uri\");this.h=b;this.b=this.a=null;this.g=!1;var c=a[Ze];if(c&&\"object\"===typeof c){b=c[$e];var d=c[af];c=c[bf];if(\"string\"===typeof b&&b.length){this.a=b;if(\"undefined\"!==typeof d&&\"boolean\"!==typeof d)throw new M(\"argument-error\",af+\" property must be a boolean when specified.\");this.g=!!d;if(\"undefined\"!==typeof c&&(\"string\"!==\ntypeof c||\"string\"===typeof c&&!c.length))throw new M(\"argument-error\",bf+\" property must be a non empty string when specified.\");this.b=c||null}else{if(\"undefined\"!==typeof b)throw new M(\"argument-error\",$e+\" property must be a non empty string when specified.\");if(\"undefined\"!==typeof d||\"undefined\"!==typeof c)throw new M(\"missing-android-pkg-name\");}}else if(\"undefined\"!==typeof c)throw new M(\"argument-error\",Ze+\" property must be a non null object when specified.\");this.f=null;if((b=a[cf])&&\"object\"===\ntypeof b)if(b=b[df],\"string\"===typeof b&&b.length)this.f=b;else{if(\"undefined\"!==typeof b)throw new M(\"argument-error\",df+\" property must be a non empty string when specified.\");}else if(\"undefined\"!==typeof b)throw new M(\"argument-error\",cf+\" property must be a non null object when specified.\");a=a[ef];if(\"undefined\"!==typeof a&&\"boolean\"!==typeof a)throw new M(\"argument-error\",ef+\" property must be a boolean when specified.\");this.c=!!a}\nvar Ze=\"android\",ef=\"handleCodeInApp\",cf=\"iOS\",Ye=\"url\",af=\"installApp\",bf=\"minimumVersion\",$e=\"packageName\",df=\"bundleId\";function ff(a){var b={};b.continueUrl=a.h;b.canHandleCodeInApp=a.c;if(b.androidPackageName=a.a)b.androidMinimumVersion=a.b,b.androidInstallApp=a.g;b.iOSBundleId=a.f;for(var c in b)null===b[c]&&delete b[c];return b};function gf(a){return Ba(a,function(a){a=a.toString(16);return 1<a.length?a:\"0\"+a}).join(\"\")};var hf=null,jf=null;function kf(a){var b=\"\";lf(a,function(a){b+=String.fromCharCode(a)});return b}function lf(a,b){function c(b){for(;d<a.length;){var c=a.charAt(d++),e=jf[c];if(null!=e)return e;if(!/^[\\s\\xa0]*$/.test(c))throw Error(\"Unknown base64 encoding at char: \"+c);}return b}mf();for(var d=0;;){var e=c(-1),f=c(0),h=c(64),m=c(64);if(64===m&&-1===e)break;b(e<<2|f>>4);64!=h&&(b(f<<4&240|h>>2),64!=m&&b(h<<6&192|m))}}\nfunction mf(){if(!hf){hf={};jf={};for(var a=0;65>a;a++)hf[a]=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".charAt(a),jf[hf[a]]=a,62<=a&&(jf[\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\".charAt(a)]=a)}};function nf(a){this.c=a.sub;na();this.a=a.provider_id||a.firebase&&a.firebase.sign_in_provider||null;this.b=!!a.is_anonymous||\"anonymous\"==this.a}nf.prototype.f=function(){return this.b};function of(a){return(a=pf(a))&&a.sub&&a.iss&&a.aud&&a.exp?new nf(a):null}function pf(a){if(!a)return null;a=a.split(\".\");if(3!=a.length)return null;a=a[1];for(var b=(4-a.length%4)%4,c=0;c<b;c++)a+=\".\";try{return JSON.parse(kf(a))}catch(d){}return null};var qf=\"oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version\".split(\" \"),rf=[\"client_id\",\"response_type\",\"scope\",\"redirect_uri\",\"state\"],sf={Rc:{Ma:\"locale\",Aa:500,za:600,Na:\"facebook.com\",cb:rf},Tc:{Ma:null,Aa:500,za:620,Na:\"github.com\",cb:rf},Uc:{Ma:\"hl\",Aa:515,za:680,Na:\"google.com\",cb:rf},$c:{Ma:\"lang\",Aa:485,za:705,Na:\"twitter.com\",cb:qf}};function tf(a){for(var b in sf)if(sf[b].Na==a)return sf[b];return null};function uf(a){var b={};b[\"facebook.com\"]=vf;b[\"google.com\"]=wf;b[\"github.com\"]=xf;b[\"twitter.com\"]=yf;var c=a&&a[zf];try{if(c)return b[c]?new b[c](a):new Af(a);if(\"undefined\"!==typeof a[Bf])return new Cf(a)}catch(d){}return null}var Bf=\"idToken\",zf=\"providerId\";\nfunction Cf(a){var b=a[zf];if(!b&&a[Bf]){var c=of(a[Bf]);c&&c.a&&(b=c.a)}if(!b)throw Error(\"Invalid additional user info!\");if(\"anonymous\"==b||\"custom\"==b)b=null;c=!1;\"undefined\"!==typeof a.isNewUser?c=!!a.isNewUser:\"identitytoolkit#SignupNewUserResponse\"===a.kind&&(c=!0);K(this,\"providerId\",b);K(this,\"isNewUser\",c)}function Af(a){Cf.call(this,a);a=we(a.rawUserInfo||\"{}\");K(this,\"profile\",Ke(a||{}))}t(Af,Cf);\nfunction vf(a){Af.call(this,a);if(\"facebook.com\"!=this.providerId)throw Error(\"Invalid provider ID!\");}t(vf,Af);function xf(a){Af.call(this,a);if(\"github.com\"!=this.providerId)throw Error(\"Invalid provider ID!\");K(this,\"username\",this.profile&&this.profile.login||null)}t(xf,Af);function wf(a){Af.call(this,a);if(\"google.com\"!=this.providerId)throw Error(\"Invalid provider ID!\");}t(wf,Af);\nfunction yf(a){Af.call(this,a);if(\"twitter.com\"!=this.providerId)throw Error(\"Invalid provider ID!\");K(this,\"username\",a.screenName||null)}t(yf,Af);function Df(a){this.a=cd(a)};function Ef(a){var b=cd(a),c=bd(b,\"link\"),d=bd(cd(c),\"link\");b=bd(b,\"deep_link_id\");return bd(cd(b),\"link\")||b||d||c||a};function Ff(a,b){return a.then(function(a){if(a[Gf]){var c=of(a[Gf]);if(!c||b!=c.c)throw new M(\"user-mismatch\");return a}throw new M(\"user-mismatch\");}).m(function(a){throw a&&a.code&&a.code==Ue+\"user-not-found\"?new M(\"user-mismatch\"):a;})}\nfunction Hf(a,b,c){if(b.idToken||b.accessToken)b.idToken&&K(this,\"idToken\",b.idToken),b.accessToken&&K(this,\"accessToken\",b.accessToken);else if(b.oauthToken&&b.oauthTokenSecret)K(this,\"accessToken\",b.oauthToken),K(this,\"secret\",b.oauthTokenSecret);else throw new M(\"internal-error\",\"failed to construct a credential\");K(this,\"providerId\",a);K(this,\"signInMethod\",c)}Hf.prototype.xa=function(a){return If(a,Jf(this))};Hf.prototype.c=function(a,b){var c=Jf(this);c.idToken=b;return Kf(a,c)};\nHf.prototype.f=function(a,b){var c=Jf(this);return Ff(Lf(a,c),b)};function Jf(a){var b={};a.idToken&&(b.id_token=a.idToken);a.accessToken&&(b.access_token=a.accessToken);a.secret&&(b.oauth_token_secret=a.secret);b.providerId=a.providerId;return{postBody:gd(b).toString(),requestUri:\"http://localhost\"}}\nHf.prototype.C=function(){var a={providerId:this.providerId,signInMethod:this.signInMethod};this.idToken&&(a.oauthIdToken=this.idToken);this.accessToken&&(a.oauthAccessToken=this.accessToken);this.secret&&(a.oauthTokenSecret=this.secret);return a};function Mf(a,b){this.Ac=b||[];L(this,{providerId:a,isOAuthProvider:!0});this.tb={};this.Za=(tf(a)||{}).Ma||null;this.Xa=null}Mf.prototype.Ca=function(a){this.tb=Za(a);return this};function N(a){Mf.call(this,a,rf);this.a=[]}t(N,Mf);\nN.prototype.ta=function(a){Fa(this.a,a)||this.a.push(a);return this};N.prototype.yb=function(){return Ia(this.a)};N.prototype.credential=function(a,b){if(!a&&!b)throw new M(\"argument-error\",\"credential failed: must provide the ID token and/or the access token.\");return new Hf(this.providerId,{idToken:a||null,accessToken:b||null},this.providerId)};function Nf(){N.call(this,\"facebook.com\")}t(Nf,N);K(Nf,\"PROVIDER_ID\",\"facebook.com\");K(Nf,\"FACEBOOK_SIGN_IN_METHOD\",\"facebook.com\");\nfunction Of(a){if(!a)throw new M(\"argument-error\",\"credential failed: expected 1 argument (the OAuth access token).\");var b=a;q(a)&&(b=a.accessToken);return(new Nf).credential(null,b)}function Pf(){N.call(this,\"github.com\")}t(Pf,N);K(Pf,\"PROVIDER_ID\",\"github.com\");K(Pf,\"GITHUB_SIGN_IN_METHOD\",\"github.com\");function Qf(a){if(!a)throw new M(\"argument-error\",\"credential failed: expected 1 argument (the OAuth access token).\");var b=a;q(a)&&(b=a.accessToken);return(new Pf).credential(null,b)}\nfunction Rf(){N.call(this,\"google.com\");this.ta(\"profile\")}t(Rf,N);K(Rf,\"PROVIDER_ID\",\"google.com\");K(Rf,\"GOOGLE_SIGN_IN_METHOD\",\"google.com\");function Sf(a,b){var c=a;q(a)&&(c=a.idToken,b=a.accessToken);return(new Rf).credential(c,b)}function Tf(){Mf.call(this,\"twitter.com\",qf)}t(Tf,Mf);K(Tf,\"PROVIDER_ID\",\"twitter.com\");K(Tf,\"TWITTER_SIGN_IN_METHOD\",\"twitter.com\");\nfunction Uf(a,b){var c=a;q(c)||(c={oauthToken:a,oauthTokenSecret:b});if(!c.oauthToken||!c.oauthTokenSecret)throw new M(\"argument-error\",\"credential failed: expected 2 arguments (the OAuth access token and secret).\");return new Hf(\"twitter.com\",c,\"twitter.com\")}function Vf(a,b,c){this.a=a;this.b=b;K(this,\"providerId\",\"password\");K(this,\"signInMethod\",c===O.EMAIL_LINK_SIGN_IN_METHOD?O.EMAIL_LINK_SIGN_IN_METHOD:O.EMAIL_PASSWORD_SIGN_IN_METHOD)}\nVf.prototype.xa=function(a){return this.signInMethod==O.EMAIL_LINK_SIGN_IN_METHOD?P(a,Wf,{email:this.a,oobCode:this.b}):P(a,Xf,{email:this.a,password:this.b})};Vf.prototype.c=function(a,b){return this.signInMethod==O.EMAIL_LINK_SIGN_IN_METHOD?P(a,Yf,{idToken:b,email:this.a,oobCode:this.b}):P(a,Zf,{idToken:b,email:this.a,password:this.b})};Vf.prototype.f=function(a,b){return Ff(this.xa(a),b)};Vf.prototype.C=function(){return{email:this.a,password:this.b,signInMethod:this.signInMethod}};\nfunction O(){L(this,{providerId:\"password\",isOAuthProvider:!1})}function $f(a,b){b=ag(b);if(!b)throw new M(\"argument-error\",\"Invalid email link!\");return new Vf(a,b,O.EMAIL_LINK_SIGN_IN_METHOD)}function ag(a){a=Ef(a);a=new Df(a);var b=bd(a.a,\"oobCode\")||null;return\"signIn\"===(bd(a.a,\"mode\")||null)&&b?b:null}L(O,{PROVIDER_ID:\"password\"});L(O,{EMAIL_LINK_SIGN_IN_METHOD:\"emailLink\"});L(O,{EMAIL_PASSWORD_SIGN_IN_METHOD:\"password\"});\nfunction bg(a){if(!(a.Ra&&a.Qa||a.Ea&&a.Z))throw new M(\"internal-error\");this.a=a;K(this,\"providerId\",\"phone\");K(this,\"signInMethod\",\"phone\")}bg.prototype.xa=function(a){return a.Sa(cg(this))};bg.prototype.c=function(a,b){var c=cg(this);c.idToken=b;return P(a,dg,c)};bg.prototype.f=function(a,b){var c=cg(this);c.operation=\"REAUTH\";a=P(a,eg,c);return Ff(a,b)};\nbg.prototype.C=function(){var a={providerId:\"phone\"};this.a.Ra&&(a.verificationId=this.a.Ra);this.a.Qa&&(a.verificationCode=this.a.Qa);this.a.Ea&&(a.temporaryProof=this.a.Ea);this.a.Z&&(a.phoneNumber=this.a.Z);return a};function cg(a){return a.a.Ea&&a.a.Z?{temporaryProof:a.a.Ea,phoneNumber:a.a.Z}:{sessionInfo:a.a.Ra,code:a.a.Qa}}\nfunction fg(a){try{this.a=a||firebase.auth()}catch(b){throw new M(\"argument-error\",\"Either an instance of firebase.auth.Auth must be passed as an argument to the firebase.auth.PhoneAuthProvider constructor, or the default firebase App instance must be initialized via firebase.initializeApp().\");}L(this,{providerId:\"phone\",isOAuthProvider:!1})}\nfg.prototype.Sa=function(a,b){var c=this.a.b;return A(b.verify()).then(function(d){if(!l(d))throw new M(\"argument-error\",\"An implementation of firebase.auth.ApplicationVerifier.prototype.verify() must return a firebase.Promise that resolves with a string.\");switch(b.type){case \"recaptcha\":return gg(c,{phoneNumber:a,recaptchaToken:d}).then(function(a){\"function\"===typeof b.reset&&b.reset();return a},function(a){\"function\"===typeof b.reset&&b.reset();throw a;});default:throw new M(\"argument-error\",\n'Only firebase.auth.ApplicationVerifiers with type=\"recaptcha\" are currently supported.');}})};function hg(a,b){if(!a)throw new M(\"missing-verification-id\");if(!b)throw new M(\"missing-verification-code\");return new bg({Ra:a,Qa:b})}L(fg,{PROVIDER_ID:\"phone\"});L(fg,{PHONE_SIGN_IN_METHOD:\"phone\"});\nfunction ig(a){if(a.temporaryProof&&a.phoneNumber)return new bg({Ea:a.temporaryProof,Z:a.phoneNumber});var b=a&&a.providerId;if(!b||\"password\"===b)return null;var c=a&&a.oauthAccessToken,d=a&&a.oauthTokenSecret;a=a&&a.oauthIdToken;try{switch(b){case \"google.com\":return Sf(a,c);case \"facebook.com\":return Of(c);case \"github.com\":return Qf(c);case \"twitter.com\":return Uf(c,d);default:return(new N(b)).credential(a,c)}}catch(e){return null}}\nfunction jg(a){if(!a.isOAuthProvider)throw new M(\"invalid-oauth-provider\");};function kg(a,b,c,d,e){this.b=a;this.c=b||null;this.f=c||null;this.g=d||null;this.a=e||null;if(this.f||this.a){if(this.f&&this.a)throw new M(\"invalid-auth-event\");if(this.f&&!this.g)throw new M(\"invalid-auth-event\");}else throw new M(\"invalid-auth-event\");}kg.prototype.C=function(){return{type:this.b,eventId:this.c,urlResponse:this.f,sessionId:this.g,error:this.a&&this.a.C()}};function lg(a){a=a||{};return a.type?new kg(a.type,a.eventId,a.urlResponse,a.sessionId,a.error&&We(a.error)):null};function mg(){this.b=null;this.a=[]}var ng=null;mg.prototype.subscribe=function(a){var b=this;this.a.push(a);this.b||(this.b=function(a){for(var c=0;c<b.a.length;c++)b.a[c](a)},a=J(\"universalLinks.subscribe\",k),\"function\"===typeof a&&a(null,this.b))};mg.prototype.unsubscribe=function(a){w(this.a,function(b){return b==a})};function og(a){var b=\"unauthorized-domain\",c=void 0,d=cd(a);a=d.b;d=d.c;\"chrome-extension\"==d?c=Ja(\"This chrome extension ID (chrome-extension://%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.\",a):\"http\"==d||\"https\"==d?c=Ja(\"This domain (%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.\",a):b=\"operation-not-supported-in-this-environment\";\nM.call(this,b,c)}t(og,M);function pg(a,b,c){M.call(this,a,c);a=b||{};a.ub&&K(this,\"email\",a.ub);a.Z&&K(this,\"phoneNumber\",a.Z);a.credential&&K(this,\"credential\",a.credential)}t(pg,M);pg.prototype.C=function(){var a={code:this.code,message:this.message};this.email&&(a.email=this.email);this.phoneNumber&&(a.phoneNumber=this.phoneNumber);var b=this.credential&&this.credential.C();b&&ab(a,b);return a};pg.prototype.toJSON=function(){return this.C()};\nfunction qg(a){if(a.code){var b=a.code||\"\";0==b.indexOf(Ue)&&(b=b.substring(Ue.length));var c={credential:ig(a)};if(a.email)c.ub=a.email;else if(a.phoneNumber)c.Z=a.phoneNumber;else return new M(b,a.message||void 0);return new pg(b,c,a.message)}return null};var rg=/^[+a-zA-Z0-9_.!#$%&'*\\/=?^`{|}~-]+@([a-zA-Z0-9-]+\\.)+[a-zA-Z0-9]{2,63}$/;function sg(){}sg.prototype.c=null;function tg(a){return a.c||(a.c=a.b())};var ug;function vg(){}t(vg,sg);vg.prototype.a=function(){var a=wg(this);return a?new ActiveXObject(a):new XMLHttpRequest};vg.prototype.b=function(){var a={};wg(this)&&(a[0]=!0,a[1]=!0);return a};\nfunction wg(a){if(!a.f&&\"undefined\"==typeof XMLHttpRequest&&\"undefined\"!=typeof ActiveXObject){for(var b=[\"MSXML2.XMLHTTP.6.0\",\"MSXML2.XMLHTTP.3.0\",\"MSXML2.XMLHTTP\",\"Microsoft.XMLHTTP\"],c=0;c<b.length;c++){var d=b[c];try{return new ActiveXObject(d),a.f=d}catch(e){}}throw Error(\"Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed\");}return a.f}ug=new vg;function xg(){}t(xg,sg);xg.prototype.a=function(){var a=new XMLHttpRequest;if(\"withCredentials\"in a)return a;if(\"undefined\"!=typeof XDomainRequest)return new yg;throw Error(\"Unsupported browser\");};xg.prototype.b=function(){return{}};\nfunction yg(){this.a=new XDomainRequest;this.readyState=0;this.onreadystatechange=null;this.responseText=\"\";this.status=-1;this.statusText=\"\";this.a.onload=r(this.bc,this);this.a.onerror=r(this.zb,this);this.a.onprogress=r(this.cc,this);this.a.ontimeout=r(this.fc,this)}g=yg.prototype;g.open=function(a,b,c){if(null!=c&&!c)throw Error(\"Only async requests are supported.\");this.a.open(a,b)};\ng.send=function(a){if(a)if(\"string\"==typeof a)this.a.send(a);else throw Error(\"Only string data is supported\");else this.a.send()};g.abort=function(){this.a.abort()};g.setRequestHeader=function(){};g.getResponseHeader=function(a){return\"content-type\"==a.toLowerCase()?this.a.contentType:\"\"};g.bc=function(){this.status=200;this.responseText=this.a.responseText;zg(this,4)};g.zb=function(){this.status=500;this.responseText=\"\";zg(this,4)};g.fc=function(){this.zb()};\ng.cc=function(){this.status=200;zg(this,1)};function zg(a,b){a.readyState=b;if(a.onreadystatechange)a.onreadystatechange()}g.getAllResponseHeaders=function(){return\"content-type: \"+this.a.contentType};function Ag(a,b,c){this.reset(a,b,c,void 0,void 0)}Ag.prototype.a=null;var Bg=0;Ag.prototype.reset=function(a,b,c,d,e){\"number\"==typeof e||Bg++;d||na();delete this.a};function Cg(a){this.f=a;this.b=this.c=this.a=null}function Dg(a,b){this.name=a;this.value=b}Dg.prototype.toString=function(){return this.name};var Eg=new Dg(\"SEVERE\",1E3),Fg=new Dg(\"WARNING\",900),Gg=new Dg(\"CONFIG\",700),Hg=new Dg(\"FINE\",500);function Ig(a){if(a.c)return a.c;if(a.a)return Ig(a.a);ra(\"Root logger has no level set.\");return null}Cg.prototype.log=function(a,b,c){if(a.value>=Ig(this).value)for(n(b)&&(b=b()),a=new Ag(a,String(b),this.f),c&&(a.a=c),c=this;c;)c=c.a};var Jg={},Kg=null;\nfunction Lg(a){Kg||(Kg=new Cg(\"\"),Jg[\"\"]=Kg,Kg.c=Gg);var b;if(!(b=Jg[a])){b=new Cg(a);var c=a.lastIndexOf(\".\"),d=a.substr(c+1);c=Lg(a.substr(0,c));c.b||(c.b={});c.b[d]=b;b.a=c;Jg[a]=b}return b};function Q(a,b){a&&a.log(Hg,b,void 0)};function Mg(a){this.f=a}t(Mg,sg);Mg.prototype.a=function(){return new Ng(this.f)};Mg.prototype.b=function(a){return function(){return a}}({});function Ng(a){G.call(this);this.j=a;this.readyState=Og;this.status=0;this.responseText=this.statusText=\"\";this.onreadystatechange=null;this.g=new Headers;this.b=null;this.h=\"GET\";this.c=\"\";this.a=!1;this.f=Lg(\"goog.net.FetchXmlHttp\")}t(Ng,G);var Og=0;g=Ng.prototype;\ng.open=function(a,b){if(this.readyState!=Og)throw this.abort(),Error(\"Error reopening a connection\");this.h=a;this.c=b;this.readyState=1;Pg(this)};g.send=function(a){if(1!=this.readyState)throw this.abort(),Error(\"need to call open() first. \");this.a=!0;var b={headers:this.g,method:this.h,credentials:void 0,cache:void 0};a&&(b.body=a);this.j.fetch(new Request(this.c,b)).then(this.ec.bind(this),this.Ab.bind(this))};\ng.abort=function(){this.responseText=\"\";this.g=new Headers;this.status=0;1<=this.readyState&&this.a&&4!=this.readyState&&(this.readyState=4,this.a=!1,Pg(this));this.readyState=Og};g.ec=function(a){this.a&&(this.b||(this.b=a.headers,this.readyState=2,Pg(this)),this.a&&(this.readyState=3,Pg(this),this.a&&a.text().then(this.dc.bind(this,a),this.Ab.bind(this))))};g.dc=function(a,b){this.a&&(this.status=a.status,this.statusText=a.statusText,this.responseText=b,this.readyState=4,Pg(this))};\ng.Ab=function(a){var b=this.f;b&&b.log(Fg,\"Failed to fetch url \"+this.c,a instanceof Error?a:Error(a));this.a&&(this.readyState=4,Pg(this))};g.setRequestHeader=function(a,b){this.g.append(a,b)};g.getResponseHeader=function(a){return this.b?this.b.get(a.toLowerCase())||\"\":((a=this.f)&&a.log(Fg,\"Attempting to get response header but no headers have been received for url: \"+this.c,void 0),\"\")};\ng.getAllResponseHeaders=function(){if(!this.b){var a=this.f;a&&a.log(Fg,\"Attempting to get all response headers but no headers have been received for url: \"+this.c,void 0);return\"\"}a=[];for(var b=this.b.entries(),c=b.next();!c.done;)c=c.value,a.push(c[0]+\": \"+c[1]),c=b.next();return a.join(\"\\r\\n\")};function Pg(a){a.onreadystatechange&&a.onreadystatechange.call(a)};function Qg(a){G.call(this);this.headers=new Kc;this.D=a||null;this.c=!1;this.B=this.a=null;this.h=this.N=this.l=\"\";this.f=this.I=this.j=this.G=!1;this.g=0;this.s=null;this.o=Rg;this.v=this.O=!1}t(Qg,G);var Rg=\"\";Qg.prototype.b=Lg(\"goog.net.XhrIo\");var Sg=/^https?$/i,Tg=[\"POST\",\"PUT\"];\nfunction Ug(a,b,c,d,e){if(a.a)throw Error(\"[goog.net.XhrIo] Object is active with another request=\"+a.l+\"; newUri=\"+b);c=c?c.toUpperCase():\"GET\";a.l=b;a.h=\"\";a.N=c;a.G=!1;a.c=!0;a.a=a.D?a.D.a():ug.a();a.B=a.D?tg(a.D):tg(ug);a.a.onreadystatechange=r(a.Db,a);try{Q(a.b,Vg(a,\"Opening Xhr\")),a.I=!0,a.a.open(c,String(b),!0),a.I=!1}catch(h){Q(a.b,Vg(a,\"Error opening Xhr: \"+h.message));Wg(a,h);return}b=d||\"\";var f=new Kc(a.headers);e&&Ic(e,function(a,b){f.set(b,a)});e=Da(f.U());d=k.FormData&&b instanceof\nk.FormData;!Fa(Tg,c)||e||d||f.set(\"Content-Type\",\"application/x-www-form-urlencoded;charset=utf-8\");f.forEach(function(a,b){this.a.setRequestHeader(b,a)},a);a.o&&(a.a.responseType=a.o);\"withCredentials\"in a.a&&a.a.withCredentials!==a.O&&(a.a.withCredentials=a.O);try{Xg(a),0<a.g&&(a.v=Yg(a.a),Q(a.b,Vg(a,\"Will abort after \"+a.g+\"ms if incomplete, xhr2 \"+a.v)),a.v?(a.a.timeout=a.g,a.a.ontimeout=r(a.Fa,a)):a.s=Ec(a.Fa,a.g,a)),Q(a.b,Vg(a,\"Sending request\")),a.j=!0,a.a.send(b),a.j=!1}catch(h){Q(a.b,Vg(a,\n\"Send error: \"+h.message)),Wg(a,h)}}function Yg(a){return C&&Wb(9)&&\"number\"==typeof a.timeout&&void 0!==a.ontimeout}function Ea(a){return\"content-type\"==a.toLowerCase()}g=Qg.prototype;g.Fa=function(){\"undefined\"!=typeof aa&&this.a&&(this.h=\"Timed out after \"+this.g+\"ms, aborting\",Q(this.b,Vg(this,this.h)),this.dispatchEvent(\"timeout\"),this.abort(8))};function Wg(a,b){a.c=!1;a.a&&(a.f=!0,a.a.abort(),a.f=!1);a.h=b;Zg(a);$g(a)}\nfunction Zg(a){a.G||(a.G=!0,a.dispatchEvent(\"complete\"),a.dispatchEvent(\"error\"))}g.abort=function(){this.a&&this.c&&(Q(this.b,Vg(this,\"Aborting\")),this.c=!1,this.f=!0,this.a.abort(),this.f=!1,this.dispatchEvent(\"complete\"),this.dispatchEvent(\"abort\"),$g(this))};g.ua=function(){this.a&&(this.c&&(this.c=!1,this.f=!0,this.a.abort(),this.f=!1),$g(this,!0));Qg.lb.ua.call(this)};g.Db=function(){this.pa||(this.I||this.j||this.f?ah(this):this.tc())};g.tc=function(){ah(this)};\nfunction ah(a){if(a.c&&\"undefined\"!=typeof aa)if(a.B[1]&&4==bh(a)&&2==ch(a))Q(a.b,Vg(a,\"Local request error detected and ignored\"));else if(a.j&&4==bh(a))Ec(a.Db,0,a);else if(a.dispatchEvent(\"readystatechange\"),4==bh(a)){Q(a.b,Vg(a,\"Request complete\"));a.c=!1;try{var b=ch(a);a:switch(b){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var c=!0;break a;default:c=!1}var d;if(!(d=c)){var e;if(e=0===b){var f=String(a.l).match(Nc)[1]||null;if(!f&&k.self&&k.self.location){var h=k.self.location.protocol;\nf=h.substr(0,h.length-1)}e=!Sg.test(f?f.toLowerCase():\"\")}d=e}if(d)a.dispatchEvent(\"complete\"),a.dispatchEvent(\"success\");else{try{var m=2<bh(a)?a.a.statusText:\"\"}catch(p){Q(a.b,\"Can not get status: \"+p.message),m=\"\"}a.h=m+\" [\"+ch(a)+\"]\";Zg(a)}}finally{$g(a)}}}function $g(a,b){if(a.a){Xg(a);var c=a.a,d=a.B[0]?ca:null;a.a=null;a.B=null;b||a.dispatchEvent(\"ready\");try{c.onreadystatechange=d}catch(e){(a=a.b)&&a.log(Eg,\"Problem encountered resetting onreadystatechange: \"+e.message,void 0)}}}\nfunction Xg(a){a.a&&a.v&&(a.a.ontimeout=null);a.s&&(k.clearTimeout(a.s),a.s=null)}function bh(a){return a.a?a.a.readyState:0}function ch(a){try{return 2<bh(a)?a.a.status:-1}catch(b){return-1}}function dh(a){try{return a.a?a.a.responseText:\"\"}catch(b){return Q(a.b,\"Can not get responseText: \"+b.message),\"\"}}\ng.getResponse=function(){try{if(!this.a)return null;if(\"response\"in this.a)return this.a.response;switch(this.o){case Rg:case \"text\":return this.a.responseText;case \"arraybuffer\":if(\"mozResponseArrayBuffer\"in this.a)return this.a.mozResponseArrayBuffer}var a=this.b;a&&a.log(Eg,\"Response type \"+this.o+\" is not supported on this browser\",void 0);return null}catch(b){return Q(this.b,\"Can not get response: \"+b.message),null}};function Vg(a,b){return b+\" [\"+a.N+\" \"+a.l+\" \"+ch(a)+\"]\"};/*\n Portions of this code are from MochiKit, received by\n The Closure Authors under the MIT license. All other code is Copyright\n 2005-2009 The Closure Authors. All Rights Reserved.\n*/\nfunction eh(a,b){this.g=[];this.v=a;this.s=b||null;this.f=this.a=!1;this.c=void 0;this.u=this.B=this.j=!1;this.h=0;this.b=null;this.l=0}eh.prototype.cancel=function(a){if(this.a)this.c instanceof eh&&this.c.cancel();else{if(this.b){var b=this.b;delete this.b;a?b.cancel(a):(b.l--,0>=b.l&&b.cancel())}this.v?this.v.call(this.s,this):this.u=!0;this.a||(a=new fh(this),gh(this),hh(this,!1,a))}};eh.prototype.o=function(a,b){this.j=!1;hh(this,a,b)};function hh(a,b,c){a.a=!0;a.c=c;a.f=!b;ih(a)}\nfunction gh(a){if(a.a){if(!a.u)throw new jh(a);a.u=!1}}eh.prototype.D=function(){gh(this);hh(this,!0,null)};function kh(a,b){lh(a,null,b,void 0)}function lh(a,b,c,d){a.g.push([b,c,d]);a.a&&ih(a)}eh.prototype.then=function(a,b,c){var d,e,f=new z(function(a,b){d=a;e=b});lh(this,d,function(a){a instanceof fh?f.cancel():e(a)});return f.then(a,b,c)};oa(eh);function mh(a){return Ca(a.g,function(a){return n(a[1])})}\nfunction ih(a){if(a.h&&a.a&&mh(a)){var b=a.h,c=nh[b];c&&(k.clearTimeout(c.a),delete nh[b]);a.h=0}a.b&&(a.b.l--,delete a.b);b=a.c;for(var d=c=!1;a.g.length&&!a.j;){var e=a.g.shift(),f=e[0],h=e[1];e=e[2];if(f=a.f?h:f)try{var m=f.call(e||a.s,b);void 0!==m&&(a.f=a.f&&(m==b||m instanceof Error),a.c=b=m);if(pa(b)||\"function\"===typeof k.Promise&&b instanceof k.Promise)d=!0,a.j=!0}catch(p){b=p,a.f=!0,mh(a)||(c=!0)}}a.c=b;d&&(m=r(a.o,a,!0),d=r(a.o,a,!1),b instanceof eh?(lh(b,m,d),b.B=!0):b.then(m,d));c&&(b=\nnew oh(b),nh[b.a]=b,a.h=b.a)}function jh(){u.call(this)}t(jh,u);jh.prototype.message=\"Deferred has already fired\";jh.prototype.name=\"AlreadyCalledError\";function fh(){u.call(this)}t(fh,u);fh.prototype.message=\"Deferred was canceled\";fh.prototype.name=\"CanceledError\";function oh(a){this.a=k.setTimeout(r(this.c,this),0);this.b=a}oh.prototype.c=function(){delete nh[this.a];throw this.b;};var nh={};function ph(a){var b={},c=b.document||document,d=sd(a),e=document.createElement(\"SCRIPT\"),f={Fb:e,Fa:void 0},h=new eh(qh,f),m=null,p=null!=b.timeout?b.timeout:5E3;0<p&&(m=window.setTimeout(function(){rh(e,!0);var a=new sh(th,\"Timeout reached for loading script \"+d);gh(h);hh(h,!1,a)},p),f.Fa=m);e.onload=e.onreadystatechange=function(){e.readyState&&\"loaded\"!=e.readyState&&\"complete\"!=e.readyState||(rh(e,b.bd||!1,m),h.D())};e.onerror=function(){rh(e,!0,m);var a=new sh(uh,\"Error while loading script \"+\nd);gh(h);hh(h,!1,a)};f=b.attributes||{};ab(f,{type:\"text/javascript\",charset:\"UTF-8\"});Id(e,f);e.src=sd(a);vh(c).appendChild(e);return h}function vh(a){var b;return(b=(a||document).getElementsByTagName(\"HEAD\"))&&0!=b.length?b[0]:a.documentElement}function qh(){if(this&&this.Fb){var a=this.Fb;a&&\"SCRIPT\"==a.tagName&&rh(a,!0,this.Fa)}}\nfunction rh(a,b,c){null!=c&&k.clearTimeout(c);a.onload=ca;a.onerror=ca;a.onreadystatechange=ca;b&&window.setTimeout(function(){a&&a.parentNode&&a.parentNode.removeChild(a)},0)}var uh=0,th=1;function sh(a,b){var c=\"Jsloader error (code #\"+a+\")\";b&&(c+=\": \"+b);u.call(this,c);this.code=a}t(sh,u);function wh(a){this.f=a}t(wh,sg);wh.prototype.a=function(){return new this.f};wh.prototype.b=function(){return{}};\nfunction xh(a,b,c){this.b=a;a=b||{};this.j=a.secureTokenEndpoint||\"https://securetoken.googleapis.com/v1/token\";this.l=a.secureTokenTimeout||yh;this.f=Za(a.secureTokenHeaders||zh);this.g=a.firebaseEndpoint||\"https://www.googleapis.com/identitytoolkit/v3/relyingparty/\";this.h=a.firebaseTimeout||Ah;this.a=Za(a.firebaseHeaders||Bh);c&&(this.a[\"X-Client-Version\"]=c,this.f[\"X-Client-Version\"]=c);c=\"Node\"==le();c=k.XMLHttpRequest||c&&firebase.INTERNAL.node&&firebase.INTERNAL.node.XMLHttpRequest;if(!c&&\n!ke())throw new M(\"internal-error\",\"The XMLHttpRequest compatibility library was not found.\");this.c=void 0;ke()?this.c=new Mg(self):me()?this.c=new wh(c):this.c=new xg}var Ch,Gf=\"idToken\",yh=new ze(3E4,6E4),zh={\"Content-Type\":\"application/x-www-form-urlencoded\"},Ah=new ze(3E4,6E4),Bh={\"Content-Type\":\"application/json\"};function Dh(a,b){b?a.a[\"X-Firebase-Locale\"]=b:delete a.a[\"X-Firebase-Locale\"]}\nfunction Eh(a,b){b?(a.a[\"X-Client-Version\"]=b,a.f[\"X-Client-Version\"]=b):(delete a.a[\"X-Client-Version\"],delete a.f[\"X-Client-Version\"])}function Fh(a,b,c,d,e,f,h){Xd()||ke()?a=r(a.o,a):(Ch||(Ch=new z(function(a,b){Gh(a,b)})),a=r(a.u,a));a(b,c,d,e,f,h)}\nxh.prototype.o=function(a,b,c,d,e,f){if(ke()&&(\"undefined\"===typeof k.fetch||\"undefined\"===typeof k.Headers||\"undefined\"===typeof k.Request))throw new M(\"operation-not-supported-in-this-environment\",\"fetch, Headers and Request native APIs or equivalent Polyfills must be available to support HTTP requests from a Worker environment.\");var h=new Qg(this.c);if(f){h.g=Math.max(0,f);var m=setTimeout(function(){h.dispatchEvent(\"timeout\")},f)}sc(h,\"complete\",function(){m&&clearTimeout(m);var a=null;try{a=\nJSON.parse(dh(this))||null}catch(E){a=null}b&&b(a)});yc(h,\"ready\",function(){m&&clearTimeout(m);Ib(this)});yc(h,\"timeout\",function(){m&&clearTimeout(m);Ib(this);b&&b(null)});Ug(h,a,c,d,e)};var Hh=pd(\"https://apis.google.com/js/client.js?onload=%{onload}\"),Ih=\"__fcb\"+Math.floor(1E6*Math.random()).toString();\nfunction Gh(a,b){if(((window.gapi||{}).client||{}).request)a();else{k[Ih]=function(){((window.gapi||{}).client||{}).request?a():b(Error(\"CORS_UNSUPPORTED\"))};var c=td(Hh,{onload:Ih});kh(ph(c),function(){b(Error(\"CORS_UNSUPPORTED\"))})}}\nxh.prototype.u=function(a,b,c,d,e){var f=this;Ch.then(function(){window.gapi.client.setApiKey(f.b);var h=window.gapi.auth.getToken();window.gapi.auth.setToken(null);window.gapi.client.request({path:a,method:c,body:d,headers:e,authType:\"none\",callback:function(a){window.gapi.auth.setToken(h);b&&b(a)}})}).m(function(a){b&&b({error:{message:a&&a.message||\"CORS_UNSUPPORTED\"}})})};\nfunction Jh(a,b){return new z(function(c,d){\"refresh_token\"==b.grant_type&&b.refresh_token||\"authorization_code\"==b.grant_type&&b.code?Fh(a,a.j+\"?key=\"+encodeURIComponent(a.b),function(a){a?a.error?d(Kh(a)):a.access_token&&a.refresh_token?c(a):d(new M(\"internal-error\")):d(new M(\"network-request-failed\"))},\"POST\",gd(b).toString(),a.f,a.l.get()):d(new M(\"internal-error\"))})}\nfunction Lh(a,b,c,d,e,f){var h=cd(a.g+b);H(h,\"key\",a.b);f&&H(h,\"cb\",na().toString());var m=\"GET\"==c;if(m)for(var p in d)d.hasOwnProperty(p)&&H(h,p,d[p]);return new z(function(b,f){Fh(a,h.toString(),function(a){a?a.error?f(Kh(a,e||{})):b(a):f(new M(\"network-request-failed\"))},c,m?void 0:Nd(ve(d)),a.a,a.h.get())})}function Mh(a){if(!rg.test(a.email))throw new M(\"invalid-email\");}function Nh(a){\"email\"in a&&Mh(a)}\nfunction Oh(a,b){return P(a,Ph,{identifier:b,continueUri:se()?Ud():\"http://localhost\"}).then(function(a){return a.allProviders||[]})}function Qh(a,b){return P(a,Ph,{identifier:b,continueUri:se()?Ud():\"http://localhost\"}).then(function(a){return a.signinMethods||[]})}function Rh(a){return P(a,Sh,{}).then(function(a){return a.authorizedDomains||[]})}function Th(a){if(!a[Gf])throw new M(\"internal-error\");}\nfunction Uh(a){if(a.phoneNumber||a.temporaryProof){if(!a.phoneNumber||!a.temporaryProof)throw new M(\"internal-error\");}else{if(!a.sessionInfo)throw new M(\"missing-verification-id\");if(!a.code)throw new M(\"missing-verification-code\");}}xh.prototype.jb=function(){return P(this,Vh,{})};xh.prototype.mb=function(a,b){return P(this,Wh,{idToken:a,email:b})};xh.prototype.nb=function(a,b){return P(this,Zf,{idToken:a,password:b})};var Xh={displayName:\"DISPLAY_NAME\",photoUrl:\"PHOTO_URL\"};g=xh.prototype;\ng.ob=function(a,b){var c={idToken:a},d=[];Xa(Xh,function(a,f){var e=b[f];null===e?d.push(a):f in b&&(c[f]=e)});d.length&&(c.deleteAttribute=d);return P(this,Wh,c)};g.gb=function(a,b){a={requestType:\"PASSWORD_RESET\",email:a};ab(a,b);return P(this,Yh,a)};g.hb=function(a,b){a={requestType:\"EMAIL_SIGNIN\",email:a};ab(a,b);return P(this,Zh,a)};g.fb=function(a,b){a={requestType:\"VERIFY_EMAIL\",idToken:a};ab(a,b);return P(this,$h,a)};function gg(a,b){return P(a,ai,b)}g.Sa=function(a){return P(this,bi,a)};\nfunction ci(a,b,c){return P(a,di,{idToken:b,deleteProvider:c})}function ei(a){if(!a.requestUri||!a.sessionId&&!a.postBody)throw new M(\"internal-error\");}\nfunction fi(a){var b=null;a.needConfirmation?(a.code=\"account-exists-with-different-credential\",b=qg(a)):\"FEDERATED_USER_ID_ALREADY_LINKED\"==a.errorMessage?(a.code=\"credential-already-in-use\",b=qg(a)):\"EMAIL_EXISTS\"==a.errorMessage?(a.code=\"email-already-in-use\",b=qg(a)):a.errorMessage&&(b=gi(a.errorMessage));if(b)throw b;if(!a[Gf])throw new M(\"internal-error\");}function If(a,b){b.returnIdpCredential=!0;return P(a,hi,b)}function Kf(a,b){b.returnIdpCredential=!0;return P(a,ii,b)}\nfunction Lf(a,b){b.returnIdpCredential=!0;b.autoCreate=!1;return P(a,ji,b)}function ki(a){if(!a.oobCode)throw new M(\"invalid-action-code\");}g.Wa=function(a,b){return P(this,li,{oobCode:a,newPassword:b})};g.Ia=function(a){return P(this,mi,{oobCode:a})};g.Ua=function(a){return P(this,ni,{oobCode:a})};\nvar ni={endpoint:\"setAccountInfo\",A:ki,ba:\"email\"},mi={endpoint:\"resetPassword\",A:ki,J:function(a){var b=a.requestType;if(!b||!a.email&&\"EMAIL_SIGNIN\"!=b)throw new M(\"internal-error\");}},oi={endpoint:\"signupNewUser\",A:function(a){Mh(a);if(!a.password)throw new M(\"weak-password\");},J:Th,R:!0},Ph={endpoint:\"createAuthUri\"},pi={endpoint:\"deleteAccount\",T:[\"idToken\"]},di={endpoint:\"setAccountInfo\",T:[\"idToken\",\"deleteProvider\"],A:function(a){if(!fa(a.deleteProvider))throw new M(\"internal-error\");}},Wf=\n{endpoint:\"emailLinkSignin\",T:[\"email\",\"oobCode\"],A:Mh,J:Th,R:!0},Yf={endpoint:\"emailLinkSignin\",T:[\"idToken\",\"email\",\"oobCode\"],A:Mh,J:Th,R:!0},qi={endpoint:\"getAccountInfo\"},Zh={endpoint:\"getOobConfirmationCode\",T:[\"requestType\"],A:function(a){if(\"EMAIL_SIGNIN\"!=a.requestType)throw new M(\"internal-error\");Mh(a)},ba:\"email\"},$h={endpoint:\"getOobConfirmationCode\",T:[\"idToken\",\"requestType\"],A:function(a){if(\"VERIFY_EMAIL\"!=a.requestType)throw new M(\"internal-error\");},ba:\"email\"},Yh={endpoint:\"getOobConfirmationCode\",\nT:[\"requestType\"],A:function(a){if(\"PASSWORD_RESET\"!=a.requestType)throw new M(\"internal-error\");Mh(a)},ba:\"email\"},Sh={pb:!0,endpoint:\"getProjectConfig\",Cb:\"GET\"},ri={pb:!0,endpoint:\"getRecaptchaParam\",Cb:\"GET\",J:function(a){if(!a.recaptchaSiteKey)throw new M(\"internal-error\");}},li={endpoint:\"resetPassword\",A:ki,ba:\"email\"},ai={endpoint:\"sendVerificationCode\",T:[\"phoneNumber\",\"recaptchaToken\"],ba:\"sessionInfo\"},Wh={endpoint:\"setAccountInfo\",T:[\"idToken\"],A:Nh,R:!0},Zf={endpoint:\"setAccountInfo\",\nT:[\"idToken\"],A:function(a){Nh(a);if(!a.password)throw new M(\"weak-password\");},J:Th,R:!0},Vh={endpoint:\"signupNewUser\",J:Th,R:!0},hi={endpoint:\"verifyAssertion\",A:ei,J:fi,R:!0},ji={endpoint:\"verifyAssertion\",A:ei,J:function(a){if(a.errorMessage&&\"USER_NOT_FOUND\"==a.errorMessage)throw new M(\"user-not-found\");if(a.errorMessage)throw gi(a.errorMessage);if(!a[Gf])throw new M(\"internal-error\");},R:!0},ii={endpoint:\"verifyAssertion\",A:function(a){ei(a);if(!a.idToken)throw new M(\"internal-error\");},J:fi,\nR:!0},si={endpoint:\"verifyCustomToken\",A:function(a){if(!a.token)throw new M(\"invalid-custom-token\");},J:Th,R:!0},Xf={endpoint:\"verifyPassword\",A:function(a){Mh(a);if(!a.password)throw new M(\"wrong-password\");},J:Th,R:!0},bi={endpoint:\"verifyPhoneNumber\",A:Uh,J:Th},dg={endpoint:\"verifyPhoneNumber\",A:function(a){if(!a.idToken)throw new M(\"internal-error\");Uh(a)},J:function(a){if(a.temporaryProof)throw a.code=\"credential-already-in-use\",qg(a);Th(a)}},eg={Tb:{USER_NOT_FOUND:\"user-not-found\"},endpoint:\"verifyPhoneNumber\",\nA:Uh,J:Th};function P(a,b,c){if(!Je(c,b.T))return B(new M(\"internal-error\"));var d=b.Cb||\"POST\",e;return A(c).then(b.A).then(function(){b.R&&(c.returnSecureToken=!0);return Lh(a,b.endpoint,d,c,b.Tb,b.pb||!1)}).then(function(a){return e=a}).then(b.J).then(function(){if(!b.ba)return e;if(!(b.ba in e))throw new M(\"internal-error\");return e[b.ba]})}function gi(a){return Kh({error:{errors:[{message:a}],code:400,message:a}})}\nfunction Kh(a,b){var c=(a.error&&a.error.errors&&a.error.errors[0]||{}).reason||\"\";var d={keyInvalid:\"invalid-api-key\",ipRefererBlocked:\"app-not-authorized\"};if(c=d[c]?new M(d[c]):null)return c;c=a.error&&a.error.message||\"\";d={INVALID_CUSTOM_TOKEN:\"invalid-custom-token\",CREDENTIAL_MISMATCH:\"custom-token-mismatch\",MISSING_CUSTOM_TOKEN:\"internal-error\",INVALID_IDENTIFIER:\"invalid-email\",MISSING_CONTINUE_URI:\"internal-error\",INVALID_EMAIL:\"invalid-email\",INVALID_PASSWORD:\"wrong-password\",USER_DISABLED:\"user-disabled\",\nMISSING_PASSWORD:\"internal-error\",EMAIL_EXISTS:\"email-already-in-use\",PASSWORD_LOGIN_DISABLED:\"operation-not-allowed\",INVALID_IDP_RESPONSE:\"invalid-credential\",FEDERATED_USER_ID_ALREADY_LINKED:\"credential-already-in-use\",INVALID_MESSAGE_PAYLOAD:\"invalid-message-payload\",INVALID_RECIPIENT_EMAIL:\"invalid-recipient-email\",INVALID_SENDER:\"invalid-sender\",EMAIL_NOT_FOUND:\"user-not-found\",EXPIRED_OOB_CODE:\"expired-action-code\",INVALID_OOB_CODE:\"invalid-action-code\",MISSING_OOB_CODE:\"internal-error\",CREDENTIAL_TOO_OLD_LOGIN_AGAIN:\"requires-recent-login\",\nINVALID_ID_TOKEN:\"invalid-user-token\",TOKEN_EXPIRED:\"user-token-expired\",USER_NOT_FOUND:\"user-token-expired\",CORS_UNSUPPORTED:\"cors-unsupported\",DYNAMIC_LINK_NOT_ACTIVATED:\"dynamic-link-not-activated\",INVALID_APP_ID:\"invalid-app-id\",TOO_MANY_ATTEMPTS_TRY_LATER:\"too-many-requests\",WEAK_PASSWORD:\"weak-password\",OPERATION_NOT_ALLOWED:\"operation-not-allowed\",USER_CANCELLED:\"user-cancelled\",CAPTCHA_CHECK_FAILED:\"captcha-check-failed\",INVALID_APP_CREDENTIAL:\"invalid-app-credential\",INVALID_CODE:\"invalid-verification-code\",\nINVALID_PHONE_NUMBER:\"invalid-phone-number\",INVALID_SESSION_INFO:\"invalid-verification-id\",INVALID_TEMPORARY_PROOF:\"invalid-credential\",MISSING_APP_CREDENTIAL:\"missing-app-credential\",MISSING_CODE:\"missing-verification-code\",MISSING_PHONE_NUMBER:\"missing-phone-number\",MISSING_SESSION_INFO:\"missing-verification-id\",QUOTA_EXCEEDED:\"quota-exceeded\",SESSION_EXPIRED:\"code-expired\",INVALID_CONTINUE_URI:\"invalid-continue-uri\",MISSING_ANDROID_PACKAGE_NAME:\"missing-android-pkg-name\",MISSING_IOS_BUNDLE_ID:\"missing-ios-bundle-id\",\nUNAUTHORIZED_DOMAIN:\"unauthorized-continue-uri\",INVALID_OAUTH_CLIENT_ID:\"invalid-oauth-client-id\",INVALID_CERT_HASH:\"invalid-cert-hash\"};ab(d,b||{});b=(b=c.match(/^[^\\s]+\\s*:\\s*(.*)$/))&&1<b.length?b[1]:void 0;for(var e in d)if(0===c.indexOf(e))return new M(d[e],b);!b&&a&&(b=ue(a));return new M(\"internal-error\",b)};var ti={Wc:{Ya:\"https://www.googleapis.com/identitytoolkit/v3/relyingparty/\",eb:\"https://securetoken.googleapis.com/v1/token\",id:\"p\"},Yc:{Ya:\"https://staging-www.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/\",eb:\"https://staging-securetoken.sandbox.googleapis.com/v1/token\",id:\"s\"},Zc:{Ya:\"https://www-googleapis-test.sandbox.google.com/identitytoolkit/v3/relyingparty/\",eb:\"https://test-securetoken.sandbox.googleapis.com/v1/token\",id:\"t\"}};\nfunction ui(a){for(var b in ti)if(ti[b].id===a)return a=ti[b],{firebaseEndpoint:a.Ya,secureTokenEndpoint:a.eb};return null}var vi;vi=ui(\"__EID__\")?\"__EID__\":void 0;function wi(a){this.b=a;this.a=null;this.ab=xi(this)}\nfunction xi(a){return yi().then(function(){return new z(function(b,c){J(\"gapi.iframes.getContext\")().open({where:document.body,url:a.b,messageHandlersFilter:J(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"),attributes:{style:{position:\"absolute\",top:\"-100px\",width:\"1px\",height:\"1px\"}},dontclear:!0},function(d){function e(){clearTimeout(f);b()}a.a=d;a.a.restyle({setHideOnLeave:!1});var f=setTimeout(function(){c(Error(\"Network Error\"))},zi.get());d.ping(e).then(e,function(){c(Error(\"Network Error\"))})})})})}\nfunction Ai(a,b){return a.ab.then(function(){return new z(function(c){a.a.send(b.type,b,c,J(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"))})})}function Bi(a,b){a.ab.then(function(){a.a.register(\"authEvent\",b,J(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"))})}var Ci=pd(\"https://apis.google.com/js/api.js?onload=%{onload}\"),Di=new ze(3E4,6E4),zi=new ze(5E3,15E3),Ei=null;\nfunction yi(){return Ei?Ei:Ei=(new z(function(a,b){function c(){ye();J(\"gapi.load\")(\"gapi.iframes\",{callback:a,ontimeout:function(){ye();b(Error(\"Network Error\"))},timeout:Di.get()})}if(J(\"gapi.iframes.Iframe\"))a();else if(J(\"gapi.load\"))c();else{var d=\"__iframefcb\"+Math.floor(1E6*Math.random()).toString();k[d]=function(){J(\"gapi.load\")?c():b(Error(\"Network Error\"))};d=td(Ci,{onload:d});A(ph(d)).m(function(){b(Error(\"Network Error\"))})}})).m(function(a){Ei=null;throw a;})};function Fi(a,b,c){this.j=a;this.g=b;this.h=c;this.f=null;this.a=dd(this.j,\"/__/auth/iframe\");H(this.a,\"apiKey\",this.g);H(this.a,\"appName\",this.h);this.b=null;this.c=[]}Fi.prototype.toString=function(){this.f?H(this.a,\"v\",this.f):jd(this.a.a,\"v\");this.b?H(this.a,\"eid\",this.b):jd(this.a.a,\"eid\");this.c.length?H(this.a,\"fw\",this.c.join(\",\")):jd(this.a.a,\"fw\");return this.a.toString()};function Gi(a,b,c,d,e){this.o=a;this.u=b;this.c=c;this.l=d;this.h=this.g=this.j=null;this.a=e;this.f=null}\nGi.prototype.toString=function(){var a=dd(this.o,\"/__/auth/handler\");H(a,\"apiKey\",this.u);H(a,\"appName\",this.c);H(a,\"authType\",this.l);if(this.a.isOAuthProvider){var b=this.a;try{var c=firebase.app(this.c).auth().ca()}catch(m){c=null}b.Xa=c;H(a,\"providerId\",this.a.providerId);b=this.a;c=ve(b.tb);for(var d in c)c[d]=c[d].toString();d=b.Ac;c=Za(c);for(var e=0;e<d.length;e++){var f=d[e];f in c&&delete c[f]}b.Za&&b.Xa&&!c[b.Za]&&(c[b.Za]=b.Xa);Ya(c)||H(a,\"customParameters\",ue(c))}\"function\"===typeof this.a.yb&&\n(b=this.a.yb(),b.length&&H(a,\"scopes\",b.join(\",\")));this.j?H(a,\"redirectUrl\",this.j):jd(a.a,\"redirectUrl\");this.g?H(a,\"eventId\",this.g):jd(a.a,\"eventId\");this.h?H(a,\"v\",this.h):jd(a.a,\"v\");if(this.b)for(var h in this.b)this.b.hasOwnProperty(h)&&!bd(a,h)&&H(a,h,this.b[h]);this.f?H(a,\"eid\",this.f):jd(a.a,\"eid\");h=Hi(this.c);h.length&&H(a,\"fw\",h.join(\",\"));return a.toString()};function Hi(a){try{return firebase.app(a).auth().Ka()}catch(b){return[]}}\nfunction Ii(a,b,c,d,e){this.u=a;this.f=b;this.b=c;this.c=d||null;this.h=e||null;this.o=this.s=this.v=null;this.g=[];this.l=this.a=null}\nfunction Ji(a){var b=Ud();return Rh(a).then(function(a){a:{var c=cd(b),e=c.c;c=c.b;for(var f=0;f<a.length;f++){var h=a[f];var m=c;var p=e;0==h.indexOf(\"chrome-extension://\")?m=cd(h).b==m&&\"chrome-extension\"==p:\"http\"!=p&&\"https\"!=p?m=!1:ee.test(h)?m=m==h:(h=h.split(\".\").join(\"\\\\.\"),m=(new RegExp(\"^(.+\\\\.\"+h+\"|\"+h+\")$\",\"i\")).test(m));if(m){a=!0;break a}}a=!1}if(!a)throw new og(Ud());})}\nfunction Ki(a){if(a.l)return a.l;a.l=fe().then(function(){if(!a.s){var b=a.c,c=a.h,d=Hi(a.b),e=new Fi(a.u,a.f,a.b);e.f=b;e.b=c;e.c=Ia(d||[]);a.s=e.toString()}a.j=new wi(a.s);Li(a)});return a.l}g=Ii.prototype;g.Da=function(a,b,c){var d=new M(\"popup-closed-by-user\"),e=new M(\"web-storage-unsupported\"),f=this,h=!1;return this.ea().then(function(){Mi(f).then(function(c){c||(a&&ae(a),b(e),h=!0)})}).m(function(){}).then(function(){if(!h)return de(a)}).then(function(){if(!h)return Fc(c).then(function(){b(d)})})};\ng.Gb=function(){var a=I();return!te(a)&&!xe(a)};g.Bb=function(){return!1};\ng.xb=function(a,b,c,d,e,f,h){if(!a)return B(new M(\"popup-blocked\"));if(h&&!te())return this.ea().m(function(b){ae(a);e(b)}),d(),A();this.a||(this.a=Ji(Ni(this)));var m=this;return this.a.then(function(){var b=m.ea().m(function(b){ae(a);e(b);throw b;});d();return b}).then(function(){jg(c);if(!h){var d=Oi(m.u,m.f,m.b,b,c,null,f,m.c,void 0,m.h);Vd(d,a)}}).m(function(a){\"auth/network-request-failed\"==a.code&&(m.a=null);throw a;})};\nfunction Ni(a){a.o||(a.v=a.c?oe(a.c,Hi(a.b)):null,a.o=new xh(a.f,ui(a.h),a.v));return a.o}g.Ba=function(a,b,c){this.a||(this.a=Ji(Ni(this)));var d=this;return this.a.then(function(){jg(b);var e=Oi(d.u,d.f,d.b,a,b,Ud(),c,d.c,void 0,d.h);Vd(e)}).m(function(a){\"auth/network-request-failed\"==a.code&&(d.a=null);throw a;})};g.ea=function(){var a=this;return Ki(this).then(function(){return a.j.ab}).m(function(){a.a=null;throw new M(\"network-request-failed\");})};g.Lb=function(){return!0};\nfunction Oi(a,b,c,d,e,f,h,m,p,E){a=new Gi(a,b,c,d,e);a.j=f;a.g=h;a.h=m;a.b=Za(p||null);a.f=E;return a.toString()}function Li(a){if(!a.j)throw Error(\"IfcHandler must be initialized!\");Bi(a.j,function(b){var c={};if(b&&b.authEvent){var d=!1;b=lg(b.authEvent);for(c=0;c<a.g.length;c++)d=a.g[c](b)||d;c={};c.status=d?\"ACK\":\"ERROR\";return A(c)}c.status=\"ERROR\";return A(c)})}\nfunction Mi(a){var b={type:\"webStorageSupport\"};return Ki(a).then(function(){return Ai(a.j,b)}).then(function(a){if(a&&a.length&&\"undefined\"!==typeof a[0].webStorageSupport)return a[0].webStorageSupport;throw Error();})}g.va=function(a){this.g.push(a)};g.Ja=function(a){w(this.g,function(b){return b==a})};function Pi(a){this.a=a||firebase.INTERNAL.reactNative&&firebase.INTERNAL.reactNative.AsyncStorage;if(!this.a)throw new M(\"internal-error\",\"The React Native compatibility library was not found.\");this.type=\"asyncStorage\"}g=Pi.prototype;g.get=function(a){return A(this.a.getItem(a)).then(function(a){return a&&we(a)})};g.set=function(a,b){return A(this.a.setItem(a,ue(b)))};g.P=function(a){return A(this.a.removeItem(a))};g.Y=function(){};g.aa=function(){};function Qi(){if(!Ri())throw new M(\"web-storage-unsupported\");this.f={};this.a=[];this.b=0;this.g=k.indexedDB;this.type=\"indexedDB\"}var Si;function Ti(a){return new z(function(b,c){var d=a.g.deleteDatabase(\"firebaseLocalStorageDb\");d.onsuccess=function(){b()};d.onerror=function(a){c(Error(a.target.error))}})}\nfunction Ui(a){return new z(function(b,c){var d=a.g.open(\"firebaseLocalStorageDb\",1);d.onerror=function(a){try{a.preventDefault()}catch(f){}c(Error(a.target.error))};d.onupgradeneeded=function(a){a=a.target.result;try{a.createObjectStore(\"firebaseLocalStorage\",{keyPath:\"fbase_key\"})}catch(f){c(f)}};d.onsuccess=function(d){d=d.target.result;d.objectStoreNames.contains(\"firebaseLocalStorage\")?b(d):Ti(a).then(function(){return Ui(a)}).then(function(a){b(a)}).m(function(a){c(a)})}})}\nfunction Vi(a){a.h||(a.h=Ui(a));return a.h}function Ri(){try{return!!k.indexedDB}catch(a){return!1}}function Wi(a){return a.objectStore(\"firebaseLocalStorage\")}function Xi(a,b){return a.transaction([\"firebaseLocalStorage\"],b?\"readwrite\":\"readonly\")}function Yi(a){return new z(function(b,c){a.onsuccess=function(a){a&&a.target?b(a.target.result):b()};a.onerror=function(a){c(Error(a.target.errorCode))}})}g=Qi.prototype;\ng.set=function(a,b){var c=!1,d,e=this;return Vi(this).then(function(b){d=b;b=Wi(Xi(d,!0));return Yi(b.get(a))}).then(function(f){var h=Wi(Xi(d,!0));if(f)return f.value=b,Yi(h.put(f));e.b++;c=!0;f={};f.fbase_key=a;f.value=b;return Yi(h.add(f))}).then(function(){e.f[a]=b}).ha(function(){c&&e.b--})};g.get=function(a){return Vi(this).then(function(b){return Yi(Wi(Xi(b,!1)).get(a))}).then(function(a){return a&&a.value})};\ng.P=function(a){var b=!1,c=this;return Vi(this).then(function(d){b=!0;c.b++;return Yi(Wi(Xi(d,!0))[\"delete\"](a))}).then(function(){delete c.f[a]}).ha(function(){b&&c.b--})};\ng.Jc=function(){var a=this;return Vi(this).then(function(a){var b=Wi(Xi(a,!1));return b.getAll?Yi(b.getAll()):new z(function(a,c){var d=[],e=b.openCursor();e.onsuccess=function(b){(b=b.target.result)?(d.push(b.value),b[\"continue\"]()):a(d)};e.onerror=function(a){c(Error(a.target.errorCode))}})}).then(function(b){var c={},d=[];if(0==a.b){for(d=0;d<b.length;d++)c[b[d].fbase_key]=b[d].value;d=Wd(a.f,c);a.f=c}return d})};g.Y=function(a){0==this.a.length&&Zi(this);this.a.push(a)};\ng.aa=function(a){w(this.a,function(b){return b==a});0==this.a.length&&this.c&&this.c.cancel(\"STOP_EVENT\")};function Zi(a){function b(){a.c=Fc(800).then(r(a.Jc,a)).then(function(b){0<b.length&&v(a.a,function(a){a(b)})}).then(b).m(function(a){\"STOP_EVENT\"!=a.message&&b()});return a.c}a.c&&a.c.cancel(\"STOP_EVENT\");b()};function $i(a){var b=this,c=null;this.a=[];this.type=\"indexedDB\";this.c=a;this.b=A().then(function(){return Ri()?(Si||(Si=new Qi),c=Si,c.set(\"__sak\",\"!\").then(function(){return c.get(\"__sak\")}).then(function(a){if(\"!\"!==a)throw Error(\"indexedDB not supported!\");return c.P(\"__sak\")}).then(function(){return c}).m(function(){return b.c})):b.c}).then(function(a){b.type=a.type;a.Y(function(a){v(b.a,function(b){b(a)})});return a})}g=$i.prototype;g.get=function(a){return this.b.then(function(b){return b.get(a)})};\ng.set=function(a,b){return this.b.then(function(c){return c.set(a,b)})};g.P=function(a){return this.b.then(function(b){return b.P(a)})};g.Y=function(a){this.a.push(a)};g.aa=function(a){w(this.a,function(b){return b==a})};function aj(){this.a={};this.type=\"inMemory\"}g=aj.prototype;g.get=function(a){return A(this.a[a])};g.set=function(a,b){this.a[a]=b;return A()};g.P=function(a){delete this.a[a];return A()};g.Y=function(){};g.aa=function(){};function bj(){if(!cj()){if(\"Node\"==le())throw new M(\"internal-error\",\"The LocalStorage compatibility library was not found.\");throw new M(\"web-storage-unsupported\");}this.a=dj()||firebase.INTERNAL.node.localStorage;this.type=\"localStorage\"}function dj(){try{var a=k.localStorage,b=qe();a&&(a.setItem(b,\"1\"),a.removeItem(b));return a}catch(c){return null}}\nfunction cj(){var a=\"Node\"==le();a=dj()||a&&firebase.INTERNAL.node&&firebase.INTERNAL.node.localStorage;if(!a)return!1;try{return a.setItem(\"__sak\",\"1\"),a.removeItem(\"__sak\"),!0}catch(b){return!1}}g=bj.prototype;g.get=function(a){var b=this;return A().then(function(){var c=b.a.getItem(a);return we(c)})};g.set=function(a,b){var c=this;return A().then(function(){var d=ue(b);null===d?c.P(a):c.a.setItem(a,d)})};g.P=function(a){var b=this;return A().then(function(){b.a.removeItem(a)})};\ng.Y=function(a){k.window&&pc(k.window,\"storage\",a)};g.aa=function(a){k.window&&F(k.window,\"storage\",a)};function ej(){this.type=\"nullStorage\"}g=ej.prototype;g.get=function(){return A(null)};g.set=function(){return A()};g.P=function(){return A()};g.Y=function(){};g.aa=function(){};function fj(){if(!gj()){if(\"Node\"==le())throw new M(\"internal-error\",\"The SessionStorage compatibility library was not found.\");throw new M(\"web-storage-unsupported\");}this.a=hj()||firebase.INTERNAL.node.sessionStorage;this.type=\"sessionStorage\"}function hj(){try{var a=k.sessionStorage,b=qe();a&&(a.setItem(b,\"1\"),a.removeItem(b));return a}catch(c){return null}}\nfunction gj(){var a=\"Node\"==le();a=hj()||a&&firebase.INTERNAL.node&&firebase.INTERNAL.node.sessionStorage;if(!a)return!1;try{return a.setItem(\"__sak\",\"1\"),a.removeItem(\"__sak\"),!0}catch(b){return!1}}g=fj.prototype;g.get=function(a){var b=this;return A().then(function(){var c=b.a.getItem(a);return we(c)})};g.set=function(a,b){var c=this;return A().then(function(){var d=ue(b);null===d?c.P(a):c.a.setItem(a,d)})};g.P=function(a){var b=this;return A().then(function(){b.a.removeItem(a)})};g.Y=function(){};\ng.aa=function(){};function ij(){var a={};a.Browser=jj;a.Node=kj;a.ReactNative=lj;a.Worker=mj;this.a=a[le()]}var nj,jj={w:bj,Pa:fj},kj={w:bj,Pa:fj},lj={w:Pi,Pa:ej},mj={w:bj,Pa:ej};var oj={Vc:\"local\",NONE:\"none\",Xc:\"session\"};function pj(a){var b=new M(\"invalid-persistence-type\"),c=new M(\"unsupported-persistence-type\");a:{for(d in oj)if(oj[d]==a){var d=!0;break a}d=!1}if(!d||\"string\"!==typeof a)throw b;switch(le()){case \"ReactNative\":if(\"session\"===a)throw c;break;case \"Node\":if(\"none\"!==a)throw c;break;default:if(!pe()&&\"none\"!==a)throw c;}}\nfunction qj(){var a=!xe(I())&&je()?!0:!1,b=te(),c=pe();this.o=a;this.h=b;this.l=c;this.a={};nj||(nj=new ij);a=nj;try{this.g=!Td()&&De()||!k.indexedDB?new a.a.w:new $i(ke()?new aj:new a.a.w)}catch(d){this.g=new aj,this.h=!0}try{this.j=new a.a.Pa}catch(d){this.j=new aj}this.u=new aj;this.f=r(this.Kb,this);this.b={}}var rj;function sj(){rj||(rj=new qj);return rj}function tj(a,b){switch(b){case \"session\":return a.j;case \"none\":return a.u;default:return a.g}}\nfunction uj(a,b){return\"firebase:\"+a.name+(b?\":\"+b:\"\")}function vj(a,b,c){var d=uj(b,c),e=tj(a,b.w);return a.get(b,c).then(function(f){var h=null;try{h=we(k.localStorage.getItem(d))}catch(m){}if(h&&!f)return k.localStorage.removeItem(d),a.set(b,h,c);h&&f&&\"localStorage\"!=e.type&&k.localStorage.removeItem(d)})}g=qj.prototype;g.get=function(a,b){return tj(this,a.w).get(uj(a,b))};function wj(a,b,c){c=uj(b,c);\"local\"==b.w&&(a.b[c]=null);return tj(a,b.w).P(c)}\ng.set=function(a,b,c){var d=uj(a,c),e=this,f=tj(this,a.w);return f.set(d,b).then(function(){return f.get(d)}).then(function(b){\"local\"==a.w&&(e.b[d]=b)})};g.addListener=function(a,b,c){a=uj(a,b);this.l&&(this.b[a]=k.localStorage.getItem(a));Ya(this.a)&&(tj(this,\"local\").Y(this.f),this.h||(Td()||!De())&&k.indexedDB||!this.l||xj(this));this.a[a]||(this.a[a]=[]);this.a[a].push(c)};\ng.removeListener=function(a,b,c){a=uj(a,b);this.a[a]&&(w(this.a[a],function(a){return a==c}),0==this.a[a].length&&delete this.a[a]);Ya(this.a)&&(tj(this,\"local\").aa(this.f),yj(this))};function xj(a){yj(a);a.c=setInterval(function(){for(var b in a.a){var c=k.localStorage.getItem(b),d=a.b[b];c!=d&&(a.b[b]=c,c=new cc({type:\"storage\",key:b,target:window,oldValue:d,newValue:c,a:!0}),a.Kb(c))}},1E3)}function yj(a){a.c&&(clearInterval(a.c),a.c=null)}\ng.Kb=function(a){if(a&&a.f){var b=a.a.key;if(null==b)for(var c in this.a){var d=this.b[c];\"undefined\"===typeof d&&(d=null);var e=k.localStorage.getItem(c);e!==d&&(this.b[c]=e,this.Va(c))}else if(0==b.indexOf(\"firebase:\")&&this.a[b]){\"undefined\"!==typeof a.a.a?tj(this,\"local\").aa(this.f):yj(this);if(this.o)if(c=k.localStorage.getItem(b),d=a.a.newValue,d!==c)null!==d?k.localStorage.setItem(b,d):k.localStorage.removeItem(b);else if(this.b[b]===d&&\"undefined\"===typeof a.a.a)return;var f=this;c=function(){if(\"undefined\"!==\ntypeof a.a.a||f.b[b]!==k.localStorage.getItem(b))f.b[b]=k.localStorage.getItem(b),f.Va(b)};C&&Xb&&10==Xb&&k.localStorage.getItem(b)!==a.a.newValue&&a.a.newValue!==a.a.oldValue?setTimeout(c,10):c()}}else v(a,r(this.Va,this))};g.Va=function(a){this.a[a]&&v(this.a[a],function(a){a()})};function zj(a){this.a=a;this.b=sj()}var Aj={name:\"authEvent\",w:\"local\"};function Bj(a){return a.b.get(Aj,a.a).then(function(a){return lg(a)})};function Cj(){this.a=sj()};function Dj(){this.b=-1};function Ej(a,b){this.b=-1;this.b=Fj;this.f=k.Uint8Array?new Uint8Array(this.b):Array(this.b);this.g=this.c=0;this.a=[];this.j=a;this.h=b;this.l=k.Int32Array?new Int32Array(64):Array(64);void 0!==Gj||(k.Int32Array?Gj=new Int32Array(Hj):Gj=Hj);this.reset()}var Gj;t(Ej,Dj);for(var Fj=64,Ij=Fj-1,Jj=[],Kj=0;Kj<Ij;Kj++)Jj[Kj]=0;var Lj=Ha(128,Jj);Ej.prototype.reset=function(){this.g=this.c=0;this.a=k.Int32Array?new Int32Array(this.h):Ia(this.h)};\nfunction Mj(a){for(var b=a.f,c=a.l,d=0,e=0;e<b.length;)c[d++]=b[e]<<24|b[e+1]<<16|b[e+2]<<8|b[e+3],e=4*d;for(b=16;64>b;b++){e=c[b-15]|0;d=c[b-2]|0;var f=(c[b-16]|0)+((e>>>7|e<<25)^(e>>>18|e<<14)^e>>>3)|0,h=(c[b-7]|0)+((d>>>17|d<<15)^(d>>>19|d<<13)^d>>>10)|0;c[b]=f+h|0}d=a.a[0]|0;e=a.a[1]|0;var m=a.a[2]|0,p=a.a[3]|0,E=a.a[4]|0,ic=a.a[5]|0,Jc=a.a[6]|0;f=a.a[7]|0;for(b=0;64>b;b++){var El=((d>>>2|d<<30)^(d>>>13|d<<19)^(d>>>22|d<<10))+(d&e^d&m^e&m)|0;h=E&ic^~E&Jc;f=f+((E>>>6|E<<26)^(E>>>11|E<<21)^(E>>>\n25|E<<7))|0;h=h+(Gj[b]|0)|0;h=f+(h+(c[b]|0)|0)|0;f=Jc;Jc=ic;ic=E;E=p+h|0;p=m;m=e;e=d;d=h+El|0}a.a[0]=a.a[0]+d|0;a.a[1]=a.a[1]+e|0;a.a[2]=a.a[2]+m|0;a.a[3]=a.a[3]+p|0;a.a[4]=a.a[4]+E|0;a.a[5]=a.a[5]+ic|0;a.a[6]=a.a[6]+Jc|0;a.a[7]=a.a[7]+f|0}\nfunction Nj(a,b,c){void 0===c&&(c=b.length);var d=0,e=a.c;if(l(b))for(;d<c;)a.f[e++]=b.charCodeAt(d++),e==a.b&&(Mj(a),e=0);else if(ha(b))for(;d<c;){var f=b[d++];if(!(\"number\"==typeof f&&0<=f&&255>=f&&f==(f|0)))throw Error(\"message must be a byte array\");a.f[e++]=f;e==a.b&&(Mj(a),e=0)}else throw Error(\"message must be string or array\");a.c=e;a.g+=c}\nvar Hj=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,\n4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function Oj(){Ej.call(this,8,Pj)}t(Oj,Ej);var Pj=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];function Qj(a,b,c,d,e){this.u=a;this.j=b;this.l=c;this.o=d||null;this.s=e||null;this.h=b+\":\"+c;this.v=new Cj;this.g=new zj(this.h);this.f=null;this.b=[];this.a=this.c=null}function Rj(a){return new M(\"invalid-cordova-configuration\",a)}g=Qj.prototype;\ng.ea=function(){return this.ya?this.ya:this.ya=ge().then(function(){if(\"function\"!==typeof J(\"universalLinks.subscribe\",k))throw Rj(\"cordova-universal-links-plugin is not installed\");if(\"undefined\"===typeof J(\"BuildInfo.packageName\",k))throw Rj(\"cordova-plugin-buildinfo is not installed\");if(\"function\"!==typeof J(\"cordova.plugins.browsertab.openUrl\",k))throw Rj(\"cordova-plugin-browsertab is not installed\");if(\"function\"!==typeof J(\"cordova.InAppBrowser.open\",k))throw Rj(\"cordova-plugin-inappbrowser is not installed\");\n},function(){throw new M(\"cordova-not-ready\");})};function Sj(){for(var a=20,b=[];0<a;)b.push(\"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".charAt(Math.floor(62*Math.random()))),a--;return b.join(\"\")}function Tj(a){var b=new Oj;Nj(b,a);a=[];var c=8*b.g;56>b.c?Nj(b,Lj,56-b.c):Nj(b,Lj,b.b-(b.c-56));for(var d=63;56<=d;d--)b.f[d]=c&255,c/=256;Mj(b);for(d=c=0;d<b.j;d++)for(var e=24;0<=e;e-=8)a[c++]=b.a[d]>>e&255;return gf(a)}\ng.Da=function(a,b){b(new M(\"operation-not-supported-in-this-environment\"));return A()};g.xb=function(){return B(new M(\"operation-not-supported-in-this-environment\"))};g.Lb=function(){return!1};g.Gb=function(){return!0};g.Bb=function(){return!0};\ng.Ba=function(a,b,c){if(this.c)return B(new M(\"redirect-operation-pending\"));var d=this,e=k.document,f=null,h=null,m=null,p=null;return this.c=A().then(function(){jg(b);return Uj(d)}).then(function(){return Vj(d,a,b,c)}).then(function(){return(new z(function(a,b){h=function(){var b=J(\"cordova.plugins.browsertab.close\",k);a();\"function\"===typeof b&&b();d.a&&\"function\"===typeof d.a.close&&(d.a.close(),d.a=null);return!1};d.va(h);m=function(){f||(f=Fc(2E3).then(function(){b(new M(\"redirect-cancelled-by-user\"))}))};\np=function(){Ae()&&m()};e.addEventListener(\"resume\",m,!1);I().toLowerCase().match(/android/)||e.addEventListener(\"visibilitychange\",p,!1)})).m(function(a){return Wj(d).then(function(){throw a;})})}).ha(function(){m&&e.removeEventListener(\"resume\",m,!1);p&&e.removeEventListener(\"visibilitychange\",p,!1);f&&f.cancel();h&&d.Ja(h);d.c=null})};\nfunction Vj(a,b,c,d){var e=Sj(),f=new kg(b,d,null,e,new M(\"no-auth-event\")),h=J(\"BuildInfo.packageName\",k);if(\"string\"!==typeof h)throw new M(\"invalid-cordova-configuration\");var m=J(\"BuildInfo.displayName\",k),p={};if(I().toLowerCase().match(/iphone|ipad|ipod/))p.ibi=h;else if(I().toLowerCase().match(/android/))p.apn=h;else return B(new M(\"operation-not-supported-in-this-environment\"));m&&(p.appDisplayName=m);e=Tj(e);p.sessionId=e;var E=Oi(a.u,a.j,a.l,b,c,null,d,a.o,p,a.s);return a.ea().then(function(){var b=\na.h;return a.v.a.set(Aj,f.C(),b)}).then(function(){var b=J(\"cordova.plugins.browsertab.isAvailable\",k);if(\"function\"!==typeof b)throw new M(\"invalid-cordova-configuration\");var c=null;b(function(b){if(b){c=J(\"cordova.plugins.browsertab.openUrl\",k);if(\"function\"!==typeof c)throw new M(\"invalid-cordova-configuration\");c(E)}else{c=J(\"cordova.InAppBrowser.open\",k);if(\"function\"!==typeof c)throw new M(\"invalid-cordova-configuration\");b=I();b=!(!b.match(/(iPad|iPhone|iPod).*OS 7_\\d/i)&&!b.match(/(iPad|iPhone|iPod).*OS 8_\\d/i));\na.a=c(E,b?\"_blank\":\"_system\",\"location=yes\")}})})}function Xj(a,b){for(var c=0;c<a.b.length;c++)try{a.b[c](b)}catch(d){}}function Uj(a){a.f||(a.f=a.ea().then(function(){return new z(function(b){function c(d){b(d);a.Ja(c);return!1}a.va(c);Yj(a)})}));return a.f}function Wj(a){var b=null;return Bj(a.g).then(function(c){b=c;c=a.g;return wj(c.b,Aj,c.a)}).then(function(){return b})}\nfunction Yj(a){function b(b){d=!0;e&&e.cancel();Wj(a).then(function(d){var e=c;if(d&&b&&b.url){var f=null;e=Ef(b.url);-1!=e.indexOf(\"/__/auth/callback\")&&(f=cd(e),f=we(bd(f,\"firebaseError\")||null),f=(f=\"object\"===typeof f?We(f):null)?new kg(d.b,d.c,null,null,f):new kg(d.b,d.c,e,d.g));e=f||c}Xj(a,e)})}var c=new kg(\"unknown\",null,null,null,new M(\"no-auth-event\")),d=!1,e=Fc(500).then(function(){return Wj(a).then(function(){d||Xj(a,c)})}),f=k.handleOpenURL;k.handleOpenURL=function(a){0==a.toLowerCase().indexOf(J(\"BuildInfo.packageName\",\nk).toLowerCase()+\"://\")&&b({url:a});if(\"function\"===typeof f)try{f(a)}catch(m){console.error(m)}};ng||(ng=new mg);ng.subscribe(b)}g.va=function(a){this.b.push(a);Uj(this).m(function(b){\"auth/invalid-cordova-configuration\"===b.code&&(b=new kg(\"unknown\",null,null,null,new M(\"no-auth-event\")),a(b))})};g.Ja=function(a){w(this.b,function(b){return b==a})};function Zj(a){this.a=a;this.b=sj()}var ak={name:\"pendingRedirect\",w:\"session\"};function bk(a){return a.b.set(ak,\"pending\",a.a)}function ck(a){return wj(a.b,ak,a.a)}function dk(a){return a.b.get(ak,a.a).then(function(a){return\"pending\"==a})};function ek(a,b,c){this.v=a;this.l=b;this.u=c;this.h=[];this.f=!1;this.j=r(this.o,this);this.c=new fk;this.s=new gk;this.g=new Zj(this.l+\":\"+this.u);this.b={};this.b.unknown=this.c;this.b.signInViaRedirect=this.c;this.b.linkViaRedirect=this.c;this.b.reauthViaRedirect=this.c;this.b.signInViaPopup=this.s;this.b.linkViaPopup=this.s;this.b.reauthViaPopup=this.s;this.a=hk(this.v,this.l,this.u,vi)}function hk(a,b,c,d){var e=firebase.SDK_VERSION||null;return he()?new Qj(a,b,c,e,d):new Ii(a,b,c,e,d)}\nek.prototype.reset=function(){this.f=!1;this.a.Ja(this.j);this.a=hk(this.v,this.l,this.u)};function ik(a){a.f||(a.f=!0,a.a.va(a.j));var b=a.a;return a.a.ea().m(function(c){a.a==b&&a.reset();throw c;})}function jk(a){a.a.Gb()&&ik(a).m(function(b){var c=new kg(\"unknown\",null,null,null,new M(\"operation-not-supported-in-this-environment\"));kk(b)&&a.o(c)});a.a.Bb()||lk(a.c)}\nek.prototype.subscribe=function(a){Fa(this.h,a)||this.h.push(a);if(!this.f){var b=this;dk(this.g).then(function(a){a?ck(b.g).then(function(){ik(b).m(function(a){var c=new kg(\"unknown\",null,null,null,new M(\"operation-not-supported-in-this-environment\"));kk(a)&&b.o(c)})}):jk(b)}).m(function(){jk(b)})}};ek.prototype.unsubscribe=function(a){w(this.h,function(b){return b==a})};\nek.prototype.o=function(a){if(!a)throw new M(\"invalid-auth-event\");for(var b=!1,c=0;c<this.h.length;c++){var d=this.h[c];if(d.qb(a.b,a.c)){(b=this.b[a.b])&&b.h(a,d);b=!0;break}}lk(this.c);return b};var mk=new ze(2E3,1E4),nk=new ze(3E4,6E4);ek.prototype.da=function(){return this.c.da()};function ok(a,b,c,d,e,f){return a.a.xb(b,c,d,function(){a.f||(a.f=!0,a.a.va(a.j))},function(){a.reset()},e,f)}function kk(a){return a&&\"auth/cordova-not-ready\"==a.code?!0:!1}\nek.prototype.Ba=function(a,b,c){var d=this,e;return bk(this.g).then(function(){return d.a.Ba(a,b,c).m(function(a){if(kk(a))throw new M(\"operation-not-supported-in-this-environment\");e=a;return ck(d.g).then(function(){throw e;})}).then(function(){return d.a.Lb()?new z(function(){}):ck(d.g).then(function(){return d.da()}).then(function(){}).m(function(){})})})};ek.prototype.Da=function(a,b,c,d){return this.a.Da(c,function(c){a.ga(b,null,c,d)},mk.get())};var pk={};\nfunction qk(a,b,c){var d=b+\":\"+c;pk[d]||(pk[d]=new ek(a,b,c));return pk[d]}function fk(){this.b=null;this.f=[];this.c=[];this.a=null;this.g=!1}fk.prototype.reset=function(){this.b=null;this.a&&(this.a.cancel(),this.a=null)};\nfk.prototype.h=function(a,b){if(a){this.reset();this.g=!0;var c=a.b,d=a.c,e=a.a&&\"auth/web-storage-unsupported\"==a.a.code,f=a.a&&\"auth/operation-not-supported-in-this-environment\"==a.a.code;\"unknown\"!=c||e||f?a.a?(rk(this,!0,null,a.a),A()):b.wa(c,d)?sk(this,a,b):B(new M(\"invalid-auth-event\")):(rk(this,!1,null,null),A())}else B(new M(\"invalid-auth-event\"))};function lk(a){a.g||(a.g=!0,rk(a,!1,null,null))}\nfunction sk(a,b,c){c=c.wa(b.b,b.c);var d=b.f,e=b.g,f=!!b.b.match(/Redirect$/);c(d,e).then(function(b){rk(a,f,b,null)}).m(function(b){rk(a,f,null,b)})}function tk(a,b){a.b=function(){return B(b)};if(a.c.length)for(var c=0;c<a.c.length;c++)a.c[c](b)}function uk(a,b){a.b=function(){return A(b)};if(a.f.length)for(var c=0;c<a.f.length;c++)a.f[c](b)}function rk(a,b,c,d){b?d?tk(a,d):uk(a,c):uk(a,{user:null});a.f=[];a.c=[]}\nfk.prototype.da=function(){var a=this;return new z(function(b,c){a.b?a.b().then(b,c):(a.f.push(b),a.c.push(c),vk(a))})};function vk(a){var b=new M(\"timeout\");a.a&&a.a.cancel();a.a=Fc(nk.get()).then(function(){a.b||rk(a,!0,null,b)})}function gk(){}gk.prototype.h=function(a,b){if(a){var c=a.b,d=a.c;a.a?(b.ga(a.b,null,a.a,a.c),A()):b.wa(c,d)?wk(a,b):B(new M(\"invalid-auth-event\"))}else B(new M(\"invalid-auth-event\"))};\nfunction wk(a,b){var c=a.c,d=a.b;b.wa(d,c)(a.f,a.g).then(function(a){b.ga(d,a,null,c)}).m(function(a){b.ga(d,null,a,c)})};function xk(a,b){this.a=b;K(this,\"verificationId\",a)}xk.prototype.confirm=function(a){a=hg(this.verificationId,a);return this.a(a)};function yk(a,b,c,d){return(new fg(a)).Sa(b,c).then(function(a){return new xk(a,d)})};function zk(a){var b=pf(a);if(!(b&&b.exp&&b.auth_time&&b.iat))throw new M(\"internal-error\",\"An internal error occurred. The token obtained by Firebase appears to be malformed. Please retry the operation.\");L(this,{token:a,expirationTime:Ce(1E3*b.exp),authTime:Ce(1E3*b.auth_time),issuedAtTime:Ce(1E3*b.iat),signInProvider:b.firebase&&b.firebase.sign_in_provider?b.firebase.sign_in_provider:null,claims:b})};function Ak(a,b,c){this.h=a;this.j=b;this.g=c;this.c=3E4;this.f=96E4;this.b=null;this.a=this.c;if(this.f<this.c)throw Error(\"Proactive refresh lower bound greater than upper bound!\");}Ak.prototype.start=function(){this.a=this.c;Bk(this,!0)};function Ck(a,b){if(b)return a.a=a.c,a.g();b=a.a;a.a*=2;a.a>a.f&&(a.a=a.f);return b}function Bk(a,b){a.stop();a.b=Fc(Ck(a,b)).then(function(){return Be()}).then(function(){return a.h()}).then(function(){Bk(a,!0)}).m(function(b){a.j(b)&&Bk(a,!1)})}\nAk.prototype.stop=function(){this.b&&(this.b.cancel(),this.b=null)};function Dk(a){this.f=a;this.b=this.a=null;this.c=0}Dk.prototype.C=function(){return{apiKey:this.f.b,refreshToken:this.a,accessToken:this.b,expirationTime:this.c}};function Ek(a,b){var c=b[Gf],d=b.refreshToken;b=Fk(b.expiresIn);a.b=c;a.c=b;a.a=d}function Fk(a){return na()+1E3*parseInt(a,10)}\nfunction Gk(a,b){return Jh(a.f,b).then(function(b){a.b=b.access_token;a.c=Fk(b.expires_in);a.a=b.refresh_token;return{accessToken:a.b,expirationTime:a.c,refreshToken:a.a}}).m(function(b){\"auth/user-token-expired\"==b.code&&(a.a=null);throw b;})}Dk.prototype.getToken=function(a){a=!!a;return this.b&&!this.a?B(new M(\"user-token-expired\")):a||!this.b||na()>this.c-3E4?this.a?Gk(this,{grant_type:\"refresh_token\",refresh_token:this.a}):A(null):A({accessToken:this.b,expirationTime:this.c,refreshToken:this.a})};function Hk(a,b){this.a=a||null;this.b=b||null;L(this,{lastSignInTime:Ce(b||null),creationTime:Ce(a||null)})}function Ik(a){return new Hk(a.a,a.b)}Hk.prototype.C=function(){return{lastLoginAt:this.b,createdAt:this.a}};function Jk(a,b,c,d,e,f){L(this,{uid:a,displayName:d||null,photoURL:e||null,email:c||null,phoneNumber:f||null,providerId:b})}function Kk(a,b){D.call(this,a);for(var c in b)this[c]=b[c]}t(Kk,D);\nfunction Lk(a,b,c){this.D=[];this.G=a.apiKey;this.s=a.appName;this.B=a.authDomain||null;a=firebase.SDK_VERSION?oe(firebase.SDK_VERSION):null;this.b=new xh(this.G,ui(vi),a);this.h=new Dk(this.b);Mk(this,b[Gf]);Ek(this.h,b);K(this,\"refreshToken\",this.h.a);Nk(this,c||{});G.call(this);this.I=!1;this.B&&re()&&(this.a=qk(this.B,this.G,this.s));this.N=[];this.j=null;this.l=Ok(this);this.V=r(this.Ga,this);var d=this;this.ia=null;this.sa=function(a){d.na(a.g)};this.X=null;this.O=[];this.ra=function(a){Pk(d,\na.c)};this.W=null}t(Lk,G);Lk.prototype.na=function(a){this.ia=a;Dh(this.b,a)};Lk.prototype.ca=function(){return this.ia};function Qk(a,b){a.X&&F(a.X,\"languageCodeChanged\",a.sa);(a.X=b)&&pc(b,\"languageCodeChanged\",a.sa)}function Pk(a,b){a.O=b;Eh(a.b,firebase.SDK_VERSION?oe(firebase.SDK_VERSION,a.O):null)}Lk.prototype.Ka=function(){return Ia(this.O)};function Rk(a,b){a.W&&F(a.W,\"frameworkChanged\",a.ra);(a.W=b)&&pc(b,\"frameworkChanged\",a.ra)}Lk.prototype.Ga=function(){this.l.b&&(this.l.stop(),this.l.start())};\nfunction Sk(a){try{return firebase.app(a.s).auth()}catch(b){throw new M(\"internal-error\",\"No firebase.auth.Auth instance is available for the Firebase App '\"+a.s+\"'!\");}}function Ok(a){return new Ak(function(){return a.F(!0)},function(a){return a&&\"auth/network-request-failed\"==a.code?!0:!1},function(){var b=a.h.c-na()-3E5;return 0<b?b:0})}function Tk(a){a.o||a.l.b||(a.l.start(),F(a,\"tokenChanged\",a.V),pc(a,\"tokenChanged\",a.V))}function Uk(a){F(a,\"tokenChanged\",a.V);a.l.stop()}\nfunction Mk(a,b){a.qa=b;K(a,\"_lat\",b)}function Vk(a,b){w(a.N,function(a){return a==b})}function Wk(a){for(var b=[],c=0;c<a.N.length;c++)b.push(a.N[c](a));return ub(b).then(function(){return a})}function Xk(a){a.a&&!a.I&&(a.I=!0,a.a.subscribe(a))}\nfunction Nk(a,b){L(a,{uid:b.uid,displayName:b.displayName||null,photoURL:b.photoURL||null,email:b.email||null,emailVerified:b.emailVerified||!1,phoneNumber:b.phoneNumber||null,isAnonymous:b.isAnonymous||!1,metadata:new Hk(b.createdAt,b.lastLoginAt),providerData:[]})}K(Lk.prototype,\"providerId\",\"firebase\");function Yk(){}function Zk(a){return A().then(function(){if(a.o)throw new M(\"app-deleted\");})}function $k(a){return Ba(a.providerData,function(a){return a.providerId})}\nfunction al(a,b){b&&(bl(a,b.providerId),a.providerData.push(b))}function bl(a,b){w(a.providerData,function(a){return a.providerId==b})}function cl(a,b,c){(\"uid\"!=b||c)&&a.hasOwnProperty(b)&&K(a,b,c)}\nfunction dl(a,b){a!=b&&(L(a,{uid:b.uid,displayName:b.displayName,photoURL:b.photoURL,email:b.email,emailVerified:b.emailVerified,phoneNumber:b.phoneNumber,isAnonymous:b.isAnonymous,providerData:[]}),b.metadata?K(a,\"metadata\",Ik(b.metadata)):K(a,\"metadata\",new Hk),v(b.providerData,function(b){al(a,b)}),a.h=b.h,K(a,\"refreshToken\",a.h.a))}g=Lk.prototype;g.reload=function(){var a=this;return R(this,Zk(this).then(function(){return el(a).then(function(){return Wk(a)}).then(Yk)}))};\nfunction el(a){return a.F().then(function(b){var c=a.isAnonymous;return fl(a,b).then(function(){c||cl(a,\"isAnonymous\",!1);return b})})}g.ac=function(a){return this.F(a).then(function(a){return new zk(a)})};g.F=function(a){var b=this;return R(this,Zk(this).then(function(){return b.h.getToken(a)}).then(function(a){if(!a)throw new M(\"internal-error\");a.accessToken!=b.qa&&(Mk(b,a.accessToken),b.dispatchEvent(new Kk(\"tokenChanged\")));cl(b,\"refreshToken\",a.refreshToken);return a.accessToken}))};\ng.getToken=function(a){Ee[\"firebase.User.prototype.getToken is deprecated. Please use firebase.User.prototype.getIdToken instead.\"]||(Ee[\"firebase.User.prototype.getToken is deprecated. Please use firebase.User.prototype.getIdToken instead.\"]=!0,\"undefined\"!==typeof console&&\"function\"===typeof console.warn&&console.warn(\"firebase.User.prototype.getToken is deprecated. Please use firebase.User.prototype.getIdToken instead.\"));return this.F(a)};\nfunction gl(a,b){b[Gf]&&a.qa!=b[Gf]&&(Ek(a.h,b),a.dispatchEvent(new Kk(\"tokenChanged\")),Mk(a,b[Gf]),cl(a,\"refreshToken\",a.h.a))}function fl(a,b){return P(a.b,qi,{idToken:b}).then(r(a.uc,a))}\ng.uc=function(a){a=a.users;if(!a||!a.length)throw new M(\"internal-error\");a=a[0];Nk(this,{uid:a.localId,displayName:a.displayName,photoURL:a.photoUrl,email:a.email,emailVerified:!!a.emailVerified,phoneNumber:a.phoneNumber,lastLoginAt:a.lastLoginAt,createdAt:a.createdAt});for(var b=hl(a),c=0;c<b.length;c++)al(this,b[c]);cl(this,\"isAnonymous\",!(this.email&&a.passwordHash)&&!(this.providerData&&this.providerData.length))};\nfunction hl(a){return(a=a.providerUserInfo)&&a.length?Ba(a,function(a){return new Jk(a.rawId,a.providerId,a.email,a.displayName,a.photoUrl,a.phoneNumber)}):[]}g.bb=function(a){var b=this,c=null;return R(this,a.f(this.b,this.uid).then(function(a){gl(b,a);c=il(b,a,\"reauthenticate\");b.j=null;return b.reload()}).then(function(){return c}),!0)};g.vc=function(a){return this.bb(a).then(function(){})};\nfunction jl(a,b){return el(a).then(function(){if(Fa($k(a),b))return Wk(a).then(function(){throw new M(\"provider-already-linked\");})})}g.$a=function(a){var b=this,c=null;return R(this,jl(this,a.providerId).then(function(){return b.F()}).then(function(c){return a.c(b.b,c)}).then(function(a){c=il(b,a,\"link\");return kl(b,a)}).then(function(){return c}))};g.mc=function(a){return this.$a(a).then(function(a){return a.user})};\ng.nc=function(a,b){var c=this;return R(this,jl(this,\"phone\").then(function(){return yk(Sk(c),a,b,r(c.$a,c))}))};g.wc=function(a,b){var c=this;return R(this,A().then(function(){return yk(Sk(c),a,b,r(c.bb,c))}),!0)};function il(a,b,c){var d=ig(b);b=uf(b);return He({user:a,credential:d,additionalUserInfo:b,operationType:c})}function kl(a,b){gl(a,b);return a.reload().then(function(){return a})}\ng.mb=function(a){var b=this;return R(this,this.F().then(function(c){return b.b.mb(c,a)}).then(function(a){gl(b,a);return b.reload()}))};g.Nc=function(a){var b=this;return R(this,this.F().then(function(c){return a.c(b.b,c)}).then(function(a){gl(b,a);return b.reload()}))};g.nb=function(a){var b=this;return R(this,this.F().then(function(c){return b.b.nb(c,a)}).then(function(a){gl(b,a);return b.reload()}))};\ng.ob=function(a){if(void 0===a.displayName&&void 0===a.photoURL)return Zk(this);var b=this;return R(this,this.F().then(function(c){return b.b.ob(c,{displayName:a.displayName,photoUrl:a.photoURL})}).then(function(a){gl(b,a);cl(b,\"displayName\",a.displayName||null);cl(b,\"photoURL\",a.photoUrl||null);v(b.providerData,function(a){\"password\"===a.providerId&&(K(a,\"displayName\",b.displayName),K(a,\"photoURL\",b.photoURL))});return Wk(b)}).then(Yk))};\ng.Mc=function(a){var b=this;return R(this,el(this).then(function(c){return Fa($k(b),a)?ci(b.b,c,[a]).then(function(a){var c={};v(a.providerUserInfo||[],function(a){c[a.providerId]=!0});v($k(b),function(a){c[a]||bl(b,a)});c[fg.PROVIDER_ID]||K(b,\"phoneNumber\",null);return Wk(b)}):Wk(b).then(function(){throw new M(\"no-such-provider\");})}))};\ng.delete=function(){var a=this;return R(this,this.F().then(function(b){return P(a.b,pi,{idToken:b})}).then(function(){a.dispatchEvent(new Kk(\"userDeleted\"))})).then(function(){for(var b=0;b<a.D.length;b++)a.D[b].cancel(\"app-deleted\");Qk(a,null);Rk(a,null);a.D=[];a.o=!0;Uk(a);K(a,\"refreshToken\",null);a.a&&a.a.unsubscribe(a)})};\ng.qb=function(a,b){return\"linkViaPopup\"==a&&(this.g||null)==b&&this.f||\"reauthViaPopup\"==a&&(this.g||null)==b&&this.f||\"linkViaRedirect\"==a&&(this.$||null)==b||\"reauthViaRedirect\"==a&&(this.$||null)==b?!0:!1};g.ga=function(a,b,c,d){\"linkViaPopup\"!=a&&\"reauthViaPopup\"!=a||d!=(this.g||null)||(c&&this.v?this.v(c):b&&!c&&this.f&&this.f(b),this.c&&(this.c.cancel(),this.c=null),delete this.f,delete this.v)};\ng.wa=function(a,b){return\"linkViaPopup\"==a&&b==(this.g||null)?r(this.vb,this):\"reauthViaPopup\"==a&&b==(this.g||null)?r(this.wb,this):\"linkViaRedirect\"==a&&(this.$||null)==b?r(this.vb,this):\"reauthViaRedirect\"==a&&(this.$||null)==b?r(this.wb,this):null};g.oc=function(a){var b=this;return ll(this,\"linkViaPopup\",a,function(){return jl(b,a.providerId).then(function(){return Wk(b)})},!1)};g.xc=function(a){return ll(this,\"reauthViaPopup\",a,function(){return A()},!0)};\nfunction ll(a,b,c,d,e){if(!re())return B(new M(\"operation-not-supported-in-this-environment\"));if(a.j&&!e)return B(a.j);var f=tf(c.providerId),h=qe(a.uid+\":::\"),m=null;(!te()||je())&&a.B&&c.isOAuthProvider&&(m=Oi(a.B,a.G,a.s,b,c,null,h,firebase.SDK_VERSION||null));var p=be(m,f&&f.Aa,f&&f.za);d=d().then(function(){ml(a);if(!e)return a.F().then(function(){})}).then(function(){return ok(a.a,p,b,c,h,!!m)}).then(function(){return new z(function(c,d){a.ga(b,null,new M(\"cancelled-popup-request\"),a.g||null);\na.f=c;a.v=d;a.g=h;a.c=a.a.Da(a,b,p,h)})}).then(function(a){p&&ae(p);return a?He(a):null}).m(function(a){p&&ae(p);throw a;});return R(a,d,e)}g.pc=function(a){var b=this;return nl(this,\"linkViaRedirect\",a,function(){return jl(b,a.providerId)},!1)};g.yc=function(a){return nl(this,\"reauthViaRedirect\",a,function(){return A()},!0)};\nfunction nl(a,b,c,d,e){if(!re())return B(new M(\"operation-not-supported-in-this-environment\"));if(a.j&&!e)return B(a.j);var f=null,h=qe(a.uid+\":::\");d=d().then(function(){ml(a);if(!e)return a.F().then(function(){})}).then(function(){a.$=h;return Wk(a)}).then(function(b){a.fa&&(b=a.fa,b=b.b.set(ol,a.C(),b.a));return b}).then(function(){return a.a.Ba(b,c,h)}).m(function(b){f=b;if(a.fa)return pl(a.fa);throw f;}).then(function(){if(f)throw f;});return R(a,d,e)}\nfunction ml(a){if(!a.a||!a.I){if(a.a&&!a.I)throw new M(\"internal-error\");throw new M(\"auth-domain-config-required\");}}g.vb=function(a,b){var c=this;this.c&&(this.c.cancel(),this.c=null);var d=null,e=this.F().then(function(d){return Kf(c.b,{requestUri:a,sessionId:b,idToken:d})}).then(function(a){d=il(c,a,\"link\");return kl(c,a)}).then(function(){return d});return R(this,e)};\ng.wb=function(a,b){var c=this;this.c&&(this.c.cancel(),this.c=null);var d=null,e=A().then(function(){return Ff(Lf(c.b,{requestUri:a,sessionId:b}),c.uid)}).then(function(a){d=il(c,a,\"reauthenticate\");gl(c,a);c.j=null;return c.reload()}).then(function(){return d});return R(this,e,!0)};g.fb=function(a){var b=this,c=null;return R(this,this.F().then(function(b){c=b;return\"undefined\"===typeof a||Ya(a)?{}:ff(new Xe(a))}).then(function(a){return b.b.fb(c,a)}).then(function(a){if(b.email!=a)return b.reload()}).then(function(){}))};\nfunction R(a,b,c){var d=ql(a,b,c);a.D.push(d);d.ha(function(){Ga(a.D,d)});return d}function ql(a,b,c){return a.j&&!c?(b.cancel(),B(a.j)):b.m(function(b){!b||\"auth/user-disabled\"!=b.code&&\"auth/user-token-expired\"!=b.code||(a.j||a.dispatchEvent(new Kk(\"userInvalidated\")),a.j=b);throw b;})}g.toJSON=function(){return this.C()};\ng.C=function(){var a={uid:this.uid,displayName:this.displayName,photoURL:this.photoURL,email:this.email,emailVerified:this.emailVerified,phoneNumber:this.phoneNumber,isAnonymous:this.isAnonymous,providerData:[],apiKey:this.G,appName:this.s,authDomain:this.B,stsTokenManager:this.h.C(),redirectEventId:this.$||null};this.metadata&&ab(a,this.metadata.C());v(this.providerData,function(b){a.providerData.push(Ie(b))});return a};\nfunction rl(a){if(!a.apiKey)return null;var b={apiKey:a.apiKey,authDomain:a.authDomain,appName:a.appName},c={};if(a.stsTokenManager&&a.stsTokenManager.accessToken&&a.stsTokenManager.expirationTime)c[Gf]=a.stsTokenManager.accessToken,c.refreshToken=a.stsTokenManager.refreshToken||null,c.expiresIn=(a.stsTokenManager.expirationTime-na())/1E3;else return null;var d=new Lk(b,c,a);a.providerData&&v(a.providerData,function(a){a&&al(d,He(a))});a.redirectEventId&&(d.$=a.redirectEventId);return d}\nfunction sl(a,b,c,d){var e=new Lk(a,b);c&&(e.fa=c);d&&Pk(e,d);return e.reload().then(function(){return e})};function tl(a){this.a=a;this.b=sj()}var ol={name:\"redirectUser\",w:\"session\"};function pl(a){return wj(a.b,ol,a.a)}function ul(a,b){return a.b.get(ol,a.a).then(function(a){a&&b&&(a.authDomain=b);return rl(a||{})})};function vl(a){this.a=a;this.b=sj();this.c=null;this.f=wl(this);this.b.addListener(xl(\"local\"),this.a,r(this.g,this))}vl.prototype.g=function(){var a=this,b=xl(\"local\");yl(this,function(){return A().then(function(){return a.c&&\"local\"!=a.c.w?a.b.get(b,a.a):null}).then(function(c){if(c)return zl(a,\"local\").then(function(){a.c=b})})})};function zl(a,b){var c=[],d;for(d in oj)oj[d]!==b&&c.push(wj(a.b,xl(oj[d]),a.a));c.push(wj(a.b,Al,a.a));return tb(c)}\nfunction wl(a){var b=xl(\"local\"),c=xl(\"session\"),d=xl(\"none\");return vj(a.b,b,a.a).then(function(){return a.b.get(c,a.a)}).then(function(e){return e?c:a.b.get(d,a.a).then(function(c){return c?d:a.b.get(b,a.a).then(function(c){return c?b:a.b.get(Al,a.a).then(function(a){return a?xl(a):b})})})}).then(function(b){a.c=b;return zl(a,b.w)}).m(function(){a.c||(a.c=b)})}var Al={name:\"persistence\",w:\"session\"};function xl(a){return{name:\"authUser\",w:a}}\nvl.prototype.ib=function(a){var b=null,c=this;pj(a);return yl(this,function(){return a!=c.c.w?c.b.get(c.c,c.a).then(function(d){b=d;return zl(c,a)}).then(function(){c.c=xl(a);if(b)return c.b.set(c.c,b,c.a)}):A()})};function Bl(a){return yl(a,function(){return a.b.set(Al,a.c.w,a.a)})}function Cl(a,b){return yl(a,function(){return a.b.set(a.c,b.C(),a.a)})}function Dl(a){return yl(a,function(){return wj(a.b,a.c,a.a)})}\nfunction Fl(a,b){return yl(a,function(){return a.b.get(a.c,a.a).then(function(a){a&&b&&(a.authDomain=b);return rl(a||{})})})}function yl(a,b){a.f=a.f.then(b,b);return a.f};function Gl(a){this.l=!1;K(this,\"app\",a);if(S(this).options&&S(this).options.apiKey)a=firebase.SDK_VERSION?oe(firebase.SDK_VERSION):null,this.b=new xh(S(this).options&&S(this).options.apiKey,ui(vi),a);else throw new M(\"invalid-api-key\");this.N=[];this.o=[];this.I=[];this.Ob=firebase.INTERNAL.createSubscribe(r(this.ic,this));this.O=void 0;this.Pb=firebase.INTERNAL.createSubscribe(r(this.jc,this));Hl(this,null);this.h=new vl(S(this).options.apiKey+\":\"+S(this).name);this.G=new tl(S(this).options.apiKey+\n\":\"+S(this).name);this.V=T(this,Il(this));this.j=T(this,Jl(this));this.X=!1;this.ia=r(this.Ic,this);this.Ga=r(this.ka,this);this.qa=r(this.Yb,this);this.ra=r(this.gc,this);this.sa=r(this.hc,this);Kl(this);this.INTERNAL={};this.INTERNAL[\"delete\"]=r(this.delete,this);this.INTERNAL.logFramework=r(this.qc,this);this.s=0;G.call(this);Ll(this);this.D=[]}t(Gl,G);function Ml(a){D.call(this,\"languageCodeChanged\");this.g=a}t(Ml,D);function Nl(a){D.call(this,\"frameworkChanged\");this.c=a}t(Nl,D);g=Gl.prototype;\ng.ib=function(a){a=this.h.ib(a);return T(this,a)};g.na=function(a){this.W===a||this.l||(this.W=a,Dh(this.b,this.W),this.dispatchEvent(new Ml(this.ca())))};g.ca=function(){return this.W};g.Oc=function(){var a=k.navigator;this.na(a?a.languages&&a.languages[0]||a.language||a.userLanguage||null:null)};g.qc=function(a){this.D.push(a);Eh(this.b,firebase.SDK_VERSION?oe(firebase.SDK_VERSION,this.D):null);this.dispatchEvent(new Nl(this.D))};g.Ka=function(){return Ia(this.D)};\nfunction Ll(a){Object.defineProperty(a,\"lc\",{get:function(){return this.ca()},set:function(a){this.na(a)},enumerable:!1});a.W=null}g.toJSON=function(){return{apiKey:S(this).options.apiKey,authDomain:S(this).options.authDomain,appName:S(this).name,currentUser:U(this)&&U(this).C()}};function Ol(a){return a.Nb||B(new M(\"auth-domain-config-required\"))}\nfunction Kl(a){var b=S(a).options.authDomain,c=S(a).options.apiKey;b&&re()&&(a.Nb=a.V.then(function(){if(!a.l){a.a=qk(b,c,S(a).name);a.a.subscribe(a);U(a)&&Xk(U(a));if(a.B){Xk(a.B);var d=a.B;d.na(a.ca());Qk(d,a);d=a.B;Pk(d,a.D);Rk(d,a);a.B=null}return a.a}}))}g.qb=function(a,b){switch(a){case \"unknown\":case \"signInViaRedirect\":return!0;case \"signInViaPopup\":return this.g==b&&!!this.f;default:return!1}};\ng.ga=function(a,b,c,d){\"signInViaPopup\"==a&&this.g==d&&(c&&this.v?this.v(c):b&&!c&&this.f&&this.f(b),this.c&&(this.c.cancel(),this.c=null),delete this.f,delete this.v)};g.wa=function(a,b){return\"signInViaRedirect\"==a||\"signInViaPopup\"==a&&this.g==b&&this.f?r(this.Xb,this):null};\ng.Xb=function(a,b){var c=this;a={requestUri:a,sessionId:b};this.c&&(this.c.cancel(),this.c=null);var d=null,e=null,f=If(c.b,a).then(function(a){d=ig(a);e=uf(a);return a});a=c.V.then(function(){return f}).then(function(a){return Pl(c,a)}).then(function(){return He({user:U(c),credential:d,additionalUserInfo:e,operationType:\"signIn\"})});return T(this,a)};\ng.Gc=function(a){if(!re())return B(new M(\"operation-not-supported-in-this-environment\"));var b=this,c=tf(a.providerId),d=qe(),e=null;(!te()||je())&&S(this).options.authDomain&&a.isOAuthProvider&&(e=Oi(S(this).options.authDomain,S(this).options.apiKey,S(this).name,\"signInViaPopup\",a,null,d,firebase.SDK_VERSION||null));var f=be(e,c&&c.Aa,c&&c.za);c=Ol(this).then(function(b){return ok(b,f,\"signInViaPopup\",a,d,!!e)}).then(function(){return new z(function(a,c){b.ga(\"signInViaPopup\",null,new M(\"cancelled-popup-request\"),\nb.g);b.f=a;b.v=c;b.g=d;b.c=b.a.Da(b,\"signInViaPopup\",f,d)})}).then(function(a){f&&ae(f);return a?He(a):null}).m(function(a){f&&ae(f);throw a;});return T(this,c)};g.Hc=function(a){if(!re())return B(new M(\"operation-not-supported-in-this-environment\"));var b=this,c=Ol(this).then(function(){return Bl(b.h)}).then(function(){return b.a.Ba(\"signInViaRedirect\",a)});return T(this,c)};\ng.da=function(){if(!re())return B(new M(\"operation-not-supported-in-this-environment\"));var a=this,b=Ol(this).then(function(){return a.a.da()}).then(function(a){return a?He(a):null});return T(this,b)};function Pl(a,b){var c={};c.apiKey=S(a).options.apiKey;c.authDomain=S(a).options.authDomain;c.appName=S(a).name;return a.V.then(function(){return sl(c,b,a.G,a.Ka())}).then(function(b){if(U(a)&&b.uid==U(a).uid)return dl(U(a),b),a.ka(b);Hl(a,b);Xk(b);return a.ka(b)}).then(function(){Ql(a)})}\nfunction Hl(a,b){U(a)&&(Vk(U(a),a.Ga),F(U(a),\"tokenChanged\",a.qa),F(U(a),\"userDeleted\",a.ra),F(U(a),\"userInvalidated\",a.sa),Uk(U(a)));b&&(b.N.push(a.Ga),pc(b,\"tokenChanged\",a.qa),pc(b,\"userDeleted\",a.ra),pc(b,\"userInvalidated\",a.sa),0<a.s&&Tk(b));K(a,\"currentUser\",b);b&&(b.na(a.ca()),Qk(b,a),Pk(b,a.D),Rk(b,a))}g.kb=function(){var a=this,b=this.j.then(function(){if(!U(a))return A();Hl(a,null);return Dl(a.h).then(function(){Ql(a)})});return T(this,b)};\nfunction Rl(a){var b=ul(a.G,S(a).options.authDomain).then(function(b){if(a.B=b)b.fa=a.G;return pl(a.G)});return T(a,b)}function Il(a){var b=S(a).options.authDomain,c=Rl(a).then(function(){return Fl(a.h,b)}).then(function(b){return b?(b.fa=a.G,a.B&&(a.B.$||null)==(b.$||null)?b:b.reload().then(function(){return Cl(a.h,b).then(function(){return b})}).m(function(c){return\"auth/network-request-failed\"==c.code?b:Dl(a.h)})):null}).then(function(b){Hl(a,b||null)});return T(a,c)}\nfunction Jl(a){return a.V.then(function(){return a.da()}).m(function(){}).then(function(){if(!a.l)return a.ia()}).m(function(){}).then(function(){if(!a.l){a.X=!0;var b=a.h;b.b.addListener(xl(\"local\"),b.a,a.ia)}})}\ng.Ic=function(){var a=this;return Fl(this.h,S(this).options.authDomain).then(function(b){if(!a.l){var c;if(c=U(a)&&b){c=U(a).uid;var d=b.uid;c=void 0===c||null===c||\"\"===c||void 0===d||null===d||\"\"===d?!1:c==d}if(c)return dl(U(a),b),U(a).F();if(U(a)||b)Hl(a,b),b&&(Xk(b),b.fa=a.G),a.a&&a.a.subscribe(a),Ql(a)}})};g.ka=function(a){return Cl(this.h,a)};g.Yb=function(){Ql(this);this.ka(U(this))};g.gc=function(){this.kb()};g.hc=function(){this.kb()};\nfunction Sl(a,b){var c=null,d=null;return T(a,b.then(function(b){c=ig(b);d=uf(b);return Pl(a,b)}).then(function(){return He({user:U(a),credential:c,additionalUserInfo:d,operationType:\"signIn\"})}))}g.ic=function(a){var b=this;this.addAuthTokenListener(function(){a.next(U(b))})};g.jc=function(a){var b=this;Tl(this,function(){a.next(U(b))})};g.sc=function(a,b,c){var d=this;this.X&&firebase.Promise.resolve().then(function(){n(a)?a(U(d)):n(a.next)&&a.next(U(d))});return this.Ob(a,b,c)};\ng.rc=function(a,b,c){var d=this;this.X&&firebase.Promise.resolve().then(function(){d.O=d.getUid();n(a)?a(U(d)):n(a.next)&&a.next(U(d))});return this.Pb(a,b,c)};g.$b=function(a){var b=this,c=this.j.then(function(){return U(b)?U(b).F(a).then(function(a){return{accessToken:a}}):null});return T(this,c)};g.Cc=function(a){return this.Hb(a).then(function(a){return a.user})};\ng.Hb=function(a){var b=this;return this.j.then(function(){return Sl(b,P(b.b,si,{token:a}))}).then(function(a){var c=a.user;cl(c,\"isAnonymous\",!1);b.ka(c);return a})};g.Ib=function(a,b){var c=this;return this.j.then(function(){return Sl(c,P(c.b,Xf,{email:a,password:b}))})};g.Dc=function(a,b){return this.Ib(a,b).then(function(a){return a.user})};g.Sb=function(a,b){return this.sb(a,b).then(function(a){return a.user})};\ng.sb=function(a,b){var c=this;return this.j.then(function(){return Sl(c,P(c.b,oi,{email:a,password:b}))})};g.Bc=function(a){return this.Oa(a).then(function(a){return a.user})};g.Oa=function(a){var b=this;return this.j.then(function(){return Sl(b,a.xa(b.b))})};g.jb=function(){return this.Jb().then(function(a){return a.user})};\ng.Jb=function(){var a=this;return this.j.then(function(){var b=U(a);if(b&&b.isAnonymous){var c=He({providerId:null,isNewUser:!1});return He({user:b,credential:null,additionalUserInfo:c,operationType:\"signIn\"})}return Sl(a,a.b.jb()).then(function(b){var c=b.user;cl(c,\"isAnonymous\",!0);a.ka(c);return b})})};function S(a){return a.app}function U(a){return a.currentUser}g.getUid=function(){return U(this)&&U(this).uid||null};function Ul(a){return U(a)&&U(a)._lat||null}\nfunction Ql(a){if(a.X){for(var b=0;b<a.o.length;b++)if(a.o[b])a.o[b](Ul(a));if(a.O!==a.getUid()&&a.I.length)for(a.O=a.getUid(),b=0;b<a.I.length;b++)if(a.I[b])a.I[b](Ul(a))}}g.Qb=function(a){this.addAuthTokenListener(a);this.s++;0<this.s&&U(this)&&Tk(U(this))};g.zc=function(a){var b=this;v(this.o,function(c){c==a&&b.s--});0>this.s&&(this.s=0);0==this.s&&U(this)&&Uk(U(this));this.removeAuthTokenListener(a)};\ng.addAuthTokenListener=function(a){var b=this;this.o.push(a);T(this,this.j.then(function(){b.l||Fa(b.o,a)&&a(Ul(b))}))};g.removeAuthTokenListener=function(a){w(this.o,function(b){return b==a})};function Tl(a,b){a.I.push(b);T(a,a.j.then(function(){!a.l&&Fa(a.I,b)&&a.O!==a.getUid()&&(a.O=a.getUid(),b(Ul(a)))}))}\ng.delete=function(){this.l=!0;for(var a=0;a<this.N.length;a++)this.N[a].cancel(\"app-deleted\");this.N=[];this.h&&(a=this.h,a.b.removeListener(xl(\"local\"),a.a,this.ia));this.a&&this.a.unsubscribe(this);return firebase.Promise.resolve()};function T(a,b){a.N.push(b);b.ha(function(){Ga(a.N,b)});return b}g.Vb=function(a){return T(this,Oh(this.b,a))};g.Wb=function(a){return T(this,Qh(this.b,a))};g.kc=function(a){return!!ag(a)};\ng.hb=function(a,b){var c=this;return T(this,A().then(function(){var a=new Xe(b);if(!a.c)throw new M(\"argument-error\",ef+\" must be true when sending sign in link to email\");return ff(a)}).then(function(b){return c.b.hb(a,b)}).then(function(){}))};g.Pc=function(a){return this.Ia(a).then(function(a){return a.data.email})};g.Wa=function(a,b){return T(this,this.b.Wa(a,b).then(function(){}))};g.Ia=function(a){return T(this,this.b.Ia(a).then(function(a){return new Le(a)}))};\ng.Ua=function(a){return T(this,this.b.Ua(a).then(function(){}))};g.gb=function(a,b){var c=this;return T(this,A().then(function(){return\"undefined\"===typeof b||Ya(b)?{}:ff(new Xe(b))}).then(function(b){return c.b.gb(a,b)}).then(function(){}))};g.Fc=function(a,b){return T(this,yk(this,a,b,r(this.Oa,this)))};g.Ec=function(a,b){var c=this;return T(this,A().then(function(){var d=$f(a,b||Ud());return c.Oa(d)}))};function Vl(a,b,c,d,e,f){K(this,\"type\",\"recaptcha\");this.b=this.c=null;this.o=!1;this.l=b;this.a=c||{theme:\"light\",type:\"image\"};this.g=[];if(this.a[Wl])throw new M(\"argument-error\",\"sitekey should not be provided for reCAPTCHA as one is automatically provisioned for the current project.\");this.h=\"invisible\"===this.a[Xl];if(!k.document)throw new M(\"operation-not-supported-in-this-environment\",\"RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment with DOM support.\");if(!Hd(b)||!this.h&&\nHd(b).hasChildNodes())throw new M(\"argument-error\",\"reCAPTCHA container is either not found or already contains inner elements!\");this.u=new xh(a,f||null,e||null);this.s=d||function(){return null};var h=this;this.j=[];var m=this.a[Yl];this.a[Yl]=function(a){Zl(h,a);if(\"function\"===typeof m)m(a);else if(\"string\"===typeof m){var b=J(m,k);\"function\"===typeof b&&b(a)}};var p=this.a[$l];this.a[$l]=function(){Zl(h,null);if(\"function\"===typeof p)p();else if(\"string\"===typeof p){var a=J(p,k);\"function\"===\ntypeof a&&a()}}}var Yl=\"callback\",$l=\"expired-callback\",Wl=\"sitekey\",Xl=\"size\";function Zl(a,b){for(var c=0;c<a.j.length;c++)try{a.j[c](b)}catch(d){}}function am(a,b){w(a.j,function(a){return a==b})}function bm(a,b){a.g.push(b);b.ha(function(){Ga(a.g,b)});return b}g=Vl.prototype;\ng.ya=function(){var a=this;return this.c?this.c:this.c=bm(this,A().then(function(){if(se()&&!ke())return fe();throw new M(\"operation-not-supported-in-this-environment\",\"RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment.\");}).then(function(){return cm(dm(),a.s())}).then(function(){return P(a.u,ri,{})}).then(function(b){a.a[Wl]=b.recaptchaSiteKey}).m(function(b){a.c=null;throw b;}))};\ng.render=function(){em(this);var a=this;return bm(this,this.ya().then(function(){if(null===a.b){var b=a.l;if(!a.h){var c=Hd(b);b=Kd(\"DIV\");c.appendChild(b)}a.b=grecaptcha.render(b,a.a)}return a.b}))};g.verify=function(){em(this);var a=this;return bm(this,this.render().then(function(b){return new z(function(c){var d=grecaptcha.getResponse(b);if(d)c(d);else{var e=function(b){b&&(am(a,e),c(b))};a.j.push(e);a.h&&grecaptcha.execute(a.b)}})}))};g.reset=function(){em(this);null!==this.b&&grecaptcha.reset(this.b)};\nfunction em(a){if(a.o)throw new M(\"internal-error\",\"RecaptchaVerifier instance has been destroyed.\");}g.clear=function(){em(this);this.o=!0;dm().b--;for(var a=0;a<this.g.length;a++)this.g[a].cancel(\"RecaptchaVerifier instance has been destroyed.\");if(!this.h){a=Hd(this.l);for(var b;b=a.firstChild;)a.removeChild(b)}};var fm=pd(\"https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit&hl=%{hl}\");\nfunction gm(){this.b=k.grecaptcha?Infinity:0;this.c=null;this.a=\"__rcb\"+Math.floor(1E6*Math.random()).toString()}var hm=new ze(3E4,6E4);\nfunction cm(a,b){return new z(function(c,d){var e=setTimeout(function(){d(new M(\"network-request-failed\"))},hm.get());if(!k.grecaptcha||b!==a.c&&!a.b){k[a.a]=function(){if(k.grecaptcha){a.c=b;var f=k.grecaptcha.render;k.grecaptcha.render=function(b,c){b=f(b,c);a.b++;return b};clearTimeout(e);c()}else clearTimeout(e),d(new M(\"internal-error\"));delete k[a.a]};var f=td(fm,{onload:a.a,hl:b||\"\"});A(ph(f)).m(function(){clearTimeout(e);d(new M(\"internal-error\",\"Unable to load external reCAPTCHA dependencies!\"))})}else clearTimeout(e),\nc()})}var im=null;function dm(){im||(im=new gm);return im}\nfunction jm(a,b,c){try{this.f=c||firebase.app()}catch(f){throw new M(\"argument-error\",\"No firebase.app.App instance is currently initialized.\");}if(this.f.options&&this.f.options.apiKey)c=this.f.options.apiKey;else throw new M(\"invalid-api-key\");var d=this,e=null;try{e=this.f.auth().Ka()}catch(f){}e=firebase.SDK_VERSION?oe(firebase.SDK_VERSION,e):null;Vl.call(this,c,a,b,function(){try{var a=d.f.auth().ca()}catch(h){a=null}return a},e,ui(vi))}t(jm,Vl);function km(a,b,c,d){a:{c=Array.prototype.slice.call(c);var e=0;for(var f=!1,h=0;h<b.length;h++)if(b[h].optional)f=!0;else{if(f)throw new M(\"internal-error\",\"Argument validator encountered a required argument after an optional argument.\");e++}f=b.length;if(c.length<e||f<c.length)d=\"Expected \"+(e==f?1==e?\"1 argument\":e+\" arguments\":e+\"-\"+f+\" arguments\")+\" but got \"+c.length+\".\";else{for(e=0;e<c.length;e++)if(f=b[e].optional&&void 0===c[e],!b[e].M(c[e])&&!f){b=b[e];if(0>e||e>=lm.length)throw new M(\"internal-error\",\n\"Argument validator received an unsupported number of arguments.\");c=lm[e];d=(d?\"\":c+\" argument \")+(b.name?'\"'+b.name+'\" ':\"\")+\"must be \"+b.K+\".\";break a}d=null}}if(d)throw new M(\"argument-error\",a+\" failed: \"+d);}var lm=\"First Second Third Fourth Fifth Sixth Seventh Eighth Ninth\".split(\" \");function V(a,b){return{name:a||\"\",K:\"a valid string\",optional:!!b,M:l}}function mm(){return{name:\"opt_forceRefresh\",K:\"a boolean\",optional:!0,M:ba}}\nfunction W(a,b){return{name:a||\"\",K:\"a valid object\",optional:!!b,M:q}}function nm(a,b){return{name:a||\"\",K:\"a function\",optional:!!b,M:n}}function om(a,b){return{name:a||\"\",K:\"null\",optional:!!b,M:ea}}function pm(){return{name:\"\",K:\"an HTML element\",optional:!1,M:function(a){return!!(a&&a instanceof Element)}}}function qm(){return{name:\"auth\",K:\"an instance of Firebase Auth\",optional:!0,M:function(a){return!!(a&&a instanceof Gl)}}}\nfunction rm(){return{name:\"app\",K:\"an instance of Firebase App\",optional:!0,M:function(a){return!!(a&&a instanceof firebase.app.App)}}}function sm(a){return{name:a?a+\"Credential\":\"credential\",K:a?\"a valid \"+a+\" credential\":\"a valid credential\",optional:!1,M:function(b){if(!b)return!1;var c=!a||b.providerId===a;return!(!b.xa||!c)}}}\nfunction tm(){return{name:\"authProvider\",K:\"a valid Auth provider\",optional:!1,M:function(a){return!!(a&&a.providerId&&a.hasOwnProperty&&a.hasOwnProperty(\"isOAuthProvider\"))}}}function um(){return{name:\"applicationVerifier\",K:\"an implementation of firebase.auth.ApplicationVerifier\",optional:!1,M:function(a){return!!(a&&l(a.type)&&n(a.verify))}}}function X(a,b,c,d){return{name:c||\"\",K:a.K+\" or \"+b.K,optional:!!d,M:function(c){return a.M(c)||b.M(c)}}};function Y(a,b){for(var c in b){var d=b[c].name;a[d]=vm(d,a[c],b[c].i)}}function Z(a,b,c,d){a[b]=vm(b,c,d)}function vm(a,b,c){function d(){var a=Array.prototype.slice.call(arguments);km(e,c,a);return b.apply(this,a)}if(!c)return b;var e=wm(a),f;for(f in b)d[f]=b[f];for(f in b.prototype)d.prototype[f]=b.prototype[f];return d}function wm(a){a=a.split(\".\");return a[a.length-1]};Y(Gl.prototype,{Ua:{name:\"applyActionCode\",i:[V(\"code\")]},Ia:{name:\"checkActionCode\",i:[V(\"code\")]},Wa:{name:\"confirmPasswordReset\",i:[V(\"code\"),V(\"newPassword\")]},Sb:{name:\"createUserWithEmailAndPassword\",i:[V(\"email\"),V(\"password\")]},sb:{name:\"createUserAndRetrieveDataWithEmailAndPassword\",i:[V(\"email\"),V(\"password\")]},Vb:{name:\"fetchProvidersForEmail\",i:[V(\"email\")]},Wb:{name:\"fetchSignInMethodsForEmail\",i:[V(\"email\")]},da:{name:\"getRedirectResult\",i:[]},kc:{name:\"isSignInWithEmailLink\",i:[V(\"emailLink\")]},\nrc:{name:\"onAuthStateChanged\",i:[X(W(),nm(),\"nextOrObserver\"),nm(\"opt_error\",!0),nm(\"opt_completed\",!0)]},sc:{name:\"onIdTokenChanged\",i:[X(W(),nm(),\"nextOrObserver\"),nm(\"opt_error\",!0),nm(\"opt_completed\",!0)]},gb:{name:\"sendPasswordResetEmail\",i:[V(\"email\"),X(W(\"opt_actionCodeSettings\",!0),om(null,!0),\"opt_actionCodeSettings\",!0)]},hb:{name:\"sendSignInLinkToEmail\",i:[V(\"email\"),W(\"actionCodeSettings\")]},ib:{name:\"setPersistence\",i:[V(\"persistence\")]},Oa:{name:\"signInAndRetrieveDataWithCredential\",\ni:[sm()]},jb:{name:\"signInAnonymously\",i:[]},Jb:{name:\"signInAnonymouslyAndRetrieveData\",i:[]},Bc:{name:\"signInWithCredential\",i:[sm()]},Cc:{name:\"signInWithCustomToken\",i:[V(\"token\")]},Hb:{name:\"signInAndRetrieveDataWithCustomToken\",i:[V(\"token\")]},Dc:{name:\"signInWithEmailAndPassword\",i:[V(\"email\"),V(\"password\")]},Ec:{name:\"signInWithEmailLink\",i:[V(\"email\"),V(\"emailLink\",!0)]},Ib:{name:\"signInAndRetrieveDataWithEmailAndPassword\",i:[V(\"email\"),V(\"password\")]},Fc:{name:\"signInWithPhoneNumber\",i:[V(\"phoneNumber\"),\num()]},Gc:{name:\"signInWithPopup\",i:[tm()]},Hc:{name:\"signInWithRedirect\",i:[tm()]},kb:{name:\"signOut\",i:[]},toJSON:{name:\"toJSON\",i:[V(null,!0)]},Oc:{name:\"useDeviceLanguage\",i:[]},Pc:{name:\"verifyPasswordResetCode\",i:[V(\"code\")]}});(function(a,b){for(var c in b){var d=b[c].name;if(d!==c){var e=b[c].Rb;Object.defineProperty(a,d,{get:function(){return this[c]},set:function(a){km(d,[e],[a],!0);this[c]=a},enumerable:!0})}}})(Gl.prototype,{lc:{name:\"languageCode\",Rb:X(V(),om(),\"languageCode\")}});\nGl.Persistence=oj;Gl.Persistence.LOCAL=\"local\";Gl.Persistence.SESSION=\"session\";Gl.Persistence.NONE=\"none\";\nY(Lk.prototype,{\"delete\":{name:\"delete\",i:[]},ac:{name:\"getIdTokenResult\",i:[mm()]},F:{name:\"getIdToken\",i:[mm()]},getToken:{name:\"getToken\",i:[mm()]},$a:{name:\"linkAndRetrieveDataWithCredential\",i:[sm()]},mc:{name:\"linkWithCredential\",i:[sm()]},nc:{name:\"linkWithPhoneNumber\",i:[V(\"phoneNumber\"),um()]},oc:{name:\"linkWithPopup\",i:[tm()]},pc:{name:\"linkWithRedirect\",i:[tm()]},bb:{name:\"reauthenticateAndRetrieveDataWithCredential\",i:[sm()]},vc:{name:\"reauthenticateWithCredential\",i:[sm()]},wc:{name:\"reauthenticateWithPhoneNumber\",\ni:[V(\"phoneNumber\"),um()]},xc:{name:\"reauthenticateWithPopup\",i:[tm()]},yc:{name:\"reauthenticateWithRedirect\",i:[tm()]},reload:{name:\"reload\",i:[]},fb:{name:\"sendEmailVerification\",i:[X(W(\"opt_actionCodeSettings\",!0),om(null,!0),\"opt_actionCodeSettings\",!0)]},toJSON:{name:\"toJSON\",i:[V(null,!0)]},Mc:{name:\"unlink\",i:[V(\"provider\")]},mb:{name:\"updateEmail\",i:[V(\"email\")]},nb:{name:\"updatePassword\",i:[V(\"password\")]},Nc:{name:\"updatePhoneNumber\",i:[sm(\"phone\")]},ob:{name:\"updateProfile\",i:[W(\"profile\")]}});\nY(z.prototype,{ha:{name:\"finally\"},m:{name:\"catch\"},then:{name:\"then\"}});Y(xk.prototype,{confirm:{name:\"confirm\",i:[V(\"verificationCode\")]}});Z(O,\"credential\",function(a,b){return new Vf(a,b)},[V(\"email\"),V(\"password\")]);Y(Nf.prototype,{ta:{name:\"addScope\",i:[V(\"scope\")]},Ca:{name:\"setCustomParameters\",i:[W(\"customOAuthParameters\")]}});Z(Nf,\"credential\",Of,[X(V(),W(),\"token\")]);Z(O,\"credentialWithLink\",$f,[V(\"email\"),V(\"emailLink\")]);\nY(Pf.prototype,{ta:{name:\"addScope\",i:[V(\"scope\")]},Ca:{name:\"setCustomParameters\",i:[W(\"customOAuthParameters\")]}});Z(Pf,\"credential\",Qf,[X(V(),W(),\"token\")]);Y(Rf.prototype,{ta:{name:\"addScope\",i:[V(\"scope\")]},Ca:{name:\"setCustomParameters\",i:[W(\"customOAuthParameters\")]}});Z(Rf,\"credential\",Sf,[X(V(),X(W(),om()),\"idToken\"),X(V(),om(),\"accessToken\",!0)]);Y(Tf.prototype,{Ca:{name:\"setCustomParameters\",i:[W(\"customOAuthParameters\")]}});Z(Tf,\"credential\",Uf,[X(V(),W(),\"token\"),V(\"secret\",!0)]);\nY(N.prototype,{ta:{name:\"addScope\",i:[V(\"scope\")]},credential:{name:\"credential\",i:[X(V(),om(),\"idToken\",!0),X(V(),om(),\"accessToken\",!0)]},Ca:{name:\"setCustomParameters\",i:[W(\"customOAuthParameters\")]}});Z(fg,\"credential\",hg,[V(\"verificationId\"),V(\"verificationCode\")]);Y(fg.prototype,{Sa:{name:\"verifyPhoneNumber\",i:[V(\"phoneNumber\"),um()]}});Y(M.prototype,{toJSON:{name:\"toJSON\",i:[V(null,!0)]}});Y(pg.prototype,{toJSON:{name:\"toJSON\",i:[V(null,!0)]}});\nY(og.prototype,{toJSON:{name:\"toJSON\",i:[V(null,!0)]}});Y(jm.prototype,{clear:{name:\"clear\",i:[]},render:{name:\"render\",i:[]},verify:{name:\"verify\",i:[]}});\n(function(){if(\"undefined\"!==typeof firebase&&firebase.INTERNAL&&firebase.INTERNAL.registerService){var a={Auth:Gl,Error:M};Z(a,\"EmailAuthProvider\",O,[]);Z(a,\"FacebookAuthProvider\",Nf,[]);Z(a,\"GithubAuthProvider\",Pf,[]);Z(a,\"GoogleAuthProvider\",Rf,[]);Z(a,\"TwitterAuthProvider\",Tf,[]);Z(a,\"OAuthProvider\",N,[V(\"providerId\")]);Z(a,\"PhoneAuthProvider\",fg,[qm()]);Z(a,\"RecaptchaVerifier\",jm,[X(V(),pm(),\"recaptchaContainer\"),W(\"recaptchaParameters\",!0),rm()]);firebase.INTERNAL.registerService(\"auth\",function(a,\nc){a=new Gl(a);c({INTERNAL:{getUid:r(a.getUid,a),getToken:r(a.$b,a),addAuthTokenListener:r(a.Qb,a),removeAuthTokenListener:r(a.zc,a)}});return a},a,function(a,c){if(\"create\"===a)try{c.auth()}catch(d){}});firebase.INTERNAL.extendNamespace({User:Lk})}else throw Error(\"Cannot find the firebase namespace; be sure to include firebase-app.js before this library.\");})();\n}).call(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/@firebase/auth/dist/auth.js\n// module id = RJVP\n// module chunks = 0","import { ErrorFactory, createSubscribe } from '@firebase/util';\nimport { __extends, __awaiter, __generator, __assign } from 'tslib';\nimport firebase from '@firebase/app';\n\n/**\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ERROR_CODES = {\r\n    AVAILABLE_IN_WINDOW: 'only-available-in-window',\r\n    AVAILABLE_IN_SW: 'only-available-in-sw',\r\n    SHOULD_BE_INHERITED: 'should-be-overriden',\r\n    BAD_SENDER_ID: 'bad-sender-id',\r\n    INCORRECT_GCM_SENDER_ID: 'incorrect-gcm-sender-id',\r\n    PERMISSION_DEFAULT: 'permission-default',\r\n    PERMISSION_BLOCKED: 'permission-blocked',\r\n    UNSUPPORTED_BROWSER: 'unsupported-browser',\r\n    NOTIFICATIONS_BLOCKED: 'notifications-blocked',\r\n    FAILED_DEFAULT_REGISTRATION: 'failed-serviceworker-registration',\r\n    SW_REGISTRATION_EXPECTED: 'sw-registration-expected',\r\n    GET_SUBSCRIPTION_FAILED: 'get-subscription-failed',\r\n    INVALID_SAVED_TOKEN: 'invalid-saved-token',\r\n    SW_REG_REDUNDANT: 'sw-reg-redundant',\r\n    TOKEN_SUBSCRIBE_FAILED: 'token-subscribe-failed',\r\n    TOKEN_SUBSCRIBE_NO_TOKEN: 'token-subscribe-no-token',\r\n    TOKEN_SUBSCRIBE_NO_PUSH_SET: 'token-subscribe-no-push-set',\r\n    TOKEN_UNSUBSCRIBE_FAILED: 'token-unsubscribe-failed',\r\n    TOKEN_UPDATE_FAILED: 'token-update-failed',\r\n    TOKEN_UPDATE_NO_TOKEN: 'token-update-no-token',\r\n    USE_SW_BEFORE_GET_TOKEN: 'use-sw-before-get-token',\r\n    INVALID_DELETE_TOKEN: 'invalid-delete-token',\r\n    DELETE_TOKEN_NOT_FOUND: 'delete-token-not-found',\r\n    DELETE_SCOPE_NOT_FOUND: 'delete-scope-not-found',\r\n    BG_HANDLER_FUNCTION_EXPECTED: 'bg-handler-function-expected',\r\n    NO_WINDOW_CLIENT_TO_MSG: 'no-window-client-to-msg',\r\n    UNABLE_TO_RESUBSCRIBE: 'unable-to-resubscribe',\r\n    NO_FCM_TOKEN_FOR_RESUBSCRIBE: 'no-fcm-token-for-resubscribe',\r\n    FAILED_TO_DELETE_TOKEN: 'failed-to-delete-token',\r\n    NO_SW_IN_REG: 'no-sw-in-reg',\r\n    BAD_SCOPE: 'bad-scope',\r\n    BAD_VAPID_KEY: 'bad-vapid-key',\r\n    BAD_SUBSCRIPTION: 'bad-subscription',\r\n    BAD_TOKEN: 'bad-token',\r\n    BAD_PUSH_SET: 'bad-push-set',\r\n    FAILED_DELETE_VAPID_KEY: 'failed-delete-vapid-key',\r\n    INVALID_PUBLIC_VAPID_KEY: 'invalid-public-vapid-key',\r\n    USE_PUBLIC_KEY_BEFORE_GET_TOKEN: 'use-public-key-before-get-token',\r\n    PUBLIC_KEY_DECRYPTION_FAILED: 'public-vapid-key-decryption-failed'\r\n};\r\nvar ERROR_MAP = (_a = {}, _a[ERROR_CODES.AVAILABLE_IN_WINDOW] = 'This method is available in a Window context.', _a[ERROR_CODES.AVAILABLE_IN_SW] = 'This method is available in a service worker ' + 'context.', _a[ERROR_CODES.SHOULD_BE_INHERITED] = 'This method should be overriden by ' + 'extended classes.', _a[ERROR_CODES.BAD_SENDER_ID] = \"Please ensure that 'messagingSenderId' is set \" +\r\n        'correctly in the options passed into firebase.initializeApp().', _a[ERROR_CODES.PERMISSION_DEFAULT] = 'The required permissions were not granted and ' + 'dismissed instead.', _a[ERROR_CODES.PERMISSION_BLOCKED] = 'The required permissions were not granted and ' + 'blocked instead.', _a[ERROR_CODES.UNSUPPORTED_BROWSER] = \"This browser doesn't support the API's \" +\r\n        'required to use the firebase SDK.', _a[ERROR_CODES.NOTIFICATIONS_BLOCKED] = 'Notifications have been blocked.', _a[ERROR_CODES.FAILED_DEFAULT_REGISTRATION] = 'We are unable to register the ' +\r\n        'default service worker. {$browserErrorMessage}', _a[ERROR_CODES.SW_REGISTRATION_EXPECTED] = 'A service worker registration was the ' + 'expected input.', _a[ERROR_CODES.GET_SUBSCRIPTION_FAILED] = 'There was an error when trying to get ' +\r\n        'any existing Push Subscriptions.', _a[ERROR_CODES.INVALID_SAVED_TOKEN] = 'Unable to access details of the saved token.', _a[ERROR_CODES.SW_REG_REDUNDANT] = 'The service worker being used for push was made ' + 'redundant.', _a[ERROR_CODES.TOKEN_SUBSCRIBE_FAILED] = 'A problem occured while subscribing the ' + 'user to FCM: {$message}', _a[ERROR_CODES.TOKEN_SUBSCRIBE_NO_TOKEN] = 'FCM returned no token when subscribing ' + 'the user to push.', _a[ERROR_CODES.TOKEN_SUBSCRIBE_NO_PUSH_SET] = 'FCM returned an invalid response ' + 'when getting an FCM token.', _a[ERROR_CODES.TOKEN_UNSUBSCRIBE_FAILED] = 'A problem occured while unsubscribing the ' + 'user from FCM: {$message}', _a[ERROR_CODES.TOKEN_UPDATE_FAILED] = 'A problem occured while updating the ' + 'user from FCM: {$message}', _a[ERROR_CODES.TOKEN_UPDATE_NO_TOKEN] = 'FCM returned no token when updating ' + 'the user to push.', _a[ERROR_CODES.USE_SW_BEFORE_GET_TOKEN] = 'The useServiceWorker() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your service worker is used.', _a[ERROR_CODES.INVALID_DELETE_TOKEN] = 'You must pass a valid token into ' +\r\n        'deleteToken(), i.e. the token from getToken().', _a[ERROR_CODES.DELETE_TOKEN_NOT_FOUND] = 'The deletion attempt for token could not ' +\r\n        'be performed as the token was not found.', _a[ERROR_CODES.DELETE_SCOPE_NOT_FOUND] = 'The deletion attempt for service worker ' +\r\n        'scope could not be performed as the scope was not found.', _a[ERROR_CODES.BG_HANDLER_FUNCTION_EXPECTED] = 'The input to ' + 'setBackgroundMessageHandler() must be a function.', _a[ERROR_CODES.NO_WINDOW_CLIENT_TO_MSG] = 'An attempt was made to message a ' + 'non-existant window client.', _a[ERROR_CODES.UNABLE_TO_RESUBSCRIBE] = 'There was an error while re-subscribing ' +\r\n        'the FCM token for push messaging. Will have to resubscribe the ' +\r\n        'user on next visit. {$message}', _a[ERROR_CODES.NO_FCM_TOKEN_FOR_RESUBSCRIBE] = 'Could not find an FCM token ' +\r\n        'and as a result, unable to resubscribe. Will have to resubscribe the ' +\r\n        'user on next visit.', _a[ERROR_CODES.FAILED_TO_DELETE_TOKEN] = 'Unable to delete the currently saved token.', _a[ERROR_CODES.NO_SW_IN_REG] = 'Even though the service worker registration was ' +\r\n        'successful, there was a problem accessing the service worker itself.', _a[ERROR_CODES.INCORRECT_GCM_SENDER_ID] = \"Please change your web app manifest's \" +\r\n        \"'gcm_sender_id' value to '103953800507' to use Firebase messaging.\", _a[ERROR_CODES.BAD_SCOPE] = 'The service worker scope must be a string with at ' +\r\n        'least one character.', _a[ERROR_CODES.BAD_VAPID_KEY] = 'The public VAPID key is not a Uint8Array with 65 bytes.', _a[ERROR_CODES.BAD_SUBSCRIPTION] = 'The subscription must be a valid ' + 'PushSubscription.', _a[ERROR_CODES.BAD_TOKEN] = 'The FCM Token used for storage / lookup was not ' +\r\n        'a valid token string.', _a[ERROR_CODES.BAD_PUSH_SET] = 'The FCM push set used for storage / lookup was not ' +\r\n        'not a valid push set string.', _a[ERROR_CODES.FAILED_DELETE_VAPID_KEY] = 'The VAPID key could not be deleted.', _a[ERROR_CODES.INVALID_PUBLIC_VAPID_KEY] = 'The public VAPID key must be a string.', _a[ERROR_CODES.PUBLIC_KEY_DECRYPTION_FAILED] = 'The public VAPID key did not equal ' + '65 bytes when decrypted.', _a);\r\nvar errorFactory = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\r\nvar _a;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_PUBLIC_VAPID_KEY = new Uint8Array([\r\n    0x04,\r\n    0x33,\r\n    0x94,\r\n    0xf7,\r\n    0xdf,\r\n    0xa1,\r\n    0xeb,\r\n    0xb1,\r\n    0xdc,\r\n    0x03,\r\n    0xa2,\r\n    0x5e,\r\n    0x15,\r\n    0x71,\r\n    0xdb,\r\n    0x48,\r\n    0xd3,\r\n    0x2e,\r\n    0xed,\r\n    0xed,\r\n    0xb2,\r\n    0x34,\r\n    0xdb,\r\n    0xb7,\r\n    0x47,\r\n    0x3a,\r\n    0x0c,\r\n    0x8f,\r\n    0xc4,\r\n    0xcc,\r\n    0xe1,\r\n    0x6f,\r\n    0x3c,\r\n    0x8c,\r\n    0x84,\r\n    0xdf,\r\n    0xab,\r\n    0xb6,\r\n    0x66,\r\n    0x3e,\r\n    0xf2,\r\n    0x0c,\r\n    0xd4,\r\n    0x8b,\r\n    0xfe,\r\n    0xe3,\r\n    0xf9,\r\n    0x76,\r\n    0x2f,\r\n    0x14,\r\n    0x1c,\r\n    0x63,\r\n    0x08,\r\n    0x6a,\r\n    0x6f,\r\n    0x2d,\r\n    0xb1,\r\n    0x1a,\r\n    0x95,\r\n    0xb0,\r\n    0xce,\r\n    0x37,\r\n    0xc0,\r\n    0x9c,\r\n    0x6e\r\n]);\r\nvar ENDPOINT = 'https://fcm.googleapis.com';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MessageParameter;\r\n(function (MessageParameter) {\r\n    MessageParameter[\"TYPE_OF_MSG\"] = \"firebase-messaging-msg-type\";\r\n    MessageParameter[\"DATA\"] = \"firebase-messaging-msg-data\";\r\n})(MessageParameter || (MessageParameter = {}));\r\nvar MessageType;\r\n(function (MessageType) {\r\n    MessageType[\"PUSH_MSG_RECEIVED\"] = \"push-msg-received\";\r\n    MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\r\n})(MessageType || (MessageType = {}));\n\n/**\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isArrayBufferEqual(a, b) {\r\n    if (a == null || b == null) {\r\n        return false;\r\n    }\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    if (a.byteLength !== b.byteLength) {\r\n        return false;\r\n    }\r\n    var viewA = new DataView(a);\r\n    var viewB = new DataView(b);\r\n    for (var i = 0; i < a.byteLength; i++) {\r\n        if (viewA.getUint8(i) !== viewB.getUint8(i)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction toBase64(arrayBuffer) {\r\n    var uint8Version = new Uint8Array(arrayBuffer);\r\n    return btoa(String.fromCharCode.apply(null, uint8Version));\r\n}\r\nfunction arrayBufferToBase64(arrayBuffer) {\r\n    var base64String = toBase64(arrayBuffer);\r\n    return base64String\r\n        .replace(/=/g, '')\r\n        .replace(/\\+/g, '-')\r\n        .replace(/\\//g, '_');\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar IIDModel = /** @class */ (function () {\r\n    function IIDModel() {\r\n    }\r\n    IIDModel.prototype.getToken = function (senderId, subscription, publicVapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var p256dh, auth, fcmSubscribeBody, applicationPubKey, headers, subscribeOptions, responseData, response, err_1, message;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        p256dh = arrayBufferToBase64(subscription.getKey('p256dh'));\r\n                        auth = arrayBufferToBase64(subscription.getKey('auth'));\r\n                        fcmSubscribeBody = \"authorized_entity=\" + senderId + \"&\" +\r\n                            (\"endpoint=\" + subscription.endpoint + \"&\") +\r\n                            (\"encryption_key=\" + p256dh + \"&\") +\r\n                            (\"encryption_auth=\" + auth);\r\n                        if (publicVapidKey !== DEFAULT_PUBLIC_VAPID_KEY) {\r\n                            applicationPubKey = arrayBufferToBase64(publicVapidKey);\r\n                            fcmSubscribeBody += \"&application_pub_key=\" + applicationPubKey;\r\n                        }\r\n                        headers = new Headers();\r\n                        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n                        subscribeOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: fcmSubscribeBody\r\n                        };\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, fetch(ENDPOINT + '/fcm/connect/subscribe', subscribeOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        responseData = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        err_1 = _a.sent();\r\n                        throw errorFactory.create(ERROR_CODES.TOKEN_SUBSCRIBE_FAILED);\r\n                    case 5:\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_SUBSCRIBE_FAILED, {\r\n                                message: message\r\n                            });\r\n                        }\r\n                        if (!responseData.token) {\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_SUBSCRIBE_NO_TOKEN);\r\n                        }\r\n                        if (!responseData.pushSet) {\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_SUBSCRIBE_NO_PUSH_SET);\r\n                        }\r\n                        return [2 /*return*/, {\r\n                                token: responseData.token,\r\n                                pushSet: responseData.pushSet\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Update the underlying token details for fcmToken.\r\n     */\r\n    IIDModel.prototype.updateToken = function (senderId, fcmToken, fcmPushSet, subscription, publicVapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var p256dh, auth, fcmUpdateBody, applicationPubKey, headers, updateOptions, responseData, response, err_2, message;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        p256dh = arrayBufferToBase64(subscription.getKey('p256dh'));\r\n                        auth = arrayBufferToBase64(subscription.getKey('auth'));\r\n                        fcmUpdateBody = \"push_set=\" + fcmPushSet + \"&\" +\r\n                            (\"token=\" + fcmToken + \"&\") +\r\n                            (\"authorized_entity=\" + senderId + \"&\") +\r\n                            (\"endpoint=\" + subscription.endpoint + \"&\") +\r\n                            (\"encryption_key=\" + p256dh + \"&\") +\r\n                            (\"encryption_auth=\" + auth);\r\n                        if (publicVapidKey !== DEFAULT_PUBLIC_VAPID_KEY) {\r\n                            applicationPubKey = arrayBufferToBase64(publicVapidKey);\r\n                            fcmUpdateBody += \"&application_pub_key=\" + applicationPubKey;\r\n                        }\r\n                        headers = new Headers();\r\n                        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n                        updateOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: fcmUpdateBody\r\n                        };\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, fetch(ENDPOINT + '/fcm/connect/subscribe', updateOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        responseData = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        err_2 = _a.sent();\r\n                        throw errorFactory.create(ERROR_CODES.TOKEN_UPDATE_FAILED);\r\n                    case 5:\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_UPDATE_FAILED, {\r\n                                message: message\r\n                            });\r\n                        }\r\n                        if (!responseData.token) {\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_UPDATE_NO_TOKEN);\r\n                        }\r\n                        return [2 /*return*/, responseData.token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Given a fcmToken, pushSet and messagingSenderId, delete an FCM token.\r\n     */\r\n    IIDModel.prototype.deleteToken = function (senderId, fcmToken, fcmPushSet) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var fcmUnsubscribeBody, headers, unsubscribeOptions, response, responseData, message, err_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        fcmUnsubscribeBody = \"authorized_entity=\" + senderId + \"&\" +\r\n                            (\"token=\" + fcmToken + \"&\") +\r\n                            (\"pushSet=\" + fcmPushSet);\r\n                        headers = new Headers();\r\n                        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n                        unsubscribeOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: fcmUnsubscribeBody\r\n                        };\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, fetch(ENDPOINT + '/fcm/connect/unsubscribe', unsubscribeOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        responseData = _a.sent();\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_UNSUBSCRIBE_FAILED, {\r\n                                message: message\r\n                            });\r\n                        }\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        err_3 = _a.sent();\r\n                        throw errorFactory.create(ERROR_CODES.TOKEN_UNSUBSCRIBE_FAILED);\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return IIDModel;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction base64ToArrayBuffer(base64String) {\r\n    var padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n    var base64 = (base64String + padding)\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n    var rawData = window.atob(base64);\r\n    var outputArray = new Uint8Array(rawData.length);\r\n    for (var i = 0; i < rawData.length; ++i) {\r\n        outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OLD_DB_NAME = 'undefined';\r\nvar OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\r\nfunction handleDb(db) {\r\n    if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\r\n        // We found a database with the name 'undefined', but our expected object\r\n        // store isn't defined.\r\n        return;\r\n    }\r\n    var transaction = db.transaction(OLD_OBJECT_STORE_NAME);\r\n    var objectStore = transaction.objectStore(OLD_OBJECT_STORE_NAME);\r\n    var iidModel = new IIDModel();\r\n    var openCursorRequest = objectStore.openCursor();\r\n    openCursorRequest.onerror = function (event) {\r\n        // NOOP - Nothing we can do.\r\n        console.warn('Unable to cleanup old IDB.', event);\r\n    };\r\n    openCursorRequest.onsuccess = function () {\r\n        var cursor = openCursorRequest.result;\r\n        if (cursor) {\r\n            // cursor.value contains the current record being iterated through\r\n            // this is where you'd do something with the result\r\n            var tokenDetails = cursor.value;\r\n            iidModel.deleteToken(tokenDetails.fcmSenderId, tokenDetails.fcmToken, tokenDetails.fcmPushSet);\r\n            cursor.continue();\r\n        }\r\n        else {\r\n            db.close();\r\n            indexedDB.deleteDatabase(OLD_DB_NAME);\r\n        }\r\n    };\r\n}\r\nfunction cleanV1() {\r\n    var request = indexedDB.open(OLD_DB_NAME);\r\n    request.onerror = function (event) {\r\n        // NOOP - Nothing we can do.\r\n    };\r\n    request.onsuccess = function (event) {\r\n        var db = request.result;\r\n        handleDb(db);\r\n    };\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DBInterface = /** @class */ (function () {\r\n    function DBInterface() {\r\n        this.dbPromise = null;\r\n    }\r\n    /** Gets record(s) from the objectStore that match the given key. */\r\n    DBInterface.prototype.get = function (key) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.get(key); });\r\n    };\r\n    /** Gets record(s) from the objectStore that match the given index. */\r\n    DBInterface.prototype.getIndex = function (index, key) {\r\n        function runRequest(objectStore) {\r\n            var idbIndex = objectStore.index(index);\r\n            return idbIndex.get(key);\r\n        }\r\n        return this.createTransaction(runRequest);\r\n    };\r\n    /** Assigns or overwrites the record for the given value. */\r\n    // tslint:disable-next-line:no-any IndexedDB values are of type \"any\"\r\n    DBInterface.prototype.put = function (value) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.put(value); }, 'readwrite');\r\n    };\r\n    /** Deletes record(s) from the objectStore that match the given key. */\r\n    DBInterface.prototype.delete = function (key) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.delete(key); }, 'readwrite');\r\n    };\r\n    /**\r\n     * Close the currently open database.\r\n     */\r\n    DBInterface.prototype.closeDatabase = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.dbPromise) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.dbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        db.close();\r\n                        this.dbPromise = null;\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates an IndexedDB Transaction and passes its objectStore to the\r\n     * runRequest function, which runs the database request.\r\n     *\r\n     * @return Promise that resolves with the result of the runRequest function\r\n     */\r\n    DBInterface.prototype.createTransaction = function (runRequest, mode) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db, transaction, request, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getDb()];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        transaction = db.transaction(this.objectStoreName, mode);\r\n                        request = transaction.objectStore(this.objectStoreName);\r\n                        return [4 /*yield*/, promisify(runRequest(request))];\r\n                    case 2:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                transaction.oncomplete = function () {\r\n                                    resolve(result);\r\n                                };\r\n                                transaction.onerror = function () {\r\n                                    reject(transaction.error);\r\n                                };\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** Gets the cached db connection or opens a new one. */\r\n    DBInterface.prototype.getDb = function () {\r\n        var _this = this;\r\n        if (!this.dbPromise) {\r\n            this.dbPromise = new Promise(function (resolve, reject) {\r\n                var request = indexedDB.open(_this.dbName, _this.dbVersion);\r\n                request.onsuccess = function () {\r\n                    resolve(request.result);\r\n                };\r\n                request.onerror = function () {\r\n                    _this.dbPromise = null;\r\n                    reject(request.error);\r\n                };\r\n                request.onupgradeneeded = function (event) { return _this.onDbUpgrade(request, event); };\r\n            });\r\n        }\r\n        return this.dbPromise;\r\n    };\r\n    return DBInterface;\r\n}());\r\n/** Promisifies an IDBRequest. Resolves with the IDBRequest's result. */\r\nfunction promisify(request) {\r\n    return new Promise(function (resolve, reject) {\r\n        request.onsuccess = function () {\r\n            resolve(request.result);\r\n        };\r\n        request.onerror = function () {\r\n            reject(request.error);\r\n        };\r\n    });\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TokenDetailsModel = /** @class */ (function (_super) {\r\n    __extends(TokenDetailsModel, _super);\r\n    function TokenDetailsModel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.dbName = 'fcm_token_details_db';\r\n        _this.dbVersion = 3;\r\n        _this.objectStoreName = 'fcm_token_object_Store';\r\n        return _this;\r\n    }\r\n    TokenDetailsModel.prototype.onDbUpgrade = function (request, event) {\r\n        var db = request.result;\r\n        // Lack of 'break' statements is intentional.\r\n        switch (event.oldVersion) {\r\n            case 0: {\r\n                // New IDB instance\r\n                var objectStore = db.createObjectStore(this.objectStoreName, {\r\n                    keyPath: 'swScope'\r\n                });\r\n                // Make sure the sender ID can be searched\r\n                objectStore.createIndex('fcmSenderId', 'fcmSenderId', {\r\n                    unique: false\r\n                });\r\n                objectStore.createIndex('fcmToken', 'fcmToken', { unique: true });\r\n            }\r\n            case 1: {\r\n                // Prior to version 2, we were using either 'fcm_token_details_db'\r\n                // or 'undefined' as the database name due to bug in the SDK\r\n                // So remove the old tokens and databases.\r\n                cleanV1();\r\n            }\r\n            case 2: {\r\n                var objectStore = request.transaction.objectStore(this.objectStoreName);\r\n                var cursorRequest_1 = objectStore.openCursor();\r\n                cursorRequest_1.onsuccess = function () {\r\n                    var cursor = cursorRequest_1.result;\r\n                    if (cursor) {\r\n                        var value = cursor.value;\r\n                        var newValue = __assign({}, value);\r\n                        if (!value.createTime) {\r\n                            newValue.createTime = Date.now();\r\n                        }\r\n                        if (typeof value.vapidKey === 'string') {\r\n                            newValue.vapidKey = base64ToArrayBuffer(value.vapidKey);\r\n                        }\r\n                        if (typeof value.auth === 'string') {\r\n                            newValue.auth = base64ToArrayBuffer(value.auth).buffer;\r\n                        }\r\n                        if (typeof value.auth === 'string') {\r\n                            newValue.p256dh = base64ToArrayBuffer(value.p256dh).buffer;\r\n                        }\r\n                        cursor.update(newValue);\r\n                        cursor.continue();\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Given a token, this method will look up the details in indexedDB.\r\n     */\r\n    TokenDetailsModel.prototype.getTokenDetailsFromToken = function (fcmToken) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!fcmToken) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_TOKEN);\r\n                }\r\n                validateInputs({ fcmToken: fcmToken });\r\n                return [2 /*return*/, this.getIndex('fcmToken', fcmToken)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Given a service worker scope, this method will look up the details in\r\n     * indexedDB.\r\n     * @return The details associated with that token.\r\n     */\r\n    TokenDetailsModel.prototype.getTokenDetailsFromSWScope = function (swScope) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!swScope) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n                }\r\n                validateInputs({ swScope: swScope });\r\n                return [2 /*return*/, this.get(swScope)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Save the details for the fcm token for re-use at a later date.\r\n     * @param input A plain js object containing args to save.\r\n     */\r\n    TokenDetailsModel.prototype.saveTokenDetails = function (tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!tokenDetails.swScope) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n                }\r\n                if (!tokenDetails.vapidKey) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_VAPID_KEY);\r\n                }\r\n                if (!tokenDetails.endpoint || !tokenDetails.auth || !tokenDetails.p256dh) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SUBSCRIPTION);\r\n                }\r\n                if (!tokenDetails.fcmSenderId) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SENDER_ID);\r\n                }\r\n                if (!tokenDetails.fcmToken) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_TOKEN);\r\n                }\r\n                if (!tokenDetails.fcmPushSet) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_PUSH_SET);\r\n                }\r\n                validateInputs(tokenDetails);\r\n                return [2 /*return*/, this.put(tokenDetails)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes details of the current FCM token.\r\n     * It's returning a promise in case we need to move to an async\r\n     * method for deleting at a later date.\r\n     *\r\n     * @return Resolves once the FCM token details have been deleted and returns\r\n     * the deleted details.\r\n     */\r\n    TokenDetailsModel.prototype.deleteToken = function (token) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var details;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof token !== 'string' || token.length === 0) {\r\n                            return [2 /*return*/, Promise.reject(errorFactory.create(ERROR_CODES.INVALID_DELETE_TOKEN))];\r\n                        }\r\n                        return [4 /*yield*/, this.getTokenDetailsFromToken(token)];\r\n                    case 1:\r\n                        details = _a.sent();\r\n                        if (!details) {\r\n                            throw errorFactory.create(ERROR_CODES.DELETE_TOKEN_NOT_FOUND);\r\n                        }\r\n                        return [4 /*yield*/, this.delete(details.swScope)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, details];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return TokenDetailsModel;\r\n}(DBInterface));\r\n/**\r\n * This method takes an object and will check for known arguments and\r\n * validate the input.\r\n * @return Promise that resolves if input is valid, rejects otherwise.\r\n */\r\nfunction validateInputs(input) {\r\n    if (input.fcmToken) {\r\n        if (typeof input.fcmToken !== 'string' || input.fcmToken.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_TOKEN);\r\n        }\r\n    }\r\n    if (input.swScope) {\r\n        if (typeof input.swScope !== 'string' || input.swScope.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n        }\r\n    }\r\n    if (input.vapidKey) {\r\n        if (!(input.vapidKey instanceof Uint8Array) ||\r\n            input.vapidKey.length !== 65) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_VAPID_KEY);\r\n        }\r\n    }\r\n    if (input.endpoint) {\r\n        if (typeof input.endpoint !== 'string' || input.endpoint.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SUBSCRIPTION);\r\n        }\r\n    }\r\n    if (input.auth) {\r\n        if (!(input.auth instanceof ArrayBuffer)) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SUBSCRIPTION);\r\n        }\r\n    }\r\n    if (input.p256dh) {\r\n        if (!(input.p256dh instanceof ArrayBuffer)) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SUBSCRIPTION);\r\n        }\r\n    }\r\n    if (input.fcmSenderId) {\r\n        if (typeof input.fcmSenderId !== 'string' ||\r\n            input.fcmSenderId.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SENDER_ID);\r\n        }\r\n    }\r\n    if (input.fcmPushSet) {\r\n        if (typeof input.fcmPushSet !== 'string' || input.fcmPushSet.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_PUSH_SET);\r\n        }\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UNCOMPRESSED_PUBLIC_KEY_SIZE = 65;\r\nvar VapidDetailsModel = /** @class */ (function (_super) {\r\n    __extends(VapidDetailsModel, _super);\r\n    function VapidDetailsModel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.dbName = 'fcm_vapid_details_db';\r\n        _this.dbVersion = 1;\r\n        _this.objectStoreName = 'fcm_vapid_object_Store';\r\n        return _this;\r\n    }\r\n    VapidDetailsModel.prototype.onDbUpgrade = function (request) {\r\n        var db = request.result;\r\n        db.createObjectStore(this.objectStoreName, { keyPath: 'swScope' });\r\n    };\r\n    /**\r\n     * Given a service worker scope, this method will look up the vapid key\r\n     * in indexedDB.\r\n     */\r\n    VapidDetailsModel.prototype.getVapidFromSWScope = function (swScope) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof swScope !== 'string' || swScope.length === 0) {\r\n                            throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n                        }\r\n                        return [4 /*yield*/, this.get(swScope)];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result ? result.vapidKey : undefined];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Save a vapid key against a swScope for later date.\r\n     */\r\n    VapidDetailsModel.prototype.saveVapidDetails = function (swScope, vapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var details;\r\n            return __generator(this, function (_a) {\r\n                if (typeof swScope !== 'string' || swScope.length === 0) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n                }\r\n                if (vapidKey === null || vapidKey.length !== UNCOMPRESSED_PUBLIC_KEY_SIZE) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_VAPID_KEY);\r\n                }\r\n                details = {\r\n                    swScope: swScope,\r\n                    vapidKey: vapidKey\r\n                };\r\n                return [2 /*return*/, this.put(details)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes details of the current FCM VAPID key for a SW scope.\r\n     * Resolves once the scope/vapid details have been deleted and returns the\r\n     * deleted vapid key.\r\n     */\r\n    VapidDetailsModel.prototype.deleteVapidDetails = function (swScope) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var vapidKey;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getVapidFromSWScope(swScope)];\r\n                    case 1:\r\n                        vapidKey = _a.sent();\r\n                        if (!vapidKey) {\r\n                            throw errorFactory.create(ERROR_CODES.DELETE_SCOPE_NOT_FOUND);\r\n                        }\r\n                        return [4 /*yield*/, this.delete(swScope)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, vapidKey];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return VapidDetailsModel;\r\n}(DBInterface));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SENDER_ID_OPTION_NAME = 'messagingSenderId';\r\n// Database cache should be invalidated once a week.\r\nvar TOKEN_EXPIRATION_MILLIS = 7 * 24 * 60 * 60 * 1000; // 7 days\r\nvar ControllerInterface = /** @class */ (function () {\r\n    /**\r\n     * An interface of the Messaging Service API\r\n     */\r\n    function ControllerInterface(app) {\r\n        var _this = this;\r\n        if (!app.options[SENDER_ID_OPTION_NAME] ||\r\n            typeof app.options[SENDER_ID_OPTION_NAME] !== 'string') {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SENDER_ID);\r\n        }\r\n        this.messagingSenderId = app.options[SENDER_ID_OPTION_NAME];\r\n        this.tokenDetailsModel = new TokenDetailsModel();\r\n        this.vapidDetailsModel = new VapidDetailsModel();\r\n        this.iidModel = new IIDModel();\r\n        this.app = app;\r\n        this.INTERNAL = {\r\n            delete: function () { return _this.delete(); }\r\n        };\r\n    }\r\n    /**\r\n     * @export\r\n     */\r\n    ControllerInterface.prototype.getToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var currentPermission, swReg, publicVapidKey, pushSubscription, tokenDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        currentPermission = this.getNotificationPermission_();\r\n                        if (currentPermission !== 'granted') {\r\n                            if (currentPermission === 'denied') {\r\n                                return [2 /*return*/, Promise.reject(errorFactory.create(ERROR_CODES.NOTIFICATIONS_BLOCKED))];\r\n                            }\r\n                            // We must wait for permission to be granted\r\n                            return [2 /*return*/, Promise.resolve(null)];\r\n                        }\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        swReg = _a.sent();\r\n                        return [4 /*yield*/, this.getPublicVapidKey_()];\r\n                    case 2:\r\n                        publicVapidKey = _a.sent();\r\n                        return [4 /*yield*/, this.getPushSubscription(swReg, publicVapidKey)];\r\n                    case 3:\r\n                        pushSubscription = _a.sent();\r\n                        return [4 /*yield*/, this.tokenDetailsModel.getTokenDetailsFromSWScope(swReg.scope)];\r\n                    case 4:\r\n                        tokenDetails = _a.sent();\r\n                        if (tokenDetails) {\r\n                            return [2 /*return*/, this.manageExistingToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\r\n                        }\r\n                        return [2 /*return*/, this.getNewToken(swReg, pushSubscription, publicVapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * manageExistingToken is triggered if there's an existing FCM token in the\r\n     * database and it can take 3 different actions:\r\n     * 1) Retrieve the existing FCM token from the database.\r\n     * 2) If VAPID details have changed: Delete the existing token and create a\r\n     * new one with the new VAPID key.\r\n     * 3) If the database cache is invalidated: Send a request to FCM to update\r\n     * the token, and to check if the token is still valid on FCM-side.\r\n     */\r\n    ControllerInterface.prototype.manageExistingToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var isTokenValid, now;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        isTokenValid = isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails);\r\n                        if (isTokenValid) {\r\n                            now = Date.now();\r\n                            if (now < tokenDetails.createTime + TOKEN_EXPIRATION_MILLIS) {\r\n                                return [2 /*return*/, tokenDetails.fcmToken];\r\n                            }\r\n                            else {\r\n                                return [2 /*return*/, this.updateToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\r\n                            }\r\n                        }\r\n                        // If the token is no longer valid (for example if the VAPID details\r\n                        // have changed), delete the existing token from the FCM client and server\r\n                        // database. No need to unsubscribe from the Service Worker as we have a\r\n                        // good push subscription that we'd like to use in getNewToken.\r\n                        return [4 /*yield*/, this.deleteTokenFromDB(tokenDetails.fcmToken)];\r\n                    case 1:\r\n                        // If the token is no longer valid (for example if the VAPID details\r\n                        // have changed), delete the existing token from the FCM client and server\r\n                        // database. No need to unsubscribe from the Service Worker as we have a\r\n                        // good push subscription that we'd like to use in getNewToken.\r\n                        _a.sent();\r\n                        return [2 /*return*/, this.getNewToken(swReg, pushSubscription, publicVapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ControllerInterface.prototype.updateToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var updatedToken, allDetails, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 4, , 6]);\r\n                        return [4 /*yield*/, this.iidModel.updateToken(this.messagingSenderId, tokenDetails.fcmToken, tokenDetails.fcmPushSet, pushSubscription, publicVapidKey)];\r\n                    case 1:\r\n                        updatedToken = _a.sent();\r\n                        allDetails = {\r\n                            swScope: swReg.scope,\r\n                            vapidKey: publicVapidKey,\r\n                            fcmSenderId: this.messagingSenderId,\r\n                            fcmToken: updatedToken,\r\n                            fcmPushSet: tokenDetails.fcmPushSet,\r\n                            createTime: Date.now(),\r\n                            endpoint: pushSubscription.endpoint,\r\n                            auth: pushSubscription.getKey('auth'),\r\n                            p256dh: pushSubscription.getKey('p256dh')\r\n                        };\r\n                        return [4 /*yield*/, this.tokenDetailsModel.saveTokenDetails(allDetails)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, updatedToken];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        return [4 /*yield*/, this.deleteToken(tokenDetails.fcmToken)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        throw e_1;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ControllerInterface.prototype.getNewToken = function (swReg, pushSubscription, publicVapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tokenDetails, allDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.iidModel.getToken(this.messagingSenderId, pushSubscription, publicVapidKey)];\r\n                    case 1:\r\n                        tokenDetails = _a.sent();\r\n                        allDetails = {\r\n                            swScope: swReg.scope,\r\n                            vapidKey: publicVapidKey,\r\n                            fcmSenderId: this.messagingSenderId,\r\n                            fcmToken: tokenDetails.token,\r\n                            fcmPushSet: tokenDetails.pushSet,\r\n                            createTime: Date.now(),\r\n                            endpoint: pushSubscription.endpoint,\r\n                            auth: pushSubscription.getKey('auth'),\r\n                            p256dh: pushSubscription.getKey('p256dh')\r\n                        };\r\n                        return [4 /*yield*/, this.tokenDetailsModel.saveTokenDetails(allDetails)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, tokenDetails.token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes tokens that the token manager looks after,\r\n     * unsubscribes the token from FCM  and then unregisters the push\r\n     * subscription if it exists. It returns a promise that indicates\r\n     * whether or not the unsubscribe request was processed successfully.\r\n     * @export\r\n     */\r\n    ControllerInterface.prototype.deleteToken = function (token) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var registration, pushSubscription;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: \r\n                    // Delete the token details from the database.\r\n                    return [4 /*yield*/, this.deleteTokenFromDB(token)];\r\n                    case 1:\r\n                        // Delete the token details from the database.\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 2:\r\n                        registration = _a.sent();\r\n                        if (!registration) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, registration.pushManager.getSubscription()];\r\n                    case 3:\r\n                        pushSubscription = _a.sent();\r\n                        if (pushSubscription) {\r\n                            return [2 /*return*/, pushSubscription.unsubscribe()];\r\n                        }\r\n                        _a.label = 4;\r\n                    case 4: \r\n                    // If there's no SW, consider it a success.\r\n                    return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method will delete the token from the client database, and make a\r\n     * call to FCM to remove it from the server DB. Does not temper with the\r\n     * push subscription.\r\n     */\r\n    ControllerInterface.prototype.deleteTokenFromDB = function (token) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var details;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.tokenDetailsModel.deleteToken(token)];\r\n                    case 1:\r\n                        details = _a.sent();\r\n                        return [4 /*yield*/, this.iidModel.deleteToken(details.fcmSenderId, details.fcmToken, details.fcmPushSet)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a PushSubscription for the current user.\r\n     */\r\n    ControllerInterface.prototype.getPushSubscription = function (swRegistration, publicVapidKey) {\r\n        return swRegistration.pushManager.getSubscription().then(function (subscription) {\r\n            if (subscription) {\r\n                return subscription;\r\n            }\r\n            return swRegistration.pushManager.subscribe({\r\n                userVisibleOnly: true,\r\n                applicationServerKey: publicVapidKey\r\n            });\r\n        });\r\n    };\r\n    //\r\n    // The following methods should only be available in the window.\r\n    //\r\n    ControllerInterface.prototype.requestPermission = function () {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    ControllerInterface.prototype.useServiceWorker = function (registration) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    ControllerInterface.prototype.usePublicVapidKey = function (b64PublicKey) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    ControllerInterface.prototype.onMessage = function (nextOrObserver, error, completed) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    ControllerInterface.prototype.onTokenRefresh = function (nextOrObserver, error, completed) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    //\r\n    // The following methods are used by the service worker only.\r\n    //\r\n    ControllerInterface.prototype.setBackgroundMessageHandler = function (callback) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_SW);\r\n    };\r\n    //\r\n    // The following methods are used by the service themselves and not exposed\r\n    // publicly or not expected to be used by developers.\r\n    //\r\n    /**\r\n     * This method is required to adhere to the Firebase interface.\r\n     * It closes any currently open indexdb database connections.\r\n     */\r\n    ControllerInterface.prototype.delete = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.tokenDetailsModel.closeDatabase(),\r\n                            this.vapidDetailsModel.closeDatabase()\r\n                        ])];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns the current Notification Permission state.\r\n     */\r\n    ControllerInterface.prototype.getNotificationPermission_ = function () {\r\n        // TODO: Remove the cast when this issue is fixed:\r\n        // https://github.com/Microsoft/TypeScript/issues/14701\r\n        // tslint:disable-next-line no-any\r\n        return Notification.permission;\r\n    };\r\n    ControllerInterface.prototype.getTokenDetailsModel = function () {\r\n        return this.tokenDetailsModel;\r\n    };\r\n    ControllerInterface.prototype.getVapidDetailsModel = function () {\r\n        return this.vapidDetailsModel;\r\n    };\r\n    // Visible for testing\r\n    // TODO: make protected\r\n    ControllerInterface.prototype.getIIDModel = function () {\r\n        return this.iidModel;\r\n    };\r\n    return ControllerInterface;\r\n}());\r\n/**\r\n * Checks if the tokenDetails match the details provided in the clients.\r\n */\r\nfunction isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails) {\r\n    if (!isArrayBufferEqual(publicVapidKey.buffer, tokenDetails.vapidKey.buffer)) {\r\n        return false;\r\n    }\r\n    var isEndpointEqual = pushSubscription.endpoint === tokenDetails.endpoint;\r\n    var isAuthEqual = isArrayBufferEqual(pushSubscription.getKey('auth'), tokenDetails.auth);\r\n    var isP256dhEqual = isArrayBufferEqual(pushSubscription.getKey('p256dh'), tokenDetails.p256dh);\r\n    return isEndpointEqual && isAuthEqual && isP256dhEqual;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FCM_MSG = 'FCM_MSG';\r\nvar SWController = /** @class */ (function (_super) {\r\n    __extends(SWController, _super);\r\n    function SWController(app) {\r\n        var _this = _super.call(this, app) || this;\r\n        _this.bgMessageHandler = null;\r\n        self.addEventListener('push', function (e) {\r\n            _this.onPush(e);\r\n        });\r\n        self.addEventListener('pushsubscriptionchange', function (e) {\r\n            _this.onSubChange(e);\r\n        });\r\n        self.addEventListener('notificationclick', function (e) {\r\n            _this.onNotificationClick(e);\r\n        });\r\n        return _this;\r\n    }\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SWController.prototype.onPush = function (event) {\r\n        event.waitUntil(this.onPush_(event));\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SWController.prototype.onSubChange = function (event) {\r\n        event.waitUntil(this.onSubChange_(event));\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SWController.prototype.onNotificationClick = function (event) {\r\n        event.waitUntil(this.onNotificationClick_(event));\r\n    };\r\n    /**\r\n     * A handler for push events that shows notifications based on the content of\r\n     * the payload.\r\n     *\r\n     * The payload must be a JSON-encoded Object with a `notification` key. The\r\n     * value of the `notification` property will be used as the NotificationOptions\r\n     * object passed to showNotification. Additionally, the `title` property of the\r\n     * notification object will be used as the title.\r\n     *\r\n     * If there is no notification data in the payload then no notification will be\r\n     * shown.\r\n     */\r\n    SWController.prototype.onPush_ = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msgPayload, hasVisibleClients, notificationDetails, notificationTitle, reg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!event.data) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        try {\r\n                            msgPayload = event.data.json();\r\n                        }\r\n                        catch (err) {\r\n                            // Not JSON so not an FCM message\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, this.hasVisibleClients_()];\r\n                    case 1:\r\n                        hasVisibleClients = _a.sent();\r\n                        if (hasVisibleClients) {\r\n                            // Do not need to show a notification.\r\n                            if (msgPayload.notification || this.bgMessageHandler) {\r\n                                // Send to page\r\n                                return [2 /*return*/, this.sendMessageToWindowClients_(msgPayload)];\r\n                            }\r\n                            return [2 /*return*/];\r\n                        }\r\n                        notificationDetails = this.getNotificationData_(msgPayload);\r\n                        if (!notificationDetails) return [3 /*break*/, 3];\r\n                        notificationTitle = notificationDetails.title || '';\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 2:\r\n                        reg = _a.sent();\r\n                        return [2 /*return*/, reg.showNotification(notificationTitle, notificationDetails)];\r\n                    case 3:\r\n                        if (!this.bgMessageHandler) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.bgMessageHandler(msgPayload)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SWController.prototype.onSubChange_ = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var registration, err_1, err_2, tokenDetailsModel, tokenDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        registration = _a.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        err_1 = _a.sent();\r\n                        throw errorFactory.create(ERROR_CODES.UNABLE_TO_RESUBSCRIBE, {\r\n                            message: err_1\r\n                        });\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 8]);\r\n                        return [4 /*yield*/, registration.pushManager.getSubscription()];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 5:\r\n                        err_2 = _a.sent();\r\n                        tokenDetailsModel = this.getTokenDetailsModel();\r\n                        return [4 /*yield*/, tokenDetailsModel.getTokenDetailsFromSWScope(registration.scope)];\r\n                    case 6:\r\n                        tokenDetails = _a.sent();\r\n                        if (!tokenDetails) {\r\n                            // This should rarely occure, but could if indexedDB\r\n                            // is corrupted or wiped\r\n                            throw err_2;\r\n                        }\r\n                        // Attempt to delete the token if we know it's bad\r\n                        return [4 /*yield*/, this.deleteToken(tokenDetails.fcmToken)];\r\n                    case 7:\r\n                        // Attempt to delete the token if we know it's bad\r\n                        _a.sent();\r\n                        throw err_2;\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SWController.prototype.onNotificationClick_ = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msgPayload, clickAction, windowClient, internalMsg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!event.notification ||\r\n                            !event.notification.data ||\r\n                            !event.notification.data[FCM_MSG]) {\r\n                            // Not an FCM notification, do nothing.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // Prevent other listeners from receiving the event\r\n                        event.stopImmediatePropagation();\r\n                        event.notification.close();\r\n                        msgPayload = event.notification.data[FCM_MSG];\r\n                        if (!msgPayload.notification) {\r\n                            // Nothing to do.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        clickAction = msgPayload.notification.click_action;\r\n                        if (!clickAction) {\r\n                            // Nothing to do.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, this.getWindowClient_(clickAction)];\r\n                    case 1:\r\n                        windowClient = _a.sent();\r\n                        if (!!windowClient) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, self.clients.openWindow(clickAction)];\r\n                    case 2:\r\n                        // Unable to find window client so need to open one.\r\n                        windowClient = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 3: return [4 /*yield*/, windowClient.focus()];\r\n                    case 4:\r\n                        windowClient = _a.sent();\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        if (!windowClient) {\r\n                            // Window Client will not be returned if it's for a third party origin.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // Delete notification data from payload before sending to the page.\r\n                        delete msgPayload.notification;\r\n                        internalMsg = createNewMsg(MessageType.NOTIFICATION_CLICKED, msgPayload);\r\n                        // Attempt to send a message to the client to handle the data\r\n                        // Is affected by: https://github.com/slightlyoff/ServiceWorker/issues/728\r\n                        return [2 /*return*/, this.attemptToMessageClient_(windowClient, internalMsg)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SWController.prototype.getNotificationData_ = function (msgPayload) {\r\n        if (!msgPayload) {\r\n            return;\r\n        }\r\n        if (typeof msgPayload.notification !== 'object') {\r\n            return;\r\n        }\r\n        var notificationInformation = __assign({}, msgPayload.notification);\r\n        // Put the message payload under FCM_MSG name so we can identify the\r\n        // notification as being an FCM notification vs a notification from\r\n        // somewhere else (i.e. normal web push or developer generated\r\n        // notification).\r\n        notificationInformation.data = (_a = {}, _a[FCM_MSG] = msgPayload, _a);\r\n        return notificationInformation;\r\n        var _a;\r\n    };\r\n    /**\r\n     * Calling setBackgroundMessageHandler will opt in to some specific\r\n     * behaviours.\r\n     * 1.) If a notification doesn't need to be shown due to a window already\r\n     * being visible, then push messages will be sent to the page.\r\n     * 2.) If a notification needs to be shown, and the message contains no\r\n     * notification data this method will be called\r\n     * and the promise it returns will be passed to event.waitUntil.\r\n     * If you do not set this callback then all push messages will let and the\r\n     * developer can handle them in a their own 'push' event callback\r\n     *\r\n     * @param callback The callback to be called when a push message is received\r\n     * and a notification must be shown. The callback will be given the data from\r\n     * the push message.\r\n     */\r\n    SWController.prototype.setBackgroundMessageHandler = function (callback) {\r\n        if (!callback || typeof callback !== 'function') {\r\n            throw errorFactory.create(ERROR_CODES.BG_HANDLER_FUNCTION_EXPECTED);\r\n        }\r\n        this.bgMessageHandler = callback;\r\n    };\r\n    /**\r\n     * @param url The URL to look for when focusing a client.\r\n     * @return Returns an existing window client or a newly opened WindowClient.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SWController.prototype.getWindowClient_ = function (url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parsedURL, clientList, suitableClient, i, parsedClientUrl;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        parsedURL = new URL(url, self.location.href).href;\r\n                        return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        suitableClient = null;\r\n                        for (i = 0; i < clientList.length; i++) {\r\n                            parsedClientUrl = new URL(clientList[i].url, self.location.href)\r\n                                .href;\r\n                            if (parsedClientUrl === parsedURL) {\r\n                                suitableClient = clientList[i];\r\n                                break;\r\n                            }\r\n                        }\r\n                        return [2 /*return*/, suitableClient];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This message will attempt to send the message to a window client.\r\n     * @param client The WindowClient to send the message to.\r\n     * @param message The message to send to the client.\r\n     * @returns Returns a promise that resolves after sending the message. This\r\n     * does not guarantee that the message was successfully received.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SWController.prototype.attemptToMessageClient_ = function (client, message) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                // NOTE: This returns a promise in case this API is abstracted later on to\r\n                // do additional work\r\n                if (!client) {\r\n                    throw errorFactory.create(ERROR_CODES.NO_WINDOW_CLIENT_TO_MSG);\r\n                }\r\n                client.postMessage(message);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @returns If there is currently a visible WindowClient, this method will\r\n     * resolve to true, otherwise false.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SWController.prototype.hasVisibleClients_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var clientList;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        return [2 /*return*/, clientList.some(function (client) { return client.visibilityState === 'visible'; })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param msgPayload The data from the push event that should be sent to all\r\n     * available pages.\r\n     * @returns Returns a promise that resolves once the message has been sent to\r\n     * all WindowClients.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SWController.prototype.sendMessageToWindowClients_ = function (msgPayload) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var clientList, internalMsg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        internalMsg = createNewMsg(MessageType.PUSH_MSG_RECEIVED, msgPayload);\r\n                        return [4 /*yield*/, Promise.all(clientList.map(function (client) {\r\n                                return _this.attemptToMessageClient_(client, internalMsg);\r\n                            }))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will register the default service worker and return the registration.\r\n     * @return he service worker registration to be used for the push service.\r\n     */\r\n    SWController.prototype.getSWRegistration_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, self.registration];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will return the default VAPID key or the uint8array version of the\r\n     * public VAPID key provided by the developer.\r\n     */\r\n    SWController.prototype.getPublicVapidKey_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var swReg, vapidKeyFromDatabase;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        swReg = _a.sent();\r\n                        if (!swReg) {\r\n                            throw errorFactory.create(ERROR_CODES.SW_REGISTRATION_EXPECTED);\r\n                        }\r\n                        return [4 /*yield*/, this.getVapidDetailsModel().getVapidFromSWScope(swReg.scope)];\r\n                    case 2:\r\n                        vapidKeyFromDatabase = _a.sent();\r\n                        if (vapidKeyFromDatabase == null) {\r\n                            return [2 /*return*/, DEFAULT_PUBLIC_VAPID_KEY];\r\n                        }\r\n                        return [2 /*return*/, vapidKeyFromDatabase];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SWController;\r\n}(ControllerInterface));\r\nfunction getClientList() {\r\n    return self.clients.matchAll({\r\n        type: 'window',\r\n        includeUncontrolled: true\r\n        // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\r\n    });\r\n}\r\nfunction createNewMsg(msgType, msgData) {\r\n    return _a = {}, _a[MessageParameter.TYPE_OF_MSG] = msgType, _a[MessageParameter.DATA] = msgData, _a;\r\n    var _a;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\r\nvar DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WindowController = /** @class */ (function (_super) {\r\n    __extends(WindowController, _super);\r\n    /**\r\n     * A service that provides a MessagingService instance.\r\n     */\r\n    function WindowController(app) {\r\n        var _this = _super.call(this, app) || this;\r\n        _this.registrationToUse = null;\r\n        _this.publicVapidKeyToUse = null;\r\n        _this.manifestCheckPromise = null;\r\n        _this.messageObserver = null;\r\n        // @ts-ignore: Unused variable error, this is not implemented yet.\r\n        _this.tokenRefreshObserver = null;\r\n        _this.onMessageInternal = createSubscribe(function (observer) {\r\n            _this.messageObserver = observer;\r\n        });\r\n        _this.onTokenRefreshInternal = createSubscribe(function (observer) {\r\n            _this.tokenRefreshObserver = observer;\r\n        });\r\n        _this.setupSWMessageListener_();\r\n        return _this;\r\n    }\r\n    /**\r\n     * This method returns an FCM token if it can be generated.\r\n     * The return promise will reject if the browser doesn't support\r\n     * FCM, if permission is denied for notifications or it's not\r\n     * possible to generate a token.\r\n     *\r\n     * @return Returns a promise that resolves to an FCM token or null if\r\n     * permission isn't granted.\r\n     */\r\n    WindowController.prototype.getToken = function () {\r\n        var _this = this;\r\n        // Check that the required API's are available\r\n        if (!this.isSupported_()) {\r\n            return Promise.reject(errorFactory.create(ERROR_CODES.UNSUPPORTED_BROWSER));\r\n        }\r\n        return this.manifestCheck_().then(function () {\r\n            return _super.prototype.getToken.call(_this);\r\n        });\r\n    };\r\n    /**\r\n     * The method checks that a manifest is defined and has the correct GCM\r\n     * sender ID.\r\n     * @return Returns a promise that resolves if the manifest matches\r\n     * our required sender ID\r\n     */\r\n    // Visible for testing\r\n    // TODO: make private\r\n    WindowController.prototype.manifestCheck_ = function () {\r\n        if (this.manifestCheckPromise) {\r\n            return this.manifestCheckPromise;\r\n        }\r\n        var manifestTag = document.querySelector('link[rel=\"manifest\"]');\r\n        if (!manifestTag) {\r\n            this.manifestCheckPromise = Promise.resolve();\r\n        }\r\n        else {\r\n            this.manifestCheckPromise = fetch(manifestTag.href)\r\n                .then(function (response) {\r\n                return response.json();\r\n            })\r\n                .catch(function () {\r\n                // If the download or parsing fails allow check.\r\n                // We only want to error if we KNOW that the gcm_sender_id is incorrect.\r\n            })\r\n                .then(function (manifestContent) {\r\n                if (!manifestContent) {\r\n                    return;\r\n                }\r\n                if (!manifestContent['gcm_sender_id']) {\r\n                    return;\r\n                }\r\n                if (manifestContent['gcm_sender_id'] !== '103953800507') {\r\n                    throw errorFactory.create(ERROR_CODES.INCORRECT_GCM_SENDER_ID);\r\n                }\r\n            });\r\n        }\r\n        return this.manifestCheckPromise;\r\n    };\r\n    /**\r\n     * Request permission if it is not currently granted\r\n     *\r\n     * @return Resolves if the permission was granted, otherwise rejects\r\n     */\r\n    WindowController.prototype.requestPermission = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (\r\n                // TODO: Remove the cast when this issue is fixed:\r\n                // https://github.com/Microsoft/TypeScript/issues/14701\r\n                // tslint:disable-next-line no-any\r\n                Notification.permission === 'granted') {\r\n                    return [2 /*return*/];\r\n                }\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var managePermissionResult = function (result) {\r\n                            if (result === 'granted') {\r\n                                return resolve();\r\n                            }\r\n                            else if (result === 'denied') {\r\n                                return reject(errorFactory.create(ERROR_CODES.PERMISSION_BLOCKED));\r\n                            }\r\n                            else {\r\n                                return reject(errorFactory.create(ERROR_CODES.PERMISSION_DEFAULT));\r\n                            }\r\n                        };\r\n                        // The Notification.requestPermission API was changed to\r\n                        // return a promise so now have to handle both in case\r\n                        // browsers stop support callbacks for promised version\r\n                        var permissionPromise = Notification.requestPermission(managePermissionResult);\r\n                        if (permissionPromise) {\r\n                            // Prefer the promise version as it's the future API.\r\n                            permissionPromise.then(managePermissionResult);\r\n                        }\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method allows a developer to override the default service worker and\r\n     * instead use a custom service worker.\r\n     *\r\n     * @param registration The service worker registration that should be used to\r\n     * receive the push messages.\r\n     */\r\n    WindowController.prototype.useServiceWorker = function (registration) {\r\n        if (!(registration instanceof ServiceWorkerRegistration)) {\r\n            throw errorFactory.create(ERROR_CODES.SW_REGISTRATION_EXPECTED);\r\n        }\r\n        if (this.registrationToUse != null) {\r\n            throw errorFactory.create(ERROR_CODES.USE_SW_BEFORE_GET_TOKEN);\r\n        }\r\n        this.registrationToUse = registration;\r\n    };\r\n    /**\r\n     * This method allows a developer to override the default vapid key\r\n     * and instead use a custom VAPID public key.\r\n     *\r\n     * @param publicKey A URL safe base64 encoded string.\r\n     */\r\n    WindowController.prototype.usePublicVapidKey = function (publicKey) {\r\n        if (typeof publicKey !== 'string') {\r\n            throw errorFactory.create(ERROR_CODES.INVALID_PUBLIC_VAPID_KEY);\r\n        }\r\n        if (this.publicVapidKeyToUse != null) {\r\n            throw errorFactory.create(ERROR_CODES.USE_PUBLIC_KEY_BEFORE_GET_TOKEN);\r\n        }\r\n        var parsedKey = base64ToArrayBuffer(publicKey);\r\n        if (parsedKey.length !== 65) {\r\n            throw errorFactory.create(ERROR_CODES.PUBLIC_KEY_DECRYPTION_FAILED);\r\n        }\r\n        this.publicVapidKeyToUse = parsedKey;\r\n    };\r\n    /**\r\n     * @export\r\n     * @param nextOrObserver An observer object or a function triggered on\r\n     * message.\r\n     * @param error A function triggered on message error.\r\n     * @param completed function triggered when the observer is removed.\r\n     * @return The unsubscribe function for the observer.\r\n     */\r\n    WindowController.prototype.onMessage = function (nextOrObserver, error, completed) {\r\n        if (typeof nextOrObserver === 'function') {\r\n            return this.onMessageInternal(nextOrObserver, error, completed);\r\n        }\r\n        else {\r\n            return this.onMessageInternal(nextOrObserver);\r\n        }\r\n    };\r\n    /**\r\n     * @param nextOrObserver An observer object or a function triggered on token\r\n     * refresh.\r\n     * @param error A function triggered on token refresh error.\r\n     * @param completed function triggered when the observer is removed.\r\n     * @return The unsubscribe function for the observer.\r\n     */\r\n    WindowController.prototype.onTokenRefresh = function (nextOrObserver, error, completed) {\r\n        if (typeof nextOrObserver === 'function') {\r\n            return this.onTokenRefreshInternal(nextOrObserver, error, completed);\r\n        }\r\n        else {\r\n            return this.onTokenRefreshInternal(nextOrObserver);\r\n        }\r\n    };\r\n    /**\r\n     * Given a registration, wait for the service worker it relates to\r\n     * become activer\r\n     * @param registration Registration to wait for service worker to become active\r\n     * @return Wait for service worker registration to become active\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    WindowController.prototype.waitForRegistrationToActivate_ = function (registration) {\r\n        var serviceWorker = registration.installing || registration.waiting || registration.active;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!serviceWorker) {\r\n                // This is a rare scenario but has occured in firefox\r\n                reject(errorFactory.create(ERROR_CODES.NO_SW_IN_REG));\r\n                return;\r\n            }\r\n            // Because the Promise function is called on next tick there is a\r\n            // small chance that the worker became active or redundant already.\r\n            if (serviceWorker.state === 'activated') {\r\n                resolve(registration);\r\n                return;\r\n            }\r\n            if (serviceWorker.state === 'redundant') {\r\n                reject(errorFactory.create(ERROR_CODES.SW_REG_REDUNDANT));\r\n                return;\r\n            }\r\n            var stateChangeListener = function () {\r\n                if (serviceWorker.state === 'activated') {\r\n                    resolve(registration);\r\n                }\r\n                else if (serviceWorker.state === 'redundant') {\r\n                    reject(errorFactory.create(ERROR_CODES.SW_REG_REDUNDANT));\r\n                }\r\n                else {\r\n                    // Return early and wait to next state change\r\n                    return;\r\n                }\r\n                serviceWorker.removeEventListener('statechange', stateChangeListener);\r\n            };\r\n            serviceWorker.addEventListener('statechange', stateChangeListener);\r\n        });\r\n    };\r\n    /**\r\n     * This will register the default service worker and return the registration\r\n     * @return The service worker registration to be used for the push service.\r\n     */\r\n    WindowController.prototype.getSWRegistration_ = function () {\r\n        var _this = this;\r\n        if (this.registrationToUse) {\r\n            return this.waitForRegistrationToActivate_(this.registrationToUse);\r\n        }\r\n        // Make the registration null so we know useServiceWorker will not\r\n        // use a new service worker as registrationToUse is no longer undefined\r\n        this.registrationToUse = null;\r\n        return navigator.serviceWorker\r\n            .register(DEFAULT_SW_PATH, {\r\n            scope: DEFAULT_SW_SCOPE\r\n        })\r\n            .catch(function (err) {\r\n            throw errorFactory.create(ERROR_CODES.FAILED_DEFAULT_REGISTRATION, {\r\n                browserErrorMessage: err.message\r\n            });\r\n        })\r\n            .then(function (registration) {\r\n            return _this.waitForRegistrationToActivate_(registration).then(function () {\r\n                _this.registrationToUse = registration;\r\n                // We update after activation due to an issue with Firefox v49 where\r\n                // a race condition occassionally causes the service work to not\r\n                // install\r\n                registration.update();\r\n                return registration;\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will return the default VAPID key or the uint8array version of the public VAPID key\r\n     * provided by the developer.\r\n     */\r\n    WindowController.prototype.getPublicVapidKey_ = function () {\r\n        if (this.publicVapidKeyToUse) {\r\n            return Promise.resolve(this.publicVapidKeyToUse);\r\n        }\r\n        return Promise.resolve(DEFAULT_PUBLIC_VAPID_KEY);\r\n    };\r\n    /**\r\n     * This method will set up a message listener to handle\r\n     * events from the service worker that should trigger\r\n     * events in the page.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    WindowController.prototype.setupSWMessageListener_ = function () {\r\n        var _this = this;\r\n        if (!('serviceWorker' in navigator)) {\r\n            return;\r\n        }\r\n        navigator.serviceWorker.addEventListener('message', function (event) {\r\n            if (!event.data || !event.data[MessageParameter.TYPE_OF_MSG]) {\r\n                // Not a message from FCM\r\n                return;\r\n            }\r\n            var workerPageMessage = event.data;\r\n            switch (workerPageMessage[MessageParameter.TYPE_OF_MSG]) {\r\n                case MessageType.PUSH_MSG_RECEIVED:\r\n                case MessageType.NOTIFICATION_CLICKED:\r\n                    var pushMessage = workerPageMessage[MessageParameter.DATA];\r\n                    if (_this.messageObserver) {\r\n                        _this.messageObserver.next(pushMessage);\r\n                    }\r\n                    break;\r\n                default:\r\n                    // Noop.\r\n                    break;\r\n            }\r\n        }, false);\r\n    };\r\n    /**\r\n     * Checks to see if the required API's are valid or not.\r\n     * @return Returns true if the desired APIs are available.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    WindowController.prototype.isSupported_ = function () {\r\n        return ('serviceWorker' in navigator &&\r\n            'PushManager' in window &&\r\n            'Notification' in window &&\r\n            'fetch' in window &&\r\n            ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n            PushSubscription.prototype.hasOwnProperty('getKey'));\r\n    };\r\n    return WindowController;\r\n}(ControllerInterface));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerMessaging(instance) {\r\n    var messagingName = 'messaging';\r\n    var factoryMethod = function (app) {\r\n        if (self && 'ServiceWorkerGlobalScope' in self) {\r\n            return new SWController(app);\r\n        }\r\n        // Assume we are in the window context.\r\n        return new WindowController(app);\r\n    };\r\n    var namespaceExports = {\r\n        // no-inline\r\n        Messaging: WindowController\r\n    };\r\n    instance.INTERNAL.registerService(messagingName, factoryMethod, namespaceExports);\r\n}\r\nregisterMessaging(firebase);\n\nexport { registerMessaging };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/@firebase/messaging/dist/index.esm.js\n// module id = SloY\n// module chunks = 0","/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel)\r\n        return;\r\n    var now = new Date().toISOString();\r\n    switch (logType) {\r\n        /**\r\n         * By default, `console.debug` is not displayed in the developer console (in\r\n         * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n         * logs to the `console.log` function.\r\n         */\r\n        case LogLevel.DEBUG:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.VERBOSE:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.INFO:\r\n            console.info.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.WARN:\r\n            console.warn.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.ERROR:\r\n            console.error.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        default:\r\n            throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The log handler for the Logger instance.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError('Invalid value assigned to `logLevel`');\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));\r\n    };\r\n    return Logger;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.logLevel = level;\r\n    });\r\n}\n\nexport { setLogLevel, Logger, LogLevel };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/@firebase/logger/dist/index.esm.js\n// module id = TUpU\n// module chunks = 0","import firebase from 'firebase'\nimport { progressBar, progressStatus, showProgress, hideProgress } from './upload_progress'\nimport { errorMsg, successMsg } from './helpers/messages'\nimport { savePhotoInDB } from './helpers/photos_db'\n\nconst camera = () => {\nconst d = document,\nn = navigator,\nc = console.log\n/*Todo el codigo de programacion asincrono y que interactue con\ncodigo html dinamico cono el retur , va a cargar\n10 milisegundos despues de que carge el DOM*/\n\nconst cameraScripts= setInterval(()=>{\n  if(d.readyState ==='complete'){\n    //Para limpiar\n    clearInterval(cameraScripts)\n    const cameraApp = d.querySelector('.Camera'),\n        video = d.getElementById('camera-stream'),\n        photo = d.getElementById('photo'),\n        startCameraBtn = d.getElementById('start-camera'),\n        output = d.querySelector('.Camera').querySelector('.Progress-output'),\n        controls= d.querySelector('.Camera-menu'),\n        //takePhotoBtn toma la foto\n        takePhotoBtn = d.getElementById('take-photo'),\n        deletePhotoBtn = d.getElementById('delete-photo'),\n        uploadPhotoBtn = d.getElementById('upload-photo'),\n        downloadPhotoBtn = d.getElementById('download-photo'),\n        canvas = d.getElementById('canvas-snap'),\n        context = canvas.getContext('2d')\n\n        //cuando yo tome de nuevo la foto es un nuevo bloque de datos\n        let snapshot\n\n      function cameraInit() {\n        n.getMedia = (\n          n.getUserMedia ||\n          n.webkitGetUserMedia ||\n          n.mozGetUserMedia ||\n          n.msGetUserMedia\n        )\n\n        if (!n.getMedia) {\n          output.innerHTML = errorMsg('Tu navegador NO soporta el uso de la cámara de tu dispositivo', null)\n        } else {\n          //recibe 3 parametros\n          //un objeto de los elementos que voy a utilizar\n          //una funcion para poder activar la camara\n          //manejar un error en caso de que la camara no se ative\n          n.getMedia(\n            { video: true },\n            stream => {\n              //video.src = window.URL.createObjectURL(stream)\n              //Este error se debe a que la función createObjectURLestá obsoleta para Google Chrome.\n              //https://stackoverflow.com/questions/27120757/failed-to-execute-createobjecturl-on-url\n              video.srcObject=stream\n              video.play()\n            },\n            err => output.innerHTML = errorMsg(`Hubo un error al acceder a la cámara de tu dispositivo: ${err.mesagge}`, err)\n          )\n        }\n      }\n\n      function takeSnapshot(){\n        //ancho del videov\n        let width= video.videoWidth,\n        height = video.videoHeight\n        //el canvas sirve para generar la imagen\n        canvas.width=width\n        canvas.height=height\n        //ppoder dibujar una imagen\n        context.drawImage(video,10,10)\n\n        return canvas.toDataURL('image/png')\n      }\n\n      function cameraRest(){\n        //Volver a mostrar y reproducir el video\n        video.style.display='block'\n        video.play()\n        //Limpiar el snapshot de la imagen dinamica\n        photo.style.display = 'none'\n        photo.setAttribute('src','')\n        //Limpiar el enlace de descarga\n        downloadPhotoBtn.querySelector('a').href = '#'\n        //Habilitar botones\n        deletePhotoBtn.classList.add('u-disabled')\n        uploadPhotoBtn.classList.add('u-disabled')\n        downloadPhotoBtn.classList.add('u-disabled')\n      }\n\n        cameraInit()\n        //para ocultar el canvas\n        canvas.style.display = 'none'\n        photo.style.display='none'\n        //para encender la camara\n        startCameraBtn.addEventListener('click', e=>{\n          e.preventDefault()\n          video.play()\n          video.style.display = 'block'\n          photo.style.display = 'none'\n        })\n\n        takePhotoBtn.addEventListener('click', e=>{\n          e.preventDefault()\n          //Pausamos y Ocultamos el video\n          video.style.display = 'none'\n          video.pause()\n          //Mostramos la captura de la cámara en una imágen\n          snapshot = takeSnapshot()\n          photo.style.display = 'block'\n          photo.setAttribute('src', snapshot)\n          //Asignar la imagen capturada al enlace de descarga\n          downloadPhotoBtn.querySelector('a').href = snapshot\n          //Habilitar botones de eliminar, subir y descargar\n          deletePhotoBtn.classList.remove('u-disabled')\n          uploadPhotoBtn.classList.remove('u-disabled')\n          downloadPhotoBtn.classList.remove('u-disabled')\n        })\n\n        deletePhotoBtn.addEventListener('click', e=>{\n          e.preventDefault\n          cameraRest()\n        })\n\n        uploadPhotoBtn.addEventListener('click', e=>{\n          e.preventDefault()\n        const storageRef = firebase.storage().ref().child('edgram/photos'),\n          dbRef = firebase.database().ref().child('edgram/photos'),\n          user = firebase.auth().currentUser\n          /*nombre d la imagen que toy subiendo\n          subir la imagen putString sube archivos en formato URL\n          parametro donde almaceno la iagen dataURL -> snapshot*/\n        let photoName = `photo_${Math.floor(Math.random() * 10000000)}`,\n          uploadTask = storageRef.child(photoName).putString(snapshot, 'data_url')\n\n          uploadTask.on('state_changed', data => {\n            //c(data)\n            //Muestra el progreso\n            showProgress()\n            //Conversion de que esta subiendo la imagen y que la barra va aumentando\n            progressStatus(data)\n          }, err => {\n            //c(err, err.code, err.mesagge)\n            output.innerHTML = errorMsg(`${err.mesagge}`, err)\n          }, () => {\n            storageRef.child(photoName).getDownloadURL()\n              .then(url => {\n                //c(url)\n                output.innerHTML = successMsg('Tu foto se ha subido')\n                //Guardar la foto en la BD\n                savePhotoInDB(url, user)\n                //Ocultar el progreso\n                hideProgress()\n                //Para que despues de tres segunos borre el contendio del html pa poder tomar otra foto\n                setTimeout(() => output.innerHTML = '', 3000)\n                //Vuelva a tener acceso al video\n                cameraRest()\n              })\n              .catch(err => output.innerHTML = errorMsg(`${err.mesagge}`, err))\n          })\n\n        })\n\n  }\n  /*img pra mostrar la captura del video, para generar\n  una captura de un video se usa una Api de canvas\n  canvas es el source que almacenara <img>*/\n  /*download con esta propiedad se puede descargarel contenido que se tenga es decir\n  guardar la imagen generar una imagen unica se uso ramdon y\n  cada vez que se descarge una imgane sera selfie1234 */\n},100)\n  return  `\n  <article id=\"camera-app\" class=\"Camera  Content-section  u-hide\">\n  <video muted id=\"camera-stream\" class=\"Camera-video\" ></video>\n  <img id=\"photo\" class=\"Camera-photo\"  >\n  <nav class=\"Camera-menu\">\n    <button id=\"start-camera\" title=\"Iniciar Cámara\"><i class=\"fa fa-power-off\"></i></button>\n    <button id=\"take-photo\" title=\"Tomar Foto\"><i class=\"fa fa-camera\"></i></button>\n    <button class=\"u-disabled\" id=\"delete-photo\" title=\"Borrar Foto\"><i class=\"fa fa-trash\"></i></button>\n    <button class=\"u-disabled\" id=\"upload-photo\" title=\"Subir Foto\"><i class=\"fa fa-upload\"></i></button>\n    <button class=\"u-disabled\" id=\"download-photo\" title=\"Guardar Foto\"><a href=\"#\" download=\"selfie_${Math.floor(Math.random() * 10000000)}.png\"><i class=\"fa fa-download\"></i></a></button>\n  </nav>\n  <canvas id=\"canvas-snap\" ></canvas>\n  ${progressBar()}\n</article>\n  `\n}\n\nexport default camera\n\n\n\n// WEBPACK FOOTER //\n// ./components/camera.js","import { createSubscribe, deepCopy, deepExtend, ErrorFactory, patchProperty } from '@firebase/util';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\n// An array to capture listeners before the true auth functions\r\n// exist\r\nvar tokenListeners = [];\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.services_ = {};\r\n        this.name_ = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = deepCopy(options);\r\n        this.INTERNAL = {\r\n            getUid: function () { return null; },\r\n            getToken: function () { return Promise.resolve(null); },\r\n            addAuthTokenListener: function (callback) {\r\n                tokenListeners.push(callback);\r\n                // Make sure callback is called, asynchronously, in the absence of the auth module\r\n                setTimeout(function () { return callback(null); }, 0);\r\n            },\r\n            removeAuthTokenListener: function (callback) {\r\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this._automaticDataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this._automaticDataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            var services = [];\r\n            Object.keys(_this.services_).forEach(function (serviceKey) {\r\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\r\n                    services.push(_this.services_[serviceKey][instanceKey]);\r\n                });\r\n            });\r\n            return Promise.all(services.map(function (service) {\r\n                return service.INTERNAL.delete();\r\n            }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n            _this.services_ = {};\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage is the only one that is leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        if (!this.services_[name]) {\r\n            this.services_[name] = {};\r\n        }\r\n        if (!this.services_[name][instanceIdentifier]) {\r\n            /**\r\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n             * then we will pass that instance on, otherwise we pass `null`\r\n             */\r\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\r\n                ? instanceIdentifier\r\n                : undefined;\r\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\r\n            this.services_[name][instanceIdentifier] = service;\r\n        }\r\n        return this.services_[name][instanceIdentifier];\r\n    };\r\n    /**\r\n     * Callback function used to extend an App instance at the time\r\n     * of service instance creation.\r\n     */\r\n    FirebaseAppImpl.prototype.extendApp = function (props) {\r\n        var _this = this;\r\n        // Copy the object onto the FirebaseAppImpl prototype\r\n        deepExtend(this, props);\r\n        /**\r\n         * If the app has overwritten the addAuthTokenListener stub, forward\r\n         * the active token listeners on to the true fxn.\r\n         *\r\n         * TODO: This function is required due to our current module\r\n         * structure. Once we are able to rely strictly upon a single module\r\n         * implementation, this code should be refactored and Auth should\r\n         * provide these stubs and the upgrade logic\r\n         */\r\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\r\n            tokenListeners.forEach(function (listener) {\r\n                _this.INTERNAL.addAuthTokenListener(listener);\r\n            });\r\n            tokenListeners = [];\r\n        }\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            error('app-deleted', { name: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var apps_ = {};\r\n    var factories = {};\r\n    var appHooks = {};\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        app: app,\r\n        apps: null,\r\n        Promise: Promise,\r\n        SDK_VERSION: '4.13.0',\r\n        INTERNAL: {\r\n            registerService: registerService,\r\n            createFirebaseNamespace: createFirebaseNamespace,\r\n            extendNamespace: extendNamespace,\r\n            createSubscribe: createSubscribe,\r\n            ErrorFactory: ErrorFactory,\r\n            removeApp: removeApp,\r\n            factories: factories,\r\n            useAsService: useAsService,\r\n            Promise: Promise,\r\n            deepExtend: deepExtend\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    patchProperty(namespace, 'default', namespace);\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        var app = apps_[name];\r\n        callAppHooks(app, 'delete');\r\n        delete apps_[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps_, name)) {\r\n            error('no-app', { name: name });\r\n        }\r\n        return apps_[name];\r\n    }\r\n    patchProperty(app, 'App', FirebaseAppImpl);\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            error('bad-app-name', { name: name + '' });\r\n        }\r\n        if (contains(apps_, name)) {\r\n            error('duplicate-app', { name: name });\r\n        }\r\n        var app = new FirebaseAppImpl(options, config, namespace);\r\n        apps_[name] = app;\r\n        callAppHooks(app, 'create');\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\r\n    }\r\n    /*\r\n     * Register a Firebase Service.\r\n     *\r\n     * firebase.INTERNAL.registerService()\r\n     *\r\n     * TODO: Implement serviceProperties.\r\n     */\r\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\r\n        // Cannot re-register a service that already exists\r\n        if (factories[name]) {\r\n            error('duplicate-service', { name: name });\r\n        }\r\n        // Capture the service factory for later service instantiation\r\n        factories[name] = createService;\r\n        // Capture the appHook, if passed\r\n        if (appHook) {\r\n            appHooks[name] = appHook;\r\n            // Run the **new** app hook on all existing apps\r\n            getApps().forEach(function (app) {\r\n                appHook('create', app);\r\n            });\r\n        }\r\n        // The Service namespace is an accessor function ...\r\n        var serviceNamespace = function (appArg) {\r\n            if (appArg === void 0) { appArg = app(); }\r\n            if (typeof appArg[name] !== 'function') {\r\n                // Invalid argument.\r\n                // This happens in the following case: firebase.storage('gs:/')\r\n                error('invalid-app-argument', { name: name });\r\n            }\r\n            // Forward service instance lookup to the FirebaseApp.\r\n            return appArg[name]();\r\n        };\r\n        // ... and a container for service-level properties.\r\n        if (serviceProperties !== undefined) {\r\n            deepExtend(serviceNamespace, serviceProperties);\r\n        }\r\n        // Monkey-patch the serviceNamespace onto the firebase namespace\r\n        namespace[name] = serviceNamespace;\r\n        // Patch the FirebaseAppImpl prototype\r\n        FirebaseAppImpl.prototype[name] = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var serviceFxn = this._getService.bind(this, name);\r\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\r\n        };\r\n        return serviceNamespace;\r\n    }\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        deepExtend(namespace, props);\r\n    }\r\n    function callAppHooks(app, eventName) {\r\n        Object.keys(factories).forEach(function (serviceName) {\r\n            // Ignore virtual services\r\n            var factoryName = useAsService(app, serviceName);\r\n            if (factoryName === null) {\r\n                return;\r\n            }\r\n            if (appHooks[factoryName]) {\r\n                appHooks[factoryName](eventName, app);\r\n            }\r\n        });\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        var options = app.options;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\r\nfunction error(code, args) {\r\n    throw appErrors.create(code, args);\r\n}\r\n// TypeScript does not support non-string indexes!\r\n// let errors: {[code: AppError: string} = {\r\nvar errors = {\r\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    'bad-app-name': \"Illegal App name: '{$name}\",\r\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\r\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\r\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\r\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\r\n        'account is only allowed in a Node.js environment. On client ' +\r\n        'devices, you should instead initialize the SDK with an api key and ' +\r\n        'auth domain',\r\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nvar appErrors = new ErrorFactory('app', 'Firebase', errors);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar firebase = createFirebaseNamespace();\n\nexport default firebase;\nexport { firebase };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/@firebase/app/dist/index.esm.js\n// module id = VxYX\n// module chunks = 0","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar firebase = require('./app');\nrequire('./auth');\nrequire('./database');\nrequire('./messaging');\nrequire('./storage');\n\nmodule.exports = firebase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/firebase/index.js\n// module id = YiEk\n// module chunks = 0","const header = () => (`\n  <header class=\"Header u-fixed\">\n  <h1 class=\"Header-logo\">EDgram</h1>\n  </header>\n  `)\n\nexport default header\n\n// u-fiexd es una clase auxiliar\n\n\n\n// WEBPACK FOOTER //\n// ./components/header.js","import firebase from 'firebase'\nimport app from './app'\nimport { pwa, isOnLine } from './helpers/init';\n\n\nconst d = document,\n  c = console.log\n\n//Codigo para logguearme\nconst githubSignIn = () => {\n  const provider = new firebase.auth.GithubAuthProvider()\n  firebase.auth().signInWithPopup(provider)\n    .then(result => c(`${result.user.email} ha iniciado sesión con GitHub`, result))\n    .catch(err => c(`Error: ${err.code}: ${err.message}`))\n}\n\n//Codigo para desconectarme de github\nconst githubSignOut = () => {\n  firebase.auth().signOut()\n  .then( () => c('Te has desconectado correctamente de GitHub') )\n  .catch( () => c('Ocurrió un error al desconectarse de GitHub') )\n\n}\n\n//Permite conectarse\nconst signIn = () => {\n  //busca un selector valido\n  d.addEventListener('click', e => {\n    if (e.target.matches('.Sign-button'))\n      //alert(\"Solicitando permiso github\")\n      githubSignIn()\n  })\n  //retorna un codigo html y se activa la clase app\n  return `\n    <div class=\"Sign\">\n      <h1 class=\"Sign-title\">EDgram</h1>\n      <button class=\"Sign-button\">\n        <i class=\"fa fa-sign-in\"></i>\n        Entra con\n        <i class=\"fa fa-github\"></i>\n      </button>\n    </div>\n  `\n}\n\n//Permite desconectarme\nexport const signOut = () => {\n  d.addEventListener('click', e => {\n    if ( e.target.matches('.logout') )\n      githubSignOut()\n  })\n\n  return `\n    <button class=\"logout\" title=\"Salir\">\n      <i class=\"logout fa fa-sign-out\"></i>\n    </button>\n  `\n}\n\n/*va a revisar el estado de la conexion\nEvalua si el usuario esta activo y tiene credenciales validas*/\nexport const isAuth = () => {\n  firebase.auth().onAuthStateChanged(user => {\n    const EDgram = d.querySelector('.EDgram')\n    // c(user)\n\n    if ( user ) {\n      EDgram.innerHTML = app()\n      EDgram.classList.add('u-jc-flex-start')\n      pwa()\n      //c('Usuario Autenticado')\n    } else {\n      EDgram.innerHTML = signIn()\n      EDgram.classList.remove('u-jc-flex-start')\n      //c('Usuario NO Autenticado')\n    }\n\n    isOnLine()\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/auth.js","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nrequire('@firebase/storage');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/firebase/storage/index.js\n// module id = bvzA\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/@firebase/polyfill/node_modules/whatwg-fetch/fetch.js\n// module id = cpTA\n// module chunks = 0","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = require('@firebase/database');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/firebase/database/index.js\n// module id = fsyv\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/webpack/buildin/global.js\n// module id = h6ac\n// module chunks = 0","export const progressBar = () => (`\n<div class=\"Progress  u-hide\">\n<progress value=\"0\" max=\"100\" class=\"Progress-bar\"></progress>\n<span class=\"Progress-advance\"></span>\n</div>\n<div class=\"Progress-output\"></div>\n`)\n\n/*Progress-output Impirmir en pantalla las imagenes o\nlos errores*/\n\n//Recibe datos del snapshock de firebase\nexport const progressStatus = data => {\n  const d = document,\n    c = console.log,\n    progress = d.querySelectorAll('.Progress'),\n    progressBar = d.querySelectorAll('.Progress-bar'),\n    progressAdvance = d.querySelectorAll('.Progress-advance'),\n    progressOutPut = d.querySelectorAll('.Progress-output')\n\n  progress.forEach(progress => {\n    let advance = Math.floor( ( data.bytesTransferred / data.totalBytes ) * 100 )\n    progress.querySelector('.Progress-bar').value = advance\n    progress.querySelector('.Progress-advance').innerHTML = `${advance} %`\n    //c(advance)\n  })\n}\n\n\n\n\nexport const showProgress = () => document.querySelectorAll('.Progress').forEach(bar => bar.classList.remove('u-hide'))\n\n//Para limpiar el proceso la barra\nexport const hideProgress = () => document.querySelectorAll('.Progress').forEach(bar => bar.classList.add('u-hide'))\n//Para resetear el proceso\nexport const cleanProgress = ()=>{\nconst d =document\nd.querySelectorAll('.Progress-output').forEach(output =>output.innerHTML=\"\")\nd.querySelectorAll('.Progress-bar').forEach(bar => bar.value=0)\nd.querySelectorAll('.Progress-advance').forEach(advance =>advance.innerHTML=\"\")\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/upload_progress.js","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar firebase = require('./app');\nrequire('./auth');\nrequire('./database');\nrequire('./messaging');\nrequire('./storage');\n\nmodule.exports = firebase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/Firebase/index.js\n// module id = jnwl\n// module chunks = 0","import firebase from 'firebase'\n\n  const config = {\n    apiKey: \"AIzaSyCRd5uXBz9IrBl6LGfCexOqgFfbShpr0sc\",\n    authDomain: \"edgram-224016.firebaseapp.com\",\n    databaseURL: \"https://edgram-224016.firebaseio.com\",\n    projectId: \"edgram-224016\",\n    storageBucket: \"edgram-224016.appspot.com\",\n    messagingSenderId: \"1011889377331\"\n  },\n  d=document,\n  w=window,\n  n=navigator,\n  c=console.log\n\n  export const init = () =>firebase.initializeApp(config)\n\n\n  export const pwa =() =>{\n    //Aqui va a contener todas las validaciones\n    //Registro de SW\n  if ('serviceWorker' in n) {\n    n.serviceWorker.register('./sw.js')\n      .then(registration => {\n        c(registration)\n        c(\n          'Service Worker registrado con éxito',\n          registration.scope\n        )\n      })\n      .catch(err => c(`Registro de Service Worker fallido`, err))\n  }\n\n  //Activar Notificaciones\n  if (w.Notification && Notification.permission !== 'denied') {\n    Notification.requestPermission(status => {\n      console.log(status)\n      let n = new Notification('EDgram', {\n        body: 'Bienvenid@ :)',\n        icon: './icon_192x192.png'\n      })\n    })\n  }\n\n  //Activar Sincronización de Fondo\n  if ('serviceWorker' in n && 'SyncManager' in w) {\n    function registerBGSync() {\n      n.serviceWorker.ready\n        .then(registration => {\n          return registration.sync.register('github')\n            .then(() => c('Sincronización de Fondo Registrada'))\n            .catch(err => c('Fallo la Sincronización de Fondo', err))\n        })\n    }\n\n    registerBGSync()\n  }\n}\n\n\nexport const isOnLine = () => {\n  //Detección del Estado de la Conexión\n  const header = d.querySelector('.Header'),\n    footer = d.querySelector('.Footer'),\n    metaTagTheme = d.querySelector('meta[name=theme-color]')\n\n  function networkStatus(e) {\n    c(e, e.type)\n\n    if (n.onLine) {\n      metaTagTheme.setAttribute('content', '#F7DF1E')\n      header.classList.remove('u-offline')\n      footer.classList.remove('u-offline')\n      alert('Conexión Recuperada :)')\n    } else {\n      metaTagTheme.setAttribute('content', '#666')\n      header.classList.add('u-offline')\n      footer.classList.add('u-offline')\n      alert('Conexión Perdida :(')\n    }\n  }\n\n  w.addEventListener('online', networkStatus)\n  w.addEventListener('offline', networkStatus)\n}\n\n\nexport const ga = () => {\n  const _gaq = _gaq || [];\n  _gaq.push(['_setAccount', 'UA-XXXXXXXX-X']);\n  _gaq.push(['_setDomainName', 'jonmircha.github.io/edgram']);\n  _gaq.push(['_trackPageview']);\n  (function () {\n    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n  })();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/helpers/init.js","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nrequire('@firebase/storage');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/Firebase/storage/index.js\n// module id = k+HB\n// module chunks = 0","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nrequire('@firebase/polyfill');\nmodule.exports = require('@firebase/app').default;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/firebase/app/index.js\n// module id = niZR\n// module chunks = 0","import firebase from 'firebase'\nconst profile = () => {\nconst d = document,\nc = console.log,\nuser = firebase.auth().currentUser,\ndbRef=firebase.database().ref().child('photos')\nlet profilePhotos=''\n\n/*Todo el codigo de programacion asincrono y que interactue con\ncodigo html dinamico cono el retur , va a cargar\n10 milisegundos despues de que carge el DOM*/\n\nconst profileScripts= setInterval(()=>{\n  if(d.readyState ==='complete'){\n    //Para limpiar\n    clearInterval(profileScripts)\n    //esto es una coll back  para ver como estan los datos en la BD en tiempo real\n    //solo al momento de cargar es decir solo una vez\n    dbRef.once('value', data=>{\n      //once extraela foto por la primera vez\n      //valor de la propiedad de los datos key\n      //Ver los valores val()\n      //c(data, data.key, data.val())\n      //Por cada dato que traiga la bd\n      /*comparar  va a ser comparado con el uid de el usuario con el que\n      se loogeo*/\n      data.forEach(photo =>{\n      if(photo.val().uid===user.uid){\n        //concateno una img\n        profilePhotos += `<img src=\"${photo.val().photoURL}\">`\n      }\n      })\n      /*Que en el selector de profile photo guarde el valor\n       de dicha foto profilePhotos*/\n      d.querySelector(\".Profile-photos\").innerHTML=profilePhotos\n    })\n    //Cada vez que tome una nueva foto lo detecte y lo envie al timeline del profile\n    dbRef.on('child_added', data=>{\n      /*va agregando al elemento de las fotos las imagenes\n      deacuerdo a como se va tomando*/\n      if(data.val().uid===user.uid){\n        //Cuando se detecte un contenido nuevo se agrege la imagen que se esta obteniendoo\n        d.querySelector(\".Profile-photos\").innerHTML += `<img src=\"${data.val().photoURL}\">`\n      }\n      })\n\n  }\n},100)\n  return  `\n  <article class=\"Profile  Content-section  u-hide\">\n  <h2 class=\"Profile-name\">${user.displayName}</h2>\n  <p class=\"Profile-email\">${user.email}</p>\n  <img class=\"Profile-avatar\" src=\"${user.photoURL}\"></img>\n  <h3 class='u-title'>Tus Fotos</h3>\n  <aside class=\"Profile-photos\"></aside>\n\n  </article>\n  `\n}\n\nexport default profile\n//<p>${user.uid}</p> con este muestras el id de la foto\n\n\n\n// WEBPACK FOOTER //\n// ./components/profile.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/process/browser.js\n// module id = pBGv\n// module chunks = 0","import header from './header'\nimport footer from './footer'\nimport profile from './profile'\nimport timeline from './timeline'\nimport uploader from './uploader'\nimport camera from './camera'\n\n//Retorno implicito cuando ahi poco codigo\nconst app = () => (`\n${header()}\n  <section class=\"Content\">\n    ${profile()}\n    ${timeline()}\n    ${camera()}\n    ${uploader()}\n  </section>\n  ${footer()}\n`)\n\n\nexport default app\n\n\n\n// WEBPACK FOOTER //\n// ./components/app.js","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/setimmediate/setImmediate.js\n// module id = qrAv\n// module chunks = 0","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/@firebase/util/node_modules/tslib/tslib.es6.js\n// module id = rjHE\n// module chunks = 0","export const errorMsg=(msg,err)=>{\n  console.log(err)\n  return `\n  <div class=\"Message-error\">\n  <p>Error:<b>${msg}</b><i class=\"fa fa-frown-o\"></i></p>\n  </div>\n  `\n}\n\nexport const successMsg=(msg)=>{\n\n  return `\n  <div class=\"Message-success\">\n  <p>Exito:<b>${msg}</b><i class=\"fa fa-smile-o\"></i></p>\n  </div>\n  `\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/helpers/messages.js","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nrequire('@firebase/messaging');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/firebase/messaging/index.js\n// module id = u48Y\n// module chunks = 0","import firebase from 'firebase'\nimport { progressBar, progressStatus, showProgress, hideProgress } from './upload_progress'\nimport { errorMsg, successMsg } from './helpers/messages'\nimport { savePhotoInDB } from './helpers/photos_db'\n\nconst uploader = () => {\n  const d = document,\n    c = console.log\n  /*Todo el codigo de programacion asincrono y que interactue con\n  codigo html dinamico cono el retur , va a cargar\n  10 milisegundos despues de que carge el DOM*/\n\n  const uploaderScripts = setInterval(() => {\n    if (d.readyState === 'complete') {\n      //Para limpiar\n      clearInterval(uploaderScripts)\n\n      const storageRef = firebase.storage().ref().child('photos'),\n        dbRef = firebase.database().ref().child('photo'),\n        //Solicita el servicio de firebase auth, currenUser es el usuario actual\n        user = firebase.auth().currentUser,\n        //Guardar en una variable el formulario\n        form = d.getElementById('upload'),\n        uploader = d.getElementById('uploader'),\n        output = d.querySelector('.Uploader').querySelector('.Progress-output')\n\n      uploader.addEventListener('change', e => {\n        //alert('funciona')\n        //Muestra en formato JSON los archivos de las fotos que subo\n        //c(e.target.files)\n        //Aqui donde imprimire los mensajes o imagenes que se vallan subiendo\n        output.innerHTML=''\n\n        Array.from(e.target.files).forEach(file => {\n          //c(e.target.files, file)\n          //Valida que se suba una imagen con elformato correcto\n          if (file.type.match('image.*')) {\n          //c('Subimos')\n          //output.innerHTML=successMsg('Tu archivo si es una imagen')\n          let uploadTask = storageRef.child(file.name).put(file)\n\n          uploadTask.on('state_changed', data =>{\n            //Envia datos  c(data)\n            showProgress()\n            progressStatus(data)\n\n          },err =>{\n            //Si desactivo el serviceWorked se desconecta el firebase tabn\n            //c(err, err.code,err.message)\n            output.innerHTML=errorMsg(`${err.message}%`, err)\n          },()=>{\n            //visualizar la foto\n            //obtiene la URL getDownloadURL y es unapromesa y nos devuelve una url\n            storageRef.child(file.name).getDownloadURL()\n            .then( url =>{\n              c(url)\n              //Insertar  codigo html insertAdjacentHTML\n              output.insertAdjacentHTML(\n                'afterbegin',\n                `${successMsg('Tu Foto se ah subido')}\n              <img src=\"${url}\">`)\n              //user se crear al momento de indicar la autenticacion\n              savePhotoInDB(url,user)\n\n              //Limpiar la pantalla cuando se sube una imagen\n              hideProgress()\n\n            })\n            .catch(err => output.innerHTML=errorMsg(`${err.message}`, err) )\n          })\n          //output.innerHTML=successMsg('Tu archivo si es una imagen')\n        }else{\n          //c('No subimos')\n          output.innerHTML=errorMsg('Tu archivo debe ser una imagen', null)\n        }\n      })\n      form.reset()\n      })\n      //c(user)\n\n\n      /*Otro MODO\n      //storage manda a llamar el servicio de lamacenamento de storage\n      const storage= firebase.storage(),\n      //bucket va a ser la referencia a mi careta virtual de mi servico de firebase\n      bucket=storage.ref(),\n      //photosRef va a ser la referencia crear un hijo que se llame photos\n      photosRef=bucket.child('photo'),\n      Referencia al servicio de mi sevicio, luego a la referencia,luego al objeto Json crea unn\n      objeto que se llame foto y ahi guarda la descripcion de las photos\n      fileRef=firebase.database().ref().child('photo'),\n      user= firebase.auth().currentUser\n      */\n\n    }\n  }, 100)\n\n  return `\n  <article class=\"Uploader  Content-section  u-hide\">\n  <h2 class=\"u-title\">Sube tus Fotos</h2>\n  <form name=\"upload\" id=\"upload\">\n    <input type=\"file\" id=\"uploader\" multiple>\n    <label for=\"uploader\">\n      <i class=\"fa fa-cloud-upload\" title =\"Subir Foto(s)\"></i>\n    </label>\n  </form>\n  ${progressBar()}\n</article>\n  `\n}\n\nexport default uploader\n\n\n\n// WEBPACK FOOTER //\n// ./components/uploader.js","import 'whatwg-fetch';\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  this._state = 0;\n  this._handled = false;\n  this._value = undefined;\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = function(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n};\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\nif (!globalNS.Promise) {\n  globalNS.Promise = Promise;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar _global = createCommonjsModule(function (module) {\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n});\n\nvar _core = createCommonjsModule(function (module) {\nvar core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n});\nvar _core_1 = _core.version;\n\nvar _isObject = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\nvar _anObject = function (it) {\n  if (!_isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\nvar _fails = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n// Thank's IE8 for his funny defineProperty\nvar _descriptors = !_fails(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\nvar document = _global.document;\n// typeof document.createElement is 'object' in old IE\nvar is = _isObject(document) && _isObject(document.createElement);\nvar _domCreate = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\nvar _ie8DomDefine = !_descriptors && !_fails(function () {\n  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\n\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nvar _toPrimitive = function (it, S) {\n  if (!_isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\nvar dP = Object.defineProperty;\n\nvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  _anObject(O);\n  P = _toPrimitive(P, true);\n  _anObject(Attributes);\n  if (_ie8DomDefine) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\nvar _objectDp = {\n\tf: f\n};\n\nvar _propertyDesc = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\nvar _hide = _descriptors ? function (object, key, value) {\n  return _objectDp.f(object, key, _propertyDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\nvar hasOwnProperty = {}.hasOwnProperty;\nvar _has = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\nvar id = 0;\nvar px = Math.random();\nvar _uid = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\nvar _redefine = createCommonjsModule(function (module) {\nvar SRC = _uid('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\n_core.inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) _has(val, 'name') || _hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === _global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    _hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    _hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n});\n\nvar _aFunction = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n// optional / simple context binding\n\nvar _ctx = function (fn, that, length) {\n  _aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\n    // extend global\n    if (target) _redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) _hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\n_global.core = _core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nvar _export = $export;\n\nvar toString = {}.toString;\n\nvar _cof = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\n// eslint-disable-next-line no-prototype-builtins\nvar _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return _cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n// 7.2.1 RequireObjectCoercible(argument)\nvar _defined = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n// 7.1.13 ToObject(argument)\n\nvar _toObject = function (it) {\n  return Object(_defined(it));\n};\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nvar _toInteger = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n// 7.1.15 ToLength\n\nvar min = Math.min;\nvar _toLength = function (it) {\n  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n// 7.2.2 IsArray(argument)\n\nvar _isArray = Array.isArray || function isArray(arg) {\n  return _cof(arg) == 'Array';\n};\n\nvar SHARED = '__core-js_shared__';\nvar store = _global[SHARED] || (_global[SHARED] = {});\nvar _shared = function (key) {\n  return store[key] || (store[key] = {});\n};\n\nvar _wks = createCommonjsModule(function (module) {\nvar store = _shared('wks');\n\nvar Symbol = _global.Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n});\n\nvar SPECIES = _wks('species');\n\nvar _arraySpeciesConstructor = function (original) {\n  var C;\n  if (_isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || _isArray(C.prototype))) C = undefined;\n    if (_isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\n\n\nvar _arraySpeciesCreate = function (original, length) {\n  return new (_arraySpeciesConstructor(original))(length);\n};\n\n// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\n\n\n\n\n\nvar _arrayMethods = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || _arraySpeciesCreate;\n  return function ($this, callbackfn, that) {\n    var O = _toObject($this);\n    var self = _iobject(O);\n    var f = _ctx(callbackfn, that, 3);\n    var length = _toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = _wks('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) _hide(ArrayProto, UNSCOPABLES, {});\nvar _addToUnscopables = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\n\nvar $find = _arrayMethods(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n_export(_export.P + _export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY);\n\nvar find = _core.Array.find;\n\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\n\nvar $find$1 = _arrayMethods(6);\nvar KEY$1 = 'findIndex';\nvar forced$1 = true;\n// Shouldn't skip holes\nif (KEY$1 in []) Array(1)[KEY$1](function () { forced$1 = false; });\n_export(_export.P + _export.F * forced$1, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY$1);\n\nvar findIndex = _core.Array.findIndex;\n\n// 7.2.8 IsRegExp(argument)\n\n\nvar MATCH = _wks('match');\nvar _isRegexp = function (it) {\n  var isRegExp;\n  return _isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : _cof(it) == 'RegExp');\n};\n\n// helper for String#{startsWith, endsWith, includes}\n\n\n\nvar _stringContext = function (that, searchString, NAME) {\n  if (_isRegexp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(_defined(that));\n};\n\nvar MATCH$1 = _wks('match');\nvar _failsIsRegexp = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH$1] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n_export(_export.P + _export.F * _failsIsRegexp(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = _stringContext(this, searchString, STARTS_WITH);\n    var index = _toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n\nvar startsWith = _core.String.startsWith;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/@firebase/polyfill/dist/index.esm.js\n// module id = wGjj\n// module chunks = 0","import firebase from '@firebase/app';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain and scheme for API calls.\r\n */\r\nvar domainBase = 'https://firebasestorage.googleapis.com';\r\n/**\r\n * Domain and scheme for object downloads.\r\n */\r\nvar downloadBase = 'https://firebasestorage.googleapis.com';\r\n/**\r\n * Base URL for non-upload calls to the API.\r\n */\r\nvar apiBaseUrl = '/v0';\r\n/**\r\n * Base URL for upload calls to the API.\r\n */\r\nvar apiUploadBaseUrl = '/v0';\r\nvar configOption = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n */\r\nvar defaultMaxOperationRetryTime = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n */\r\nvar defaultMaxUploadRetryTime = 10 * 60 * 100;\r\n/**\r\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\r\n * enough for us to use it directly.\r\n */\r\nvar minSafeInteger = -9007199254740991;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FirebaseStorageError = /** @class */ (function () {\r\n    function FirebaseStorageError(code, message) {\r\n        this.code_ = prependCode(code);\r\n        this.message_ = 'Firebase Storage: ' + message;\r\n        this.serverResponse_ = null;\r\n        this.name_ = 'FirebaseError';\r\n    }\r\n    FirebaseStorageError.prototype.codeProp = function () {\r\n        return this.code;\r\n    };\r\n    FirebaseStorageError.prototype.codeEquals = function (code) {\r\n        return prependCode(code) === this.codeProp();\r\n    };\r\n    FirebaseStorageError.prototype.serverResponseProp = function () {\r\n        return this.serverResponse_;\r\n    };\r\n    FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\r\n        this.serverResponse_ = serverResponse;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\r\n        get: function () {\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\r\n        get: function () {\r\n            return this.code_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\r\n        get: function () {\r\n            return this.message_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        get: function () {\r\n            return this.serverResponse_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}());\r\nvar Code = {\r\n    // Shared between all platforms\r\n    UNKNOWN: 'unknown',\r\n    OBJECT_NOT_FOUND: 'object-not-found',\r\n    BUCKET_NOT_FOUND: 'bucket-not-found',\r\n    PROJECT_NOT_FOUND: 'project-not-found',\r\n    QUOTA_EXCEEDED: 'quota-exceeded',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    UNAUTHORIZED: 'unauthorized',\r\n    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\r\n    INVALID_CHECKSUM: 'invalid-checksum',\r\n    CANCELED: 'canceled',\r\n    // JS specific\r\n    INVALID_EVENT_NAME: 'invalid-event-name',\r\n    INVALID_URL: 'invalid-url',\r\n    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\r\n    NO_DEFAULT_BUCKET: 'no-default-bucket',\r\n    CANNOT_SLICE_BLOB: 'cannot-slice-blob',\r\n    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\r\n    NO_DOWNLOAD_URL: 'no-download-url',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\r\n    APP_DELETED: 'app-deleted',\r\n    INVALID_ROOT_OPERATION: 'invalid-root-operation',\r\n    INVALID_FORMAT: 'invalid-format',\r\n    INTERNAL_ERROR: 'internal-error'\r\n};\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new FirebaseStorageError(Code.UNKNOWN, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\r\n}\r\nfunction unauthorized(path) {\r\n    return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(index, fnName, message) {\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\r\n}\r\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\r\n    var countPart;\r\n    var plural;\r\n    if (argMin === argMax) {\r\n        countPart = argMin;\r\n        plural = argMin === 1 ? 'argument' : 'arguments';\r\n    }\r\n    else {\r\n        countPart = 'between ' + argMin + ' and ' + argMax;\r\n        plural = 'arguments';\r\n    }\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' +\r\n        fnName +\r\n        '`: Expected ' +\r\n        countPart +\r\n        ' ' +\r\n        plural +\r\n        ', received ' +\r\n        real +\r\n        '.');\r\n}\r\nfunction appDeleted() {\r\n    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StringFormat = {\r\n    RAW: 'raw',\r\n    BASE64: 'base64',\r\n    BASE64URL: 'base64url',\r\n    DATA_URL: 'data_url'\r\n};\r\nfunction formatValidator(stringFormat) {\r\n    switch (stringFormat) {\r\n        case StringFormat.RAW:\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n        case StringFormat.DATA_URL:\r\n            return;\r\n        default:\r\n            throw 'Expected one of the event types: [' +\r\n                StringFormat.RAW +\r\n                ', ' +\r\n                StringFormat.BASE64 +\r\n                ', ' +\r\n                StringFormat.BASE64URL +\r\n                ', ' +\r\n                StringFormat.DATA_URL +\r\n                '].';\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, opt_contentType) {\r\n        this.data = data;\r\n        this.contentType = opt_contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, string) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(string));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, string));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(string), dataURLContentType_(string));\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(string) {\r\n    var b = [];\r\n    for (var i = 0; i < string.length; i++) {\r\n        var c = string.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) == 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < string.length - 1 &&\r\n                        (string.charCodeAt(i + 1) & 64512) == 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = string.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) == 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(string) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(string);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, string) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = string.indexOf('-') !== -1;\r\n            var hasUnder = string.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = string.indexOf('+') !== -1;\r\n            var hasSlash = string.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            string = string.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = atob(string);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(string) {\r\n    var parts = new DataURLParts(string);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(string) {\r\n    var parts = new DataURLParts(string);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TaskEvent = {\r\n    /** Triggered whenever the task changes or progress is updated. */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\nvar InternalTaskState = {\r\n    RUNNING: 'running',\r\n    PAUSING: 'pausing',\r\n    PAUSED: 'paused',\r\n    SUCCESS: 'success',\r\n    CANCELING: 'canceling',\r\n    CANCELED: 'canceled',\r\n    ERROR: 'error'\r\n};\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case InternalTaskState.RUNNING:\r\n        case InternalTaskState.PAUSING:\r\n        case InternalTaskState.CANCELING:\r\n            return TaskState.RUNNING;\r\n        case InternalTaskState.PAUSED:\r\n            return TaskState.PAUSED;\r\n        case InternalTaskState.SUCCESS:\r\n            return TaskState.SUCCESS;\r\n        case InternalTaskState.CANCELED:\r\n            return TaskState.CANCELED;\r\n        case InternalTaskState.ERROR:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains methods for working with objects.\r\n */\r\nfunction contains(obj, prop) {\r\n    return Object.prototype.hasOwnProperty.call(obj, prop);\r\n}\r\nfunction forEach(obj, f) {\r\n    for (var key in obj) {\r\n        if (contains(obj, key)) {\r\n            f(key, obj[key]);\r\n        }\r\n    }\r\n}\r\nfunction clone(obj) {\r\n    if (obj == null) {\r\n        return {};\r\n    }\r\n    var c = {};\r\n    forEach(obj, function (key, val) {\r\n        c[key] = val;\r\n    });\r\n    return c;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Implements the promise abstraction interface for external\r\n * (public SDK) packaging, which just passes through to the firebase-app impl.\r\n */\r\n/**\r\n * @template T\r\n * @param {function((function(T): void),\r\n *                  (function(!Error): void))} resolver\r\n */\r\nfunction make(resolver) {\r\n    return new Promise(resolver);\r\n}\r\n/**\r\n * @template T\r\n */\r\nfunction resolve(value) {\r\n    return Promise.resolve(value);\r\n}\r\nfunction reject(error) {\r\n    return Promise.reject(error);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\r\nfunction isDef(p) {\r\n    return p != null;\r\n}\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isObject(p) {\r\n    return typeof p === 'object';\r\n}\r\nfunction isNonNullObject(p) {\r\n    return isObject(p) && p !== null;\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return isObject(p) && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isNumber(p) {\r\n    return typeof p === 'number' || p instanceof Number;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @enum{number}\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\r\nvar NetworkXhrIo = /** @class */ (function () {\r\n    function NetworkXhrIo() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = make(function (resolve$$1, reject$$1) {\r\n            _this.xhr_.addEventListener('abort', function (event) {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve$$1(_this);\r\n            });\r\n            _this.xhr_.addEventListener('error', function (event) {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve$$1(_this);\r\n            });\r\n            _this.xhr_.addEventListener('load', function (event) {\r\n                resolve$$1(_this);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.send = function (url, method, opt_body, opt_headers) {\r\n        var _this = this;\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (isDef(opt_headers)) {\r\n            var headers = opt_headers;\r\n            forEach(headers, function (key, val) {\r\n                _this.xhr_.setRequestHeader(key, val.toString());\r\n            });\r\n        }\r\n        if (isDef(opt_body)) {\r\n            this.xhr_.send(opt_body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return NetworkXhrIo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar XhrIoPool = /** @class */ (function () {\r\n    function XhrIoPool() {\r\n    }\r\n    XhrIoPool.prototype.createXhrIo = function () {\r\n        return new NetworkXhrIo();\r\n    };\r\n    return XhrIoPool;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var path = '(/([^?#]*).*)?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var httpRegex = new RegExp('^https?://firebasestorage\\\\.googleapis\\\\.com/' +\r\n            version +\r\n            '/b/' +\r\n            bucketDomain +\r\n            '/o' +\r\n            path, 'i');\r\n        var httpIndices = { bucket: 1, path: 3 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            { regex: httpRegex, indices: httpIndices, postModify: httpModify }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length == 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) {\r\n        return component.length > 0;\r\n    })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeNormalUrl(urlPart) {\r\n    return domainBase + apiBaseUrl + urlPart;\r\n}\r\nfunction makeDownloadUrl(urlPart) {\r\n    return downloadBase + apiBaseUrl + urlPart;\r\n}\r\nfunction makeUploadUrl(urlPart) {\r\n    return domainBase + apiUploadBaseUrl + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    forEach(params, function (key, val) {\r\n        var nextPart = encode(key) + '=' + encode(val);\r\n        queryPart = queryPart + nextPart + '&';\r\n    });\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, opt_local, opt_writable, opt_xform) {\r\n        this.server = server;\r\n        this.local = opt_local || server;\r\n        this.writable = !!opt_writable;\r\n        this.xform = opt_xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    var valid = isString(fullPath);\r\n    if (!valid || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        fullPath = fullPath;\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(metadata, size) {\r\n        if (isDef(size)) {\r\n            return +size;\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    /**\r\n     * Transforms a comma-separated string of tokens into a list of download\r\n     * URLs.\r\n     */\r\n    function xformTokens(metadata, tokens) {\r\n        var valid = isString(tokens) && tokens.length > 0;\r\n        if (!valid) {\r\n            // This can happen if objects are uploaded through GCS and retrieved\r\n            // through list, so we don't want to throw an Error.\r\n            return [];\r\n        }\r\n        var encode = encodeURIComponent;\r\n        var tokensList = tokens.split(',');\r\n        var urls = tokensList.map(function (token) {\r\n            var bucket = metadata['bucket'];\r\n            var path = metadata['fullPath'];\r\n            var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n            var base = makeDownloadUrl(urlPart);\r\n            var queryString = makeQueryString({\r\n                alt: 'media',\r\n                token: token\r\n            });\r\n            return base + queryString;\r\n        });\r\n        return urls;\r\n    }\r\n    mappings.push(new Mapping('downloadTokens', 'downloadURLs', false, xformTokens));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, authWrapper) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return authWrapper.makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(authWrapper, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, authWrapper);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(authWrapper, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(authWrapper, resource, mappings);\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\r\nfunction metadataValidator(p) {\r\n    var validType = p && isObject(p);\r\n    if (!validType) {\r\n        throw 'Expected Metadata object.';\r\n    }\r\n    for (var key in p) {\r\n        var val = p[key];\r\n        if (key === 'customMetadata') {\r\n            if (!isObject(val)) {\r\n                throw 'Expected object for \\'customMetadata\\' mapping.';\r\n            }\r\n        }\r\n        else {\r\n            if (isNonNullObject(val)) {\r\n                throw \"Mapping for '\" + key + \"' cannot be an object.\";\r\n            }\r\n        }\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\r\nfunction validate(name, specs, passed) {\r\n    var minArgs = specs.length;\r\n    var maxArgs = specs.length;\r\n    for (var i = 0; i < specs.length; i++) {\r\n        if (specs[i].optional) {\r\n            minArgs = i;\r\n            break;\r\n        }\r\n    }\r\n    var validLength = minArgs <= passed.length && passed.length <= maxArgs;\r\n    if (!validLength) {\r\n        throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\r\n    }\r\n    for (var i = 0; i < passed.length; i++) {\r\n        try {\r\n            specs[i].validator(passed[i]);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof Error) {\r\n                throw invalidArgument(i, name, e.message);\r\n            }\r\n            else {\r\n                throw invalidArgument(i, name, e);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar ArgSpec = /** @class */ (function () {\r\n    function ArgSpec(validator, opt_optional) {\r\n        var self = this;\r\n        this.validator = function (p) {\r\n            if (self.optional && !isJustDef(p)) {\r\n                return;\r\n            }\r\n            validator(p);\r\n        };\r\n        this.optional = !!opt_optional;\r\n    }\r\n    return ArgSpec;\r\n}());\r\nfunction and_(v1, v2) {\r\n    return function (p) {\r\n        v1(p);\r\n        v2(p);\r\n    };\r\n}\r\nfunction stringSpec(opt_validator, opt_optional) {\r\n    function stringValidator(p) {\r\n        if (!isString(p)) {\r\n            throw 'Expected string.';\r\n        }\r\n    }\r\n    var validator;\r\n    if (opt_validator) {\r\n        validator = and_(stringValidator, opt_validator);\r\n    }\r\n    else {\r\n        validator = stringValidator;\r\n    }\r\n    return new ArgSpec(validator, opt_optional);\r\n}\r\nfunction uploadDataSpec() {\r\n    function validator(p) {\r\n        var valid = p instanceof Uint8Array ||\r\n            p instanceof ArrayBuffer ||\r\n            (isNativeBlobDefined() && p instanceof Blob);\r\n        if (!valid) {\r\n            throw 'Expected Blob or File.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction metadataSpec(opt_optional) {\r\n    return new ArgSpec(metadataValidator, opt_optional);\r\n}\r\nfunction nonNegativeNumberSpec() {\r\n    function validator(p) {\r\n        var valid = isNumber(p) && p >= 0;\r\n        if (!valid) {\r\n            throw 'Expected a number 0 or greater.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction looseObjectSpec(opt_validator, opt_optional) {\r\n    function validator(p) {\r\n        var isLooseObject = p === null || (isDef(p) && p instanceof Object);\r\n        if (!isLooseObject) {\r\n            throw 'Expected an Object.';\r\n        }\r\n        if (opt_validator !== undefined && opt_validator !== null) {\r\n            opt_validator(p);\r\n        }\r\n    }\r\n    return new ArgSpec(validator, opt_optional);\r\n}\r\nfunction nullFunctionSpec(opt_optional) {\r\n    function validator(p) {\r\n        var valid = p === null || isFunction(p);\r\n        if (!valid) {\r\n            throw 'Expected a Function.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator, opt_optional);\r\n}\n\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param var_args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < var_args.length; i++) {\r\n            bb.append(var_args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(var_args);\r\n        }\r\n        else {\r\n            throw Error(\"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, opt_elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (opt_elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (opt_elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = var_args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = var_args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns true if the object is contained in the array (compared with ===).\r\n * @template T\r\n */\r\nfunction contains$1(array, elem) {\r\n    return array.indexOf(elem) !== -1;\r\n}\r\n/**\r\n * Returns a shallow copy of the array or array-like object (e.g. arguments).\r\n * @template T\r\n */\r\nfunction clone$1(arraylike) {\r\n    return Array.prototype.slice.call(arraylike);\r\n}\r\n/**\r\n * Removes the given element from the given array, if it is contained.\r\n * Directly modifies the passed-in array.\r\n * @template T\r\n */\r\nfunction remove(array, elem) {\r\n    var i = array.indexOf(elem);\r\n    if (i !== -1) {\r\n        array.splice(i, 1);\r\n    }\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(authWrapper, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(authWrapper, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            newErr = unauthenticated();\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata(authWrapper, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeNormalUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata(authWrapper, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeNormalUrl(urlPart);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject(authWrapper, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeNormalUrl(urlPart);\r\n    var method = 'DELETE';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    function handler(xhr, text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, opt_metadata) {\r\n    var metadata = clone(opt_metadata);\r\n    metadata['fullPath'] = location.path;\r\n    metadata['size'] = blob.size();\r\n    if (!metadata['contentType']) {\r\n        metadata['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadata;\r\n}\r\nfunction multipartUpload(authWrapper, location, mappings, blob, opt_metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str =\r\n                str +\r\n                    Math.random()\r\n                        .toString()\r\n                        .slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata = metadataForUpload_(location, blob, opt_metadata);\r\n    var metadataString = toResourceString(metadata, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata['fullPath'] };\r\n    var url = makeUploadUrl(urlPart);\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, opt_allowed) {\r\n    var status;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowed = opt_allowed || ['active'];\r\n    handlerCheck(contains$1(allowed, status));\r\n    return status;\r\n}\r\nfunction createResumableUpload(authWrapper, location, mappings, blob, opt_metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadata = metadataForUpload_(location, blob, opt_metadata);\r\n    var urlParams = { name: metadata['fullPath'] };\r\n    var url = makeUploadUrl(urlPart);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadata['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadata, mappings);\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    function handler(xhr, text) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(authWrapper, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr, text) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        var size = parseInt(sizeString, 10);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar resumableUploadChunkSize = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param opt_status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, opt_status, opt_progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status = new ResumableUploadStatus(0, 0);\r\n    if (opt_status) {\r\n        status.current = opt_status.current;\r\n        status.total = opt_status.total;\r\n    }\r\n    else {\r\n        status.current = 0;\r\n        status.total = blob.size();\r\n    }\r\n    if (blob.size() !== status.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status.total - status.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': status.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(authWrapper, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = opt_progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, opt_error, opt_complete) {\r\n        var asFunctions = isFunction(nextOrObserver) ||\r\n            isDef(opt_error) ||\r\n            isDef(opt_complete);\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = opt_error || null;\r\n            this.complete = opt_complete || null;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next || null;\r\n            this.error = observer.error || null;\r\n            this.complete = observer.complete || null;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\nvar UploadTaskSnapshot = /** @class */ (function () {\r\n    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\r\n        this.bytesTransferred = bytesTransferred;\r\n        this.totalBytes = totalBytes;\r\n        this.state = state;\r\n        this.metadata = metadata;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    Object.defineProperty(UploadTaskSnapshot.prototype, \"downloadURL\", {\r\n        get: function () {\r\n            if (this.metadata !== null) {\r\n                var urls = this.metadata['downloadURLs'];\r\n                if (urls != null && urls[0] != null) {\r\n                    return urls[0];\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return UploadTaskSnapshot;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\nfunction async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        resolve(true).then(function () {\r\n            f.apply(null, argsToForward);\r\n        });\r\n    };\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob The blob to upload.\r\n     */\r\n    function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {\r\n        if (metadata === void 0) { metadata = null; }\r\n        var _this = this;\r\n        this.transferred_ = 0;\r\n        this.needToFetchStatus_ = false;\r\n        this.needToFetchMetadata_ = false;\r\n        this.observers_ = [];\r\n        this.error_ = null;\r\n        this.uploadUrl_ = null;\r\n        this.request_ = null;\r\n        this.chunkMultiplier_ = 1;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.ref_ = ref;\r\n        this.authWrapper_ = authWrapper;\r\n        this.location_ = location;\r\n        this.blob_ = blob;\r\n        this.metadata_ = metadata;\r\n        this.mappings_ = mappings;\r\n        this.resumable_ = this.shouldDoResumable_(this.blob_);\r\n        this.state_ = InternalTaskState.RUNNING;\r\n        this.errorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            _this.chunkMultiplier_ = 1;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.needToFetchStatus_ = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.metadataErrorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.promise_ = make(function (resolve$$1, reject$$1) {\r\n            _this.resolve_ = resolve$$1;\r\n            _this.reject_ = reject$$1;\r\n            _this.start_();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this.promise_.then(null, function () { });\r\n    }\r\n    UploadTask.prototype.makeProgressCallback_ = function () {\r\n        var _this = this;\r\n        var sizeBefore = this.transferred_;\r\n        return function (loaded, total) {\r\n            _this.updateProgress_(sizeBefore + loaded);\r\n        };\r\n    };\r\n    UploadTask.prototype.shouldDoResumable_ = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype.start_ = function () {\r\n        if (this.state_ !== InternalTaskState.RUNNING) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this.request_ !== null) {\r\n            return;\r\n        }\r\n        if (this.resumable_) {\r\n            if (this.uploadUrl_ === null) {\r\n                this.createResumable_();\r\n            }\r\n            else {\r\n                if (this.needToFetchStatus_) {\r\n                    this.fetchStatus_();\r\n                }\r\n                else {\r\n                    if (this.needToFetchMetadata_) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this.fetchMetadata_();\r\n                    }\r\n                    else {\r\n                        this.continueUpload_();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.oneShotUpload_();\r\n        }\r\n    };\r\n    UploadTask.prototype.resolveToken_ = function (callback) {\r\n        var _this = this;\r\n        this.authWrapper_.getAuthToken().then(function (authToken) {\r\n            switch (_this.state_) {\r\n                case InternalTaskState.RUNNING:\r\n                    callback(authToken);\r\n                    break;\r\n                case InternalTaskState.CANCELING:\r\n                    _this.transition_(InternalTaskState.CANCELED);\r\n                    break;\r\n                case InternalTaskState.PAUSING:\r\n                    _this.transition_(InternalTaskState.PAUSED);\r\n                    break;\r\n                default:\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype.createResumable_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this.request_ = null;\r\n                _this.uploadUrl_ = url;\r\n                _this.needToFetchStatus_ = false;\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.fetchStatus_ = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);\r\n            var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this.request_ = null;\r\n                _this.updateProgress_(status.current);\r\n                _this.needToFetchStatus_ = false;\r\n                if (status.finalized) {\r\n                    _this.needToFetchMetadata_ = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.continueUpload_ = function () {\r\n        var _this = this;\r\n        var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        var status = new ResumableUploadStatus(this.transferred_, this.blob_.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\r\n            }\r\n            catch (e) {\r\n                _this.error_ = e;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n                return;\r\n            }\r\n            var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = uploadRequest;\r\n            uploadRequest\r\n                .getPromise()\r\n                .then(function (newStatus) {\r\n                _this.increaseMultiplier_();\r\n                _this.request_ = null;\r\n                _this.updateProgress_(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this.metadata_ = newStatus.metadata;\r\n                    _this.transition_(InternalTaskState.SUCCESS);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.increaseMultiplier_ = function () {\r\n        var currentSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this.chunkMultiplier_ *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype.fetchMetadata_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);\r\n            var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.metadataErrorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.oneShotUpload_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.updateProgress_(_this.blob_.size());\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.updateProgress_ = function (transferred) {\r\n        var old = this.transferred_;\r\n        this.transferred_ = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this.transferred_ !== old) {\r\n            this.notifyObservers_();\r\n        }\r\n    };\r\n    UploadTask.prototype.transition_ = function (state) {\r\n        if (this.state_ === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case InternalTaskState.CANCELING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this.state_ === InternalTaskState.PAUSED;\r\n                this.state_ = state;\r\n                if (wasPaused) {\r\n                    this.notifyObservers_();\r\n                    this.start_();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.CANCELED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.error_ = canceled();\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.ERROR:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.SUCCESS:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this.state_) {\r\n            case InternalTaskState.PAUSING:\r\n                this.transition_(InternalTaskState.PAUSED);\r\n                break;\r\n            case InternalTaskState.CANCELING:\r\n                this.transition_(InternalTaskState.CANCELED);\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                this.start_();\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this.state_);\r\n            return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type The type of event to listen for.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        if (nextOrObserver === void 0) { nextOrObserver = undefined; }\r\n        if (error === void 0) { error = undefined; }\r\n        if (completed === void 0) { completed = undefined; }\r\n        function typeValidator(_p) {\r\n            if (type !== TaskEvent.STATE_CHANGED) {\r\n                throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\r\n            }\r\n        }\r\n        var nextOrObserverMessage = 'Expected a function or an Object with one of ' +\r\n            '`next`, `error`, `complete` properties.';\r\n        var nextValidator = nullFunctionSpec(true).validator;\r\n        var observerValidator = looseObjectSpec(null, true).validator;\r\n        function nextOrObserverValidator(p) {\r\n            try {\r\n                nextValidator(p);\r\n                return;\r\n            }\r\n            catch (e) { }\r\n            try {\r\n                observerValidator(p);\r\n                var anyDefined = isJustDef(p['next']) ||\r\n                    isJustDef(p['error']) ||\r\n                    isJustDef(p['complete']);\r\n                if (!anyDefined) {\r\n                    throw '';\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n        }\r\n        var specs = [\r\n            stringSpec(typeValidator),\r\n            looseObjectSpec(nextOrObserverValidator, true),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        validate('on', specs, arguments);\r\n        var self = this;\r\n        function makeBinder(specs) {\r\n            function binder(nextOrObserver, error, opt_complete) {\r\n                if (specs !== null) {\r\n                    validate('on', specs, arguments);\r\n                }\r\n                var observer = new Observer(nextOrObserver, error, completed);\r\n                self.addObserver_(observer);\r\n                return function () {\r\n                    self.removeObserver_(observer);\r\n                };\r\n            }\r\n            return binder;\r\n        }\r\n        function binderNextOrObserverValidator(p) {\r\n            if (p === null) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n            nextOrObserverValidator(p);\r\n        }\r\n        var binderSpecs = [\r\n            looseObjectSpec(binderNextOrObserverValidator),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        var typeOnly = !(isJustDef(nextOrObserver) ||\r\n            isJustDef(error) ||\r\n            isJustDef(completed));\r\n        if (typeOnly) {\r\n            return makeBinder(binderSpecs);\r\n        }\r\n        else {\r\n            return makeBinder(null)(nextOrObserver, error, completed);\r\n        }\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this.promise_.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype.addObserver_ = function (observer) {\r\n        this.observers_.push(observer);\r\n        this.notifyObserver_(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype.removeObserver_ = function (observer) {\r\n        remove(this.observers_, observer);\r\n    };\r\n    UploadTask.prototype.notifyObservers_ = function () {\r\n        var _this = this;\r\n        this.finishPromise_();\r\n        var observers = clone$1(this.observers_);\r\n        observers.forEach(function (observer) {\r\n            _this.notifyObserver_(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype.finishPromise_ = function () {\r\n        if (this.resolve_ !== null) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this.state_)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this.resolve_.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this.reject_;\r\n                    async(toCall.bind(null, this.error_))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this.resolve_ = null;\r\n                this.reject_ = null;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype.notifyObserver_ = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this.state_);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next !== null) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete !== null) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error !== null) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error !== null) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        validate('resume', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.PAUSED ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.RUNNING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        validate('pause', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.PAUSING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        validate('cancel', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.CANCELING);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(authWrapper, location) {\r\n        this.authWrapper = authWrapper;\r\n        if (location instanceof Location) {\r\n            this.location = location;\r\n        }\r\n        else {\r\n            this.location = Location.makeFromUrl(location);\r\n        }\r\n    }\r\n    /**\r\n     * @return The URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        validate('toString', [], arguments);\r\n        return 'gs://' + this.location.bucket + '/' + this.location.path;\r\n    };\r\n    Reference.prototype.newRef = function (authWrapper, location) {\r\n        return new Reference(authWrapper, location);\r\n    };\r\n    Reference.prototype.mappings = function () {\r\n        return getMappings();\r\n    };\r\n    /**\r\n     * @return A reference to the object obtained by\r\n     *     appending childPath, removing any duplicate, beginning, or trailing\r\n     *     slashes.\r\n     */\r\n    Reference.prototype.child = function (childPath) {\r\n        validate('child', [stringSpec()], arguments);\r\n        var newPath = child(this.location.path, childPath);\r\n        var location = new Location(this.location.bucket, newPath);\r\n        return this.newRef(this.authWrapper, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        /**\r\n         * @return A reference to the parent of the\r\n         *     current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var newPath = parent(this.location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this.location.bucket, newPath);\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * @return An reference to the root of this\r\n         *     object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this.location.bucket, '');\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this.location.bucket;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this.location.path;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        get: function () {\r\n            return lastComponent(this.location.path);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        get: function () {\r\n            return this.authWrapper.service();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data The blob to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.put = function (data, metadata) {\r\n        if (metadata === void 0) { metadata = null; }\r\n        validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\r\n        this.throwIfRoot_('put');\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data), metadata);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param string The string to upload.\r\n     * @param opt_format The format of the string to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.putString = function (string, format, opt_metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        validate('putString', [\r\n            stringSpec(),\r\n            stringSpec(formatValidator, true),\r\n            metadataSpec(true)\r\n        ], arguments);\r\n        this.throwIfRoot_('putString');\r\n        var data = dataFromString(format, string);\r\n        var metadata = clone(opt_metadata);\r\n        if (!isDef(metadata['contentType']) && isDef(data.contentType)) {\r\n            metadata['contentType'] = data.contentType;\r\n        }\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data.data, true), metadata);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @return A promise that resolves if the deletion succeeds.\r\n     */\r\n    Reference.prototype.delete = function () {\r\n        validate('delete', [], arguments);\r\n        this.throwIfRoot_('delete');\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = deleteObject(self.authWrapper, self.location);\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     *     A promise that resolves with the metadata for this object. If this\r\n     *     object doesn't exist or metadata cannot be retreived, the promise is\r\n     *     rejected.\r\n     */\r\n    Reference.prototype.getMetadata = function () {\r\n        validate('getMetadata', [], arguments);\r\n        this.throwIfRoot_('getMetadata');\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getMetadata(self.authWrapper, self.location, self.mappings());\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata The new metadata for the object.\r\n     *     Only values that have been explicitly set will be changed. Explicitly\r\n     *     setting a value to null will remove the metadata.\r\n     * @return A promise that resolves\r\n     *     with the new metadata for this object.\r\n     *     @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    Reference.prototype.updateMetadata = function (metadata) {\r\n        validate('updateMetadata', [metadataSpec()], arguments);\r\n        this.throwIfRoot_('updateMetadata');\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = updateMetadata(self.authWrapper, self.location, metadata, self.mappings());\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * @return A promise that resolves with the download\r\n     *     URL for this object.\r\n     */\r\n    Reference.prototype.getDownloadURL = function () {\r\n        validate('getDownloadURL', [], arguments);\r\n        this.throwIfRoot_('getDownloadURL');\r\n        return this.getMetadata().then(function (metadata) {\r\n            var url = metadata['downloadURLs'][0];\r\n            if (isDef(url)) {\r\n                return url;\r\n            }\r\n            else {\r\n                throw noDownloadURL();\r\n            }\r\n        });\r\n    };\r\n    Reference.prototype.throwIfRoot_ = function (name) {\r\n        if (this.location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (appDelete) {\r\n        if (appDelete === void 0) { appDelete = false; }\r\n    };\r\n    return FailRequest;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar RequestMap = /** @class */ (function () {\r\n    function RequestMap() {\r\n        this.map_ = {};\r\n        this.id_ = minSafeInteger;\r\n    }\r\n    /**\r\n     * Registers the given request with this map.\r\n     * The request is unregistered when it completes.\r\n     * @param r The request to register.\r\n     */\r\n    RequestMap.prototype.addRequest = function (r) {\r\n        var id = this.id_;\r\n        this.id_++;\r\n        this.map_[id] = r;\r\n        var self = this;\r\n        function unmap() {\r\n            delete self.map_[id];\r\n        }\r\n        r.getPromise().then(unmap, unmap);\r\n    };\r\n    /**\r\n     * Cancels all registered requests.\r\n     */\r\n    RequestMap.prototype.clear = function () {\r\n        forEach(this.map_, function (key, val) {\r\n            if (val) {\r\n                val.cancel(true);\r\n            }\r\n        });\r\n        this.map_ = {};\r\n    };\r\n    return RequestMap;\r\n}());\n\n/**\r\n * @param app If null, getAuthToken always resolves with null.\r\n * @param service The storage service associated with this auth wrapper.\r\n *     Untyped to avoid circular type dependencies.\r\n * @struct\r\n */\r\nvar AuthWrapper = /** @class */ (function () {\r\n    function AuthWrapper(app, maker, requestMaker, service, pool) {\r\n        this.bucket_ = null;\r\n        this.deleted_ = false;\r\n        this.app_ = app;\r\n        if (this.app_ !== null) {\r\n            var options = this.app_.options;\r\n            if (isDef(options)) {\r\n                this.bucket_ = AuthWrapper.extractBucket_(options);\r\n            }\r\n        }\r\n        this.storageRefMaker_ = maker;\r\n        this.requestMaker_ = requestMaker;\r\n        this.pool_ = pool;\r\n        this.service_ = service;\r\n        this.maxOperationRetryTime_ = defaultMaxOperationRetryTime;\r\n        this.maxUploadRetryTime_ = defaultMaxUploadRetryTime;\r\n        this.requestMap_ = new RequestMap();\r\n    }\r\n    AuthWrapper.extractBucket_ = function (config) {\r\n        var bucketString = config[configOption] || null;\r\n        if (bucketString == null) {\r\n            return null;\r\n        }\r\n        var loc = Location.makeFromBucketSpec(bucketString);\r\n        return loc.bucket;\r\n    };\r\n    AuthWrapper.prototype.getAuthToken = function () {\r\n        // TODO(andysoto): remove ifDef checks after firebase-app implements stubs\r\n        // (b/28673818).\r\n        if (this.app_ !== null &&\r\n            isDef(this.app_.INTERNAL) &&\r\n            isDef(this.app_.INTERNAL.getToken)) {\r\n            return this.app_.INTERNAL.getToken().then(function (response) {\r\n                if (response !== null) {\r\n                    return response.accessToken;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }, function (_error) {\r\n                return null;\r\n            });\r\n        }\r\n        else {\r\n            return resolve(null);\r\n        }\r\n    };\r\n    AuthWrapper.prototype.bucket = function () {\r\n        if (this.deleted_) {\r\n            throw appDeleted();\r\n        }\r\n        else {\r\n            return this.bucket_;\r\n        }\r\n    };\r\n    /**\r\n     * The service associated with this auth wrapper. Untyped to avoid circular\r\n     * type dependencies.\r\n     */\r\n    AuthWrapper.prototype.service = function () {\r\n        return this.service_;\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\r\n     * at the given Location.\r\n     * @param loc The Location.\r\n     * @return Actually a firebaseStorage.Reference, typing not allowed\r\n     *     because of circular dependency problems.\r\n     */\r\n    AuthWrapper.prototype.makeStorageReference = function (loc) {\r\n        return this.storageRefMaker_(this, loc);\r\n    };\r\n    AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {\r\n        if (!this.deleted_) {\r\n            var request = this.requestMaker_(requestInfo, authToken, this.pool_);\r\n            this.requestMap_.addRequest(request);\r\n            return request;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    AuthWrapper.prototype.deleteApp = function () {\r\n        this.deleted_ = true;\r\n        this.app_ = null;\r\n        this.requestMap_.clear();\r\n    };\r\n    AuthWrapper.prototype.maxUploadRetryTime = function () {\r\n        return this.maxUploadRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {\r\n        this.maxUploadRetryTime_ = time;\r\n    };\r\n    AuthWrapper.prototype.maxOperationRetryTime = function () {\r\n        return this.maxOperationRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {\r\n        this.maxOperationRetryTime_ = time;\r\n    };\r\n    return AuthWrapper;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, callback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    function triggerCallback() {\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, arguments);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    function handler(success) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.apply(null, arguments);\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.apply(null, arguments);\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n * @template T\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        this.pendingXhr_ = null;\r\n        this.backoffId_ = null;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        var self = this;\r\n        this.promise_ = make(function (resolve$$1, reject$$1) {\r\n            self.resolve_ = resolve$$1;\r\n            self.reject_ = reject$$1;\r\n            self.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled$$1) {\r\n            if (canceled$$1) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var xhr = self.pool_.createXhrIo();\r\n            self.pendingXhr_ = xhr;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                xhr.addUploadProgressListener(progressListener);\r\n            }\r\n            xhr\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function (xhr) {\r\n                if (self.progressCallback_ !== null) {\r\n                    xhr.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingXhr_ = null;\r\n                xhr = xhr;\r\n                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = xhr.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = contains$1(self.successCodes_, status);\r\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve$$1 = self.resolve_;\r\n            var reject$$1 = self.reject_;\r\n            var xhr = status.xhr;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(xhr, xhr.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve$$1(result);\r\n                    }\r\n                    else {\r\n                        resolve$$1();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject$$1(e);\r\n                }\r\n            }\r\n            else {\r\n                if (xhr !== null) {\r\n                    var err = unknown();\r\n                    err.setServerResponseProp(xhr.getResponseText());\r\n                    if (self.errorCallback_) {\r\n                        reject$$1(self.errorCallback_(xhr, err));\r\n                    }\r\n                    else {\r\n                        reject$$1(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_\r\n                            ? appDeleted()\r\n                            : canceled();\r\n                        reject$$1(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject$$1(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingXhr_ !== null) {\r\n            this.pendingXhr_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = contains$1(extraRetryCodes, status);\r\n        var isRequestSpecificRetryCode = contains$1(this.additionalRetryCodes_, status);\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, xhr, opt_canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.xhr = xhr;\r\n        this.canceled = !!opt_canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers) {\r\n    var number = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\r\n    headers['X-Firebase-Storage-Version'] = 'webjs/' + number;\r\n}\r\n/**\r\n * @template T\r\n */\r\nfunction makeRequest(requestInfo, authToken, pool) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = clone(requestInfo.headers);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\r\nvar Service = /** @class */ (function () {\r\n    function Service(app, pool, url) {\r\n        this.bucket_ = null;\r\n        function maker(authWrapper, loc) {\r\n            return new Reference(authWrapper, loc);\r\n        }\r\n        this.authWrapper_ = new AuthWrapper(app, maker, makeRequest, this, pool);\r\n        this.app_ = app;\r\n        if (url != null) {\r\n            this.bucket_ = Location.makeFromBucketSpec(url);\r\n        }\r\n        else {\r\n            var authWrapperBucket = this.authWrapper_.bucket();\r\n            if (authWrapperBucket != null) {\r\n                this.bucket_ = new Location(authWrapperBucket, '');\r\n            }\r\n        }\r\n        this.internals_ = new ServiceInternals(this);\r\n    }\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    Service.prototype.ref = function (path) {\r\n        function validator(path) {\r\n            if (/^[A-Za-z]+:\\/\\//.test(path)) {\r\n                throw 'Expected child path but got a URL, use refFromURL instead.';\r\n            }\r\n        }\r\n        validate('ref', [stringSpec(validator, true)], arguments);\r\n        if (this.bucket_ == null) {\r\n            throw new Error('No Storage Bucket defined in Firebase Options.');\r\n        }\r\n        var ref = new Reference(this.authWrapper_, this.bucket_);\r\n        if (path != null) {\r\n            return ref.child(path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    Service.prototype.refFromURL = function (url) {\r\n        function validator(p) {\r\n            if (!/^[A-Za-z]+:\\/\\//.test(p)) {\r\n                throw 'Expected full URL but got a child path, use ref instead.';\r\n            }\r\n            try {\r\n                Location.makeFromUrl(p);\r\n            }\r\n            catch (e) {\r\n                throw 'Expected valid full URL but got an invalid one.';\r\n            }\r\n        }\r\n        validate('refFromURL', [stringSpec(validator, false)], arguments);\r\n        return new Reference(this.authWrapper_, url);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this.authWrapper_.maxUploadRetryTime();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Service.prototype.setMaxUploadRetryTime = function (time) {\r\n        validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxUploadRetryTime(time);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"maxOperationRetryTime\", {\r\n        get: function () {\r\n            return this.authWrapper_.maxOperationRetryTime();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Service.prototype.setMaxOperationRetryTime = function (time) {\r\n        validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxOperationRetryTime(time);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Service.prototype, \"INTERNAL\", {\r\n        get: function () {\r\n            return this.internals_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Service;\r\n}());\r\n/**\r\n * @struct\r\n */\r\nvar ServiceInternals = /** @class */ (function () {\r\n    function ServiceInternals(service) {\r\n        this.service_ = service;\r\n    }\r\n    /**\r\n     * Called when the associated app is deleted.\r\n     * @see {!fbs.AuthWrapper.prototype.deleteApp}\r\n     */\r\n    ServiceInternals.prototype.delete = function () {\r\n        this.service_.authWrapper_.deleteApp();\r\n        return resolve(undefined);\r\n    };\r\n    return ServiceInternals;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(app, unused, opt_url) {\r\n    return new Service(app, new XhrIoPool(), opt_url);\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: Service,\r\n        Reference: Reference\r\n    };\r\n    instance.INTERNAL.registerService(STORAGE_TYPE, factory, namespaceExports, undefined, \r\n    // Allow multiple storage instances per app.\r\n    true);\r\n}\r\nregisterStorage(firebase);\n\nexport { registerStorage };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/@firebase/storage/dist/index.esm.js\n// module id = wU43\n// module chunks = 0"],"sourceRoot":""}